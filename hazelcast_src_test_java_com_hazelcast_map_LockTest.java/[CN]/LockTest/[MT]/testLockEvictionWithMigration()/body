{
  final StaticNodeFactory nodeFactory=createNodeFactory(3);
  final Config config=new Config();
  final HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);
  final String name="testLockEvictionWithMigration";
  final IMap map=instance1.getMap(name);
  for (int i=0; i < 1000; i++) {
    map.lock(i,10,TimeUnit.SECONDS);
  }
  final HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);
  final HazelcastInstance instance3=nodeFactory.newHazelcastInstance(config);
  Thread.sleep(3000);
  for (int i=0; i < 1000; i++) {
    assertTrue(map.isLocked(i));
  }
  final CountDownLatch latch=new CountDownLatch(1000);
  Thread t=new Thread(new Runnable(){
    public void run(){
      for (int i=0; i < 1000; i++) {
        map.lock(i);
        latch.countDown();
      }
    }
  }
);
  t.start();
  assertTrue(latch.await(15,TimeUnit.SECONDS));
}
