{
  PagingPredicate pagingPredicate=predicate instanceof PagingPredicate ? (PagingPredicate)predicate : null;
  List<QueryableEntry> resultList=new LinkedList<QueryableEntry>();
  PartitionContainer partitionContainer=mapServiceContext.getPartitionContainer(partitionId);
  MapContainer mapContainer=mapServiceContext.getMapContainer(mapName);
  Iterator<Record> iterator=partitionContainer.getRecordStore(mapName).loadAwareIterator(getNow(),false);
  Map.Entry<Integer,Map.Entry> nearestAnchorEntry=getNearestAnchorEntry(pagingPredicate);
  while (iterator.hasNext()) {
    Record record=iterator.next();
    Data key=record.getKey();
    Object value=Records.getValueOrCachedValue(record,serializationService);
    if (value == null) {
      continue;
    }
    QueryableEntry queryEntry=mapContainer.newQueryEntry(key,value);
    if (predicate.apply(queryEntry) && compareAnchor(pagingPredicate,queryEntry,nearestAnchorEntry)) {
      resultList.add(queryEntry);
    }
  }
  return getSortedSubList(resultList,pagingPredicate,nearestAnchorEntry);
}
