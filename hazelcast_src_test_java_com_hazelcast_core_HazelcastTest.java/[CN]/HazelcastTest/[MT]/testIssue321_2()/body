{
  final IMap<Integer,Integer> imap=Hazelcast.getMap("testIssue321_2");
  final BlockingQueue<EntryEvent<Integer,Integer>> events1=new LinkedBlockingQueue<EntryEvent<Integer,Integer>>();
  final BlockingQueue<EntryEvent<Integer,Integer>> events2=new LinkedBlockingQueue<EntryEvent<Integer,Integer>>();
  imap.addEntryListener(new EntryAdapter(){
    @Override public void entryAdded(    EntryEvent event){
      events1.add(event);
    }
  }
,true);
  Thread.sleep(50L);
  imap.addEntryListener(new EntryAdapter(){
    @Override public void entryAdded(    EntryEvent event){
      events2.add(event);
    }
  }
,false);
  imap.put(1,1);
  final EntryEvent<Integer,Integer> event1=events1.poll(10,TimeUnit.MILLISECONDS);
  final EntryEvent<Integer,Integer> event2=events2.poll(10,TimeUnit.MILLISECONDS);
  assertNotNull(event1);
  assertNotNull(event2);
  assertNotNull(event1.getValue());
  assertNull(event2.getValue());
}
