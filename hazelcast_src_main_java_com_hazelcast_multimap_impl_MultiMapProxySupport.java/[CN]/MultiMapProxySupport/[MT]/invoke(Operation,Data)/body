{
  final NodeEngine nodeEngine=getNodeEngine();
  try {
    int partitionId=nodeEngine.getPartitionService().getPartitionId(dataKey);
    Future f;
    Object o;
    if (config.isStatisticsEnabled()) {
      long time=System.currentTimeMillis();
      f=nodeEngine.getOperationService().invokeOnPartition(MultiMapService.SERVICE_NAME,operation,partitionId);
      o=f.get();
      if (operation instanceof PutOperation) {
        getService().getLocalMultiMapStatsImpl(name).incrementPuts(System.currentTimeMillis() - time);
      }
 else       if (operation instanceof RemoveOperation || operation instanceof RemoveAllOperation) {
        getService().getLocalMultiMapStatsImpl(name).incrementRemoves(System.currentTimeMillis() - time);
      }
 else       if (operation instanceof GetAllOperation) {
        getService().getLocalMultiMapStatsImpl(name).incrementGets(System.currentTimeMillis() - time);
      }
    }
 else {
      f=nodeEngine.getOperationService().invokeOnPartition(MultiMapService.SERVICE_NAME,operation,partitionId);
      o=f.get();
    }
    return nodeEngine.toObject(o);
  }
 catch (  Throwable throwable) {
    throw ExceptionUtil.rethrow(throwable);
  }
}
