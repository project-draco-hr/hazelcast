{
  ThreadContext.get().setCurrentFactory(node.factory);
  boolean readPackets=false;
  boolean readProcessables=false;
  while (running) {
    try {
      threadWatcher.incrementRunCount();
      readPackets=(dequeuePackets() != 0);
      readProcessables=(dequeueProcessables() != 0);
      if (!readPackets && !readProcessables) {
        try {
          long startWait=System.nanoTime();
          LockSupport.parkNanos(TimeUnit.MICROSECONDS.toNanos(1000));
          long now=System.nanoTime();
          threadWatcher.addWait((now - startWait),now);
          checkPeriodics();
        }
 catch (        Exception e) {
          node.handleInterruptedException(Thread.currentThread(),e);
        }
      }
    }
 catch (    OutOfMemoryError e) {
      node.onOutOfMemory(e);
    }
catch (    Throwable e) {
      logger.log(Level.SEVERE,e.getMessage(),e);
    }
  }
  packetQueue.clear();
  processableQueue.clear();
}
