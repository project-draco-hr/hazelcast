{
  if (members == null || members.length == 0)   return;
  logger.log(Level.FINEST,"Adding members -> " + Arrays.toString(members));
  lock.lock();
  try {
    Collection<MemberImpl> newMembers=new LinkedList<MemberImpl>();
    Map<Address,MemberImpl> memberMap=membersRef.get();
    if (memberMap == null) {
      memberMap=new LinkedHashMap<Address,MemberImpl>();
    }
 else {
      memberMap=new LinkedHashMap<Address,MemberImpl>(memberMap);
    }
    for (    MemberImpl member : members) {
      MemberImpl oldMember=memberMap.remove(member.getAddress());
      if (oldMember == null) {
        newMembers.add(member);
      }
 else       if (!oldMember.isLiteMember()) {
        dataMemberCount.decrementAndGet();
      }
      memberMap.put(member.getAddress(),member);
      if (!member.isLiteMember()) {
        dataMemberCount.incrementAndGet();
      }
    }
    setMembers(memberMap);
    Collection<MembershipAwareService> services=nodeService.getServices(MembershipAwareService.class,true);
    for (    MemberImpl member : newMembers) {
      for (      MembershipAwareService service : services) {
        service.memberAdded(member);
      }
      sendMembershipEventNotifications(member,true);
    }
  }
  finally {
    lock.unlock();
  }
}
