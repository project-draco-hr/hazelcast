{
  final HazelcastInstance hz1=Hazelcast.newHazelcastInstance();
  final HazelcastInstance hz2=Hazelcast.newHazelcastInstance();
  final HazelcastInstance c=HazelcastClient.newHazelcastClient(new ClientConfig());
  final Thread thread=new Thread(){
    public void run(){
      final IMap<Object,Object> map=c.getMap("test");
      map.addEntryListener(new EntryAdapter<Object,Object>(){
        public void entryAdded(        EntryEvent<Object,Object> event){
          System.err.println("event = " + event);
        }
      }
,true);
      for (int i=0; i < 40; i++) {
        try {
          map.put(System.currentTimeMillis(),Math.random());
          System.err.println("put");
          sleep(500);
        }
 catch (        Exception e) {
          System.err.println("-------");
          e.printStackTrace();
        }
      }
    }
  }
;
  thread.start();
  Thread.sleep(5000);
  hz1.getLifecycleService().terminate();
  thread.join();
  c.getLifecycleService().terminate();
  hz2.getLifecycleService().terminate();
}
