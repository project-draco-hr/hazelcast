{
  final long now=Clock.currentTimeMillis();
  final Segment<K,V> segment=segments[0];
  final HashEntry<K,V>[] currentTable=segment.table;
  int nextTableIndex;
  if (tableIndex >= 0 && tableIndex < segment.table.length) {
    nextTableIndex=tableIndex;
  }
 else {
    nextTableIndex=currentTable.length - 1;
  }
  int counter=0;
  while (nextTableIndex >= 0 && counter < size) {
    HashEntry<K,V> nextEntry=currentTable[nextTableIndex--];
    while (nextEntry != null) {
      if (nextEntry.key() != null) {
        final V value=nextEntry.value();
        if (isValidForFetching(value,now)) {
          K key=nextEntry.key();
          entries.add(new AbstractMap.SimpleEntry<K,V>(key,value));
          counter++;
        }
      }
      nextEntry=nextEntry.next;
    }
  }
  return nextTableIndex;
}
