{
  ensureOpen();
  if (key == null) {
    throw new NullPointerException(NULL_KEY_IS_NOT_ALLOWED);
  }
  if (value == null) {
    throw new NullPointerException(NULL_VALUE_IS_NOT_ALLOWED);
  }
  validateConfiguredTypes(true,key,value);
  final Integer completionId=registerCompletionLatch(1);
  final InternalCompletableFuture<Object> f=putAsyncInternal(key,value,expiryPolicy,false,completionId);
  try {
    f.get();
    waitCompletionLatch(completionId);
  }
 catch (  Throwable e) {
    deregisterCompletionLatch(completionId);
    throw ExceptionUtil.rethrowAllowedTypeFirst(e,CacheException.class);
  }
}
