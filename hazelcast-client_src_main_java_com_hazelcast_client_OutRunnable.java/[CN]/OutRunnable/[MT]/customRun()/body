{
  Call call=queue.poll(100,TimeUnit.MILLISECONDS);
  try {
    if (call == null)     return;
    int count=0;
    while (call != null) {
      if (call != RECONNECT_CALL) {
        callMap.put(call.getId(),call);
      }
      Connection oldConnection=connection;
      connection=client.getConnectionManager().getConnection();
      if (restoredConnection(oldConnection,connection)) {
        resubscribe(call,oldConnection);
      }
 else       if (connection != null) {
        if (call != RECONNECT_CALL) {
          logger.log(Level.FINEST,"Sending: " + call);
          writer.write(connection,call.getRequest());
        }
      }
 else {
        clusterIsDown();
      }
      if (reconnectionCalls != null) {
        break;
      }
      call=null;
      if (count++ < 24) {
        call=queue.poll();
      }
    }
    if (connection != null) {
      writer.flush(connection);
    }
    if (call != null && reconnectionCalls != null && reconnectionCalls.contains(call)) {
      Object response=null;
      for (int i=0; i < 20 && response == null; i++) {
        response=call.getResponse(500,TimeUnit.MILLISECONDS);
      }
      if (response != null) {
        if (reconnectionCalls.remove(call) && reconnectionCalls.isEmpty()) {
          reconnectionCalls=null;
        }
      }
 else {
        logger.log(Level.WARNING,"There is no responce on reconnection call:" + call);
      }
    }
  }
 catch (  Throwable io) {
    logger.log(Level.WARNING,"OutRunnable got exception:" + io.getMessage());
    io.printStackTrace();
    if (call != null) {
      enQueue(call);
    }
    client.getConnectionManager().destroyConnection(connection);
  }
}
