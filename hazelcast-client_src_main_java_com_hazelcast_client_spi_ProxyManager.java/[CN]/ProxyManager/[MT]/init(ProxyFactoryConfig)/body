{
  register(MapService.SERVICE_NAME,new ClientProxyFactory(){
    public ClientProxy create(    Object id){
      return new ClientMapProxy(MapService.SERVICE_NAME,String.valueOf(id));
    }
  }
);
  register(QueueService.SERVICE_NAME,new ClientProxyFactory(){
    public ClientProxy create(    Object id){
      return new ClientQueueProxy(QueueService.SERVICE_NAME,String.valueOf(id));
    }
  }
);
  register(CollectionService.SERVICE_NAME,new ClientProxyFactory(){
    public ClientProxy create(    Object id){
      String name=(String)id;
      return new ClientMultiMapProxy(CollectionService.SERVICE_NAME,name);
    }
  }
);
  register(SemaphoreService.SERVICE_NAME,new ClientProxyFactory(){
    public ClientProxy create(    Object id){
      return new ClientSemaphoreProxy(SemaphoreService.SERVICE_NAME,String.valueOf(id));
    }
  }
);
  register(TopicService.SERVICE_NAME,new ClientProxyFactory(){
    public ClientProxy create(    Object id){
      return new ClientTopicProxy(TopicService.SERVICE_NAME,String.valueOf(id));
    }
  }
);
  register(AtomicLongService.SERVICE_NAME,new ClientProxyFactory(){
    public ClientProxy create(    Object id){
      return new ClientAtomicLongProxy(AtomicLongService.SERVICE_NAME,String.valueOf(id));
    }
  }
);
  register(DistributedExecutorService.SERVICE_NAME,new ClientProxyFactory(){
    public ClientProxy create(    Object id){
      return new ClientExecutorServiceProxy(DistributedExecutorService.SERVICE_NAME,String.valueOf(id));
    }
  }
);
  register(LockServiceImpl.SERVICE_NAME,new ClientProxyFactory(){
    public ClientProxy create(    Object id){
      return new ClientLockProxy(LockServiceImpl.SERVICE_NAME,id);
    }
  }
);
  register(IdGeneratorService.SERVICE_NAME,new ClientProxyFactory(){
    public ClientProxy create(    Object id){
      String name=String.valueOf(id);
      IAtomicLong atomicLong=client.getAtomicLong(IdGeneratorService.ATOMIC_LONG_NAME + name);
      return new ClientIdGeneratorProxy(IdGeneratorService.SERVICE_NAME,name,atomicLong);
    }
  }
);
  register(CountDownLatchService.SERVICE_NAME,new ClientProxyFactory(){
    public ClientProxy create(    Object id){
      return new ClientCountDownLatchProxy(CountDownLatchService.SERVICE_NAME,String.valueOf(id));
    }
  }
);
  for (  Map.Entry<String,ClientProxyFactory> entry : config.getFactories().entrySet()) {
    register(entry.getKey(),entry.getValue());
  }
}
