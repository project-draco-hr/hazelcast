{
  if (timeout == -1) {
    timeout=Long.MAX_VALUE;
  }
  Object removedItem=null;
  long start=Clock.currentTimeMillis();
  while (removedItem == null && timeout >= 0) {
    Data key=takeKey(name,timeout);
    if (key == null) {
      return null;
    }
    IMap imap=getStorageMap(name);
    removedItem=imap.remove(key);
    if (removedItem != null) {
      ThreadContext threadContext=ThreadContext.get();
      TransactionImpl txn=threadContext.getCallContext().getTransaction();
      final Data removedItemData=toData(removedItem);
      if (txn != null && txn.getStatus() == Transaction.TXN_STATUS_ACTIVE) {
        txn.attachRemoveOp(name,key,removedItemData,true);
      }
      fireQueueEvent(name,EntryEventType.REMOVED,removedItemData);
    }
    long now=Clock.currentTimeMillis();
    timeout-=(now - start);
    start=now;
  }
  return removedItem;
}
