{
  checkServiceThread();
  executeLocally(new FallThroughRunnable(){
    public void doRun(){
      Set<String> instanceNames=node.factory.getLongInstanceNames();
      final Map<String,Set<Long>> queueKeys=new HashMap<String,Set<Long>>();
      for (      String instanceName : instanceNames) {
        if (instanceName.startsWith("q:")) {
          Set<Long> keys=getStorageMap(instanceName).keySet();
          if (keys.size() > 0) {
            queueKeys.put(instanceName,new TreeSet<Long>(keys));
          }
        }
      }
      enqueueAndReturn(new Processable(){
        public void process(){
          Set<String> queueNames=queueKeys.keySet();
          for (          String queueName : queueNames) {
            BQ q=getOrCreateBQ(queueName);
            Set<Long> keys=queueKeys.get(queueName);
            if (keys != null) {
              for (              Long key : keys) {
                Data keyData=toData(key);
                q.keys.add(keyData);
                q.queue.add(new QData(keyData));
                q.nextKey=Math.max(q.nextKey,key);
              }
              q.nextKey+=BILLION;
            }
          }
          state=MasterState.READY;
        }
      }
);
    }
  }
);
}
