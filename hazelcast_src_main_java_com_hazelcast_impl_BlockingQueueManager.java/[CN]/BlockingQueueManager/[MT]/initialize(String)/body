{
  final BQ q=getOrCreateBQ(queueName);
  final CMap cmapStorage=getOrCreateStorageCMap(queueName);
  executeLocally(new Runnable(){
    public void run(){
      TreeSet<Long> itemKeys=null;
      if (cmapStorage.loader != null) {
        Set<Long> keys=cmapStorage.loader.loadAllKeys();
        if (keys != null && keys.size() > 0) {
          itemKeys=new TreeSet<Long>(keys);
        }
      }
      Set<Long> keys=getStorageMap(queueName).keySet();
      if (keys.size() > 0) {
        if (itemKeys == null) {
          itemKeys=new TreeSet<Long>(keys);
        }
 else {
          itemKeys.addAll(keys);
        }
      }
      if (itemKeys != null) {
        final Set<Long> queueKeys=itemKeys;
        enqueueAndReturn(new Processable(){
          public void process(){
            for (            Long key : queueKeys) {
              Data keyData=toData(key);
              if (q.keys.add(keyData)) {
                q.queue.add(new QData(keyData));
                q.nextKey=Math.max(q.nextKey,key);
              }
            }
            q.nextKey+=BILLION;
            q.state=MasterState.READY;
          }
        }
);
      }
 else {
        q.state=MasterState.READY;
      }
    }
  }
);
}
