{
  Config config=new Config();
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  final HazelcastInstance[] instances=factory.newInstances(config);
  final HazelcastInstance h1=instances[0];
  final HazelcastInstance h2=instances[1];
  final IQueue q1=h1.getQueue("default");
  final IQueue q2=h2.getQueue("default");
  final CountDownLatch offerLatch=new CountDownLatch(2 * 100);
  Thread.sleep(1000);
  new Thread(new Runnable(){
    public void run(){
      for (int i=0; i < 100; i++) {
        if (q1.offer("item")) {
          offerLatch.countDown();
        }
        if (q2.offer("item")) {
          offerLatch.countDown();
        }
      }
    }
  }
).start();
  assertOpenEventually(offerLatch);
  final ExecutorService es=Executors.newFixedThreadPool(50);
  final CountDownLatch latch=new CountDownLatch(200);
  Thread.sleep(3000);
  for (int i=0; i < 100; i++) {
    es.execute(new Runnable(){
      public void run(){
        try {
          if ("item".equals(q1.poll(5,TimeUnit.SECONDS))) {
            latch.countDown();
          }
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
      }
    }
);
    es.execute(new Runnable(){
      public void run(){
        try {
          if ("item".equals(q2.poll(5,TimeUnit.SECONDS))) {
            latch.countDown();
          }
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
      }
    }
);
  }
  assertOpenEventually(latch);
  es.shutdown();
}
