{
  Config config=new Config();
  StaticNodeFactory factory=createNodeFactory(2);
  final HazelcastInstance[] instances=factory.newInstances(config);
  final HazelcastInstance h1=instances[0];
  final HazelcastInstance h2=instances[1];
  final IQueue q1=h1.getQueue("default");
  final IQueue q2=h2.getQueue("default");
  new Thread(new Runnable(){
    public void run(){
      try {
        q2.take();
      }
 catch (      HazelcastInstanceNotActiveException ignored) {
      }
catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
).start();
  final CountDownLatch shutdownLatch=new CountDownLatch(1);
  new Thread(new Runnable(){
    public void run(){
      try {
        Thread.sleep(3000);
        h2.getLifecycleService().kill();
        shutdownLatch.countDown();
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
).start();
  assertTrue(shutdownLatch.await(100,TimeUnit.SECONDS));
  q1.offer("item");
  assertEquals(1,q1.size());
  assertEquals("item",q1.poll());
}
