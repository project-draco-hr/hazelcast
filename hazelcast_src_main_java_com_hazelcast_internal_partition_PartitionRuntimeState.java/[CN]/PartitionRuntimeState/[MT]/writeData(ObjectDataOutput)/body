{
  out.writeInt(version);
  int memberCount=addressToIndexes.size();
  out.writeInt(memberCount);
  for (  Map.Entry<Address,Integer> entry : addressToIndexes.entrySet()) {
    Address address=entry.getKey();
    address.writeData(out);
    int index=entry.getValue();
    out.writeInt(index);
  }
  out.writeInt(minimizedPartitionTable.length);
  for (  int[] indexes : minimizedPartitionTable) {
    for (int ix=0; ix < MAX_REPLICA_COUNT; ix++) {
      out.writeInt(indexes[ix]);
    }
  }
  if (activeMigration != null) {
    out.writeBoolean(true);
    activeMigration.writeData(out);
  }
 else {
    out.writeBoolean(false);
  }
  if (completedMigrations != null) {
    int k=completedMigrations.size();
    out.writeInt(k);
    for (    MigrationInfo migrationInfo : completedMigrations) {
      migrationInfo.writeData(out);
    }
  }
 else {
    out.writeInt(0);
  }
}
