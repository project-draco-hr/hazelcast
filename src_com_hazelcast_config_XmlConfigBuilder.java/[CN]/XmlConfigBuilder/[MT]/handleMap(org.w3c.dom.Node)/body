{
  final Node attName=node.getAttributes().getNamedItem("name");
  final String name=getTextContent(attName);
  final MapConfig config=new MapConfig();
  config.setName(name);
  final NodeList nodelist=node.getChildNodes();
  for (int i=0; i < nodelist.getLength(); i++) {
    final org.w3c.dom.Node n=nodelist.item(i);
    final String nodeName=n.getNodeName().toLowerCase();
    final String value=getTextContent(n).trim();
    if ("backup-count".equals(nodeName)) {
      config.setBackupCount(getIntegerValue("backup-count",value,MapConfig.DEFAULT_BACKUP_COUNT));
    }
 else     if ("eviction-policy".equals(nodeName)) {
      config.setEvictionPolicy(value);
    }
 else     if ("max-size".equals(nodeName)) {
      config.setMaxSize(getIntegerValue("max-size",value,MapConfig.DEFAULT_MAX_SIZE));
    }
 else     if ("eviction-percentage".equals(nodeName)) {
      config.setEvictionPercentage(getIntegerValue("eviction-percentage",value,MapConfig.DEFAULT_EVICTION_PERCENTAGE));
    }
 else     if ("time-to-live-seconds".equals(nodeName)) {
      config.setTimeToLiveSeconds(getIntegerValue("time-to-live-seconds",value,MapConfig.DEFAULT_TTL_SECONDS));
    }
  }
  this.config.getMapMapConfigs().put(name,config);
}
