{
  EntryEventType eventType=event.getEventType();
  Data keyData=event.getKey();
  Data valueData=event.getValue();
  Data oldValueData=event.getOldValue();
  Member member=getContext().getClusterService().getMember(event.getUuid());
  int type=eventType.getType();
  EntryEvent<K,V> entryEvent=new DataAwareEntryEvent(member,type,getName(),keyData,valueData,oldValueData,null,getContext().getSerializationService());
switch (event.getEventType()) {
case ADDED:
    listener.entryAdded(entryEvent);
  break;
case REMOVED:
listener.entryRemoved(entryEvent);
break;
case UPDATED:
listener.entryUpdated(entryEvent);
break;
case EVICTED:
listener.entryEvicted(entryEvent);
break;
case CLEAR_ALL:
MapEvent mapEvent=new MapEvent(getName(),member,EntryEventType.CLEAR_ALL.getType(),event.getNumberOfAffectedEntries());
listener.mapCleared(mapEvent);
break;
default :
throw new IllegalArgumentException("Not a known event type " + event.getEventType());
}
}
