{
  Portable portable;
switch (classId) {
case ClientPortableHook.GENERIC_ERROR:
    portable=new GenericError();
  break;
case ClientPortableHook.AUTH:
portable=new AuthenticationRequest();
break;
case ClientPortableHook.PRINCIPAL:
portable=new ClientPrincipal();
break;
case ClientPortableHook.GET_DISTRIBUTED_OBJECT_INFO:
portable=new GetDistributedObjectsRequest();
break;
case ClientPortableHook.DISTRIBUTED_OBJECT_INFO:
portable=new DistributedObjectInfo();
break;
case ClientPortableHook.CREATE_PROXY:
portable=new ClientCreateRequest();
break;
case ClientPortableHook.DESTROY_PROXY:
portable=new ClientDestroyRequest();
break;
case ClientPortableHook.LISTENER:
portable=new AddDistributedObjectListenerRequest();
break;
case ClientPortableHook.MEMBERSHIP_LISTENER:
portable=new AddMembershipListenerRequest();
break;
case ClientPortableHook.CLIENT_PING:
portable=new ClientPingRequest();
break;
case ClientPortableHook.GET_PARTITIONS:
portable=new GetPartitionsRequest();
break;
case ClientPortableHook.REMOVE_LISTENER:
portable=new RemoveDistributedObjectListenerRequest();
break;
case ClientPortableHook.REMOVE_ALL_LISTENERS:
portable=new RemoveAllListeners();
break;
case ClientPortableHook.GET_MEMBER_LIST:
portable=new GetMemberListRequest();
break;
case ClientPortableHook.REGISTER_MEMBERSHIP_LISTENER:
portable=new RegisterMembershipListenerRequest();
break;
case ClientPortableHook.ADD_PARTITION_LOST_LISTENER:
portable=new AddPartitionLostListenerRequest();
break;
case ClientPortableHook.REMOVE_PARTITION_LOST_LISTENER:
portable=new RemovePartitionLostListenerRequest();
break;
default :
portable=null;
}
return portable;
}
