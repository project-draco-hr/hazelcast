{
  MemberImpl member=clusterService.getMember(joinMessage.getAddress());
  if (member == null) {
    return false;
  }
  Address target=member.getAddress();
  if (joinMessage.getUuid().equals(member.getUuid())) {
    if (node.isMaster()) {
      if (logger.isFinestEnabled()) {
        logger.finest(format("Ignoring join request, member already exists: %s",joinMessage));
      }
      Operation[] postJoinOps=nodeEngine.getPostJoinOperations();
      boolean isPostJoinOperation=postJoinOps != null && postJoinOps.length > 0;
      PostJoinOperation postJoinOp=isPostJoinOperation ? new PostJoinOperation(postJoinOps) : null;
      PartitionRuntimeState partitionRuntimeState=node.getPartitionService().createPartitionState();
      Operation operation=new FinalizeJoinOperation(createMemberInfoList(clusterService.getMemberImpls()),postJoinOp,clusterClock.getClusterTime(),clusterStateManager.getState(),partitionRuntimeState,false);
      nodeEngine.getOperationService().send(operation,target);
    }
 else {
      sendMasterAnswer(target);
    }
    return true;
  }
  if (node.isMaster() || target.equals(node.getMasterAddress())) {
    logger.warning(format("New join request has been received from an existing endpoint %s." + " Removing old member and processing join request...",member));
    clusterService.doRemoveAddress(target,false);
    Connection existing=node.connectionManager.getConnection(target);
    if (existing != connection) {
      node.connectionManager.destroyConnection(existing);
      node.connectionManager.registerConnection(target,connection);
    }
    return false;
  }
  return true;
}
