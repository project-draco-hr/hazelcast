{
  final TestMapStore store=new WaitingOnFirstTestMapStore();
  Config config=getConfig();
  MapStoreConfig mapStoreConfig=new MapStoreConfig();
  mapStoreConfig.setEnabled(true);
  mapStoreConfig.setWriteDelaySeconds(1);
  mapStoreConfig.setImplementation(store);
  config.getMapConfig("default").setMapStoreConfig(mapStoreConfig);
  HazelcastInstance h1=createHazelcastInstance(config);
  final IMap<Integer,Integer> map=h1.getMap("testSlowStore");
  int count=1000;
  for (int i=0; i < count; i++) {
    map.put(i,1);
  }
  Thread.sleep(2000);
  for (int i=0; i < count; i++) {
    map.put(i,2);
  }
  for (int i=0; i < count; i++) {
    final int index=i;
    assertTrueEventually(new AssertTask(){
      @Override public void run() throws Exception {
        final Integer valueInMap=map.get(index);
        final Integer valueInStore=(Integer)store.getStore().get(index);
        assertEquals(valueInMap,valueInStore);
      }
    }
);
  }
}
