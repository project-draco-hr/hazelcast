{
  final String keyWithNullValue="keyWithNullValue";
  EventBasedMapStore<String,Integer> testMapStore=new EventBasedMapStore<String,Integer>(){
    @Override public Set<String> loadAllKeys(){
      Set<String> keys=new HashSet<String>(super.loadAllKeys());
      keys.add(keyWithNullValue);
      return keys;
    }
  }
;
  Map<String,Integer> mapForStore=new HashMap<String,Integer>();
  mapForStore.put("key1",17);
  mapForStore.put("key2",37);
  mapForStore.put("key3",47);
  testMapStore.getStore().putAll(mapForStore);
  Config config=newConfig(testMapStore,0);
  HazelcastInstance instance=createHazelcastInstance(config);
  IMap<String,Integer> map=instance.getMap("default");
  Set expected=map.keySet();
  Set actual=mapForStore.keySet();
  assertEquals(expected,actual);
  List<Integer> actualList=new ArrayList<Integer>(map.values());
  List<Integer> expectedList=new ArrayList<Integer>(mapForStore.values());
  Collections.sort(actualList);
  Collections.sort(expectedList);
  assertEquals(expectedList,actualList);
  assertEquals(map.entrySet(),mapForStore.entrySet());
  assertFalse(map.containsKey(keyWithNullValue));
  assertNull(map.get(keyWithNullValue));
}
