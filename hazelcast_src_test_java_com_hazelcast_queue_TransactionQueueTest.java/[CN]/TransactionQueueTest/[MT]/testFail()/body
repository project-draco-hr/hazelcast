{
  Config config=new Config();
  final int insCount=2;
  final String queueName="defQueue";
  final HazelcastInstance[] instances=StaticNodeFactory.newInstances(config,insCount);
  final HazelcastInstance ins1=instances[0];
  final HazelcastInstance ins2=instances[1];
  final CountDownLatch latch=new CountDownLatch(1);
  new Thread(){
    public void run(){
      TransactionContext context=ins1.newTransactionContext();
      try {
        context.beginTransaction();
        for (int i=0; i < 100; i++) {
          context.getQueue(queueName).offer("item" + i);
          Thread.sleep(50);
        }
        context.commitTransaction();
        latch.countDown();
      }
 catch (      Exception e) {
        e.printStackTrace();
        context.rollbackTransaction();
        latch.countDown();
      }
    }
  }
.start();
  ins2.getLifecycleService().shutdown();
  assertTrue(latch.await(20,TimeUnit.SECONDS));
  assertEquals(100,ins1.getQueue(queueName).size());
}
