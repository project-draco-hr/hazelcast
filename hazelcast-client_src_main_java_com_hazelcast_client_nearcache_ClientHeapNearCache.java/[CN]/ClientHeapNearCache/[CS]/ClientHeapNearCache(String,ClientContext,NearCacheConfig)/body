{
  this.mapName=mapName;
  this.context=context;
  maxSize=nearCacheConfig.getMaxSize();
  maxIdleMillis=nearCacheConfig.getMaxIdleSeconds() * SEC_TO_MILLISEC;
  inMemoryFormat=nearCacheConfig.getInMemoryFormat();
  if (inMemoryFormat != InMemoryFormat.BINARY && inMemoryFormat != InMemoryFormat.OBJECT) {
    throw new IllegalArgumentException("Illegal in-memory-format: " + inMemoryFormat);
  }
  timeToLiveMillis=nearCacheConfig.getTimeToLiveSeconds() * SEC_TO_MILLISEC;
  invalidateOnChange=nearCacheConfig.isInvalidateOnChange();
  evictionPolicy=EvictionPolicy.valueOf(nearCacheConfig.getEvictionPolicy());
  cache=new ConcurrentHashMap<K,CacheRecord<K>>();
  canCleanUp=new AtomicBoolean(true);
  canEvict=new AtomicBoolean(true);
  lastCleanup=Clock.currentTimeMillis();
  stats=new NearCacheStatsImpl();
}
