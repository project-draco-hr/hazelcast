{
  return new PortableFactory(){
    final ConstructorFunction<Integer,Portable> constructors[]=new ConstructorFunction[LENGTH];
{
      constructors[SIZE]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapSizeRequest();
        }
      }
;
      constructors[IS_EMPTY]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapIsEmptyRequest();
        }
      }
;
      constructors[CONTAINS_KEY]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapContainsKeyRequest();
        }
      }
;
      constructors[CONTAINS_VALUE]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapContainsValueRequest();
        }
      }
;
      constructors[PUT_TTL]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapPutTtlRequest();
        }
      }
;
      constructors[GET]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapGetRequest();
        }
      }
;
      constructors[REMOVE]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapRemoveRequest();
        }
      }
;
      constructors[PUT_ALL]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapPutAllRequest();
        }
      }
;
      constructors[KEY_SET]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapKeySetRequest();
        }
      }
;
      constructors[VALUES]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapValuesRequest();
        }
      }
;
      constructors[ENTRY_SET]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapEntrySetRequest();
        }
      }
;
      constructors[VALUES_COLLECTION]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ReplicatedMapValueCollection();
        }
      }
;
      constructors[MAP_ENTRY_SET]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ReplicatedMapEntrySet();
        }
      }
;
      constructors[MAP_KEY_SET]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ReplicatedMapKeySet();
        }
      }
;
      constructors[GET_RESPONSE]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ReplicatedMapGetResponse();
        }
      }
;
      constructors[ADD_LISTENER]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapAddEntryListenerRequest();
        }
      }
;
      constructors[REMOVE_LISTENER]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapRemoveEntryListenerRequest();
        }
      }
;
      constructors[MAP_ENTRY_EVENT]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ReplicatedMapPortableEntryEvent();
        }
      }
;
      constructors[CLEAR]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapClearRequest();
        }
      }
;
      constructors[ADD_NEAR_CACHE_ENTRY_LISTENER]=new ConstructorFunction<Integer,Portable>(){
        @Override public Portable createNew(        Integer arg){
          return new ClientReplicatedMapAddNearCacheListenerRequest();
        }
      }
;
    }
    public Portable create(    int classId){
      return (classId > 0 && classId <= constructors.length) ? constructors[classId].createNew(classId) : null;
    }
  }
;
}
