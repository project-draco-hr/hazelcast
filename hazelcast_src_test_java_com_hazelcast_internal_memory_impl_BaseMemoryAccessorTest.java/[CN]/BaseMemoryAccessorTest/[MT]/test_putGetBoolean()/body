{
  long address=0;
  try {
    address=allocateMemory(16);
    memoryAccessor.putBoolean(address,true);
    assertEquals(true,memoryAccessor.getBoolean(address));
    memoryAccessor.putBooleanVolatile(null,address,false);
    assertEquals(false,memoryAccessor.getBooleanVolatile(null,address));
    SampleObject obj=new SampleObject();
    memoryAccessor.putBoolean(obj,SampleObject.BOOLEAN_VALUE_OFFSET,true);
    assertEquals(true,memoryAccessor.getBoolean(obj,SampleObject.BOOLEAN_VALUE_OFFSET));
    memoryAccessor.putBooleanVolatile(obj,SampleObject.BOOLEAN_VALUE_OFFSET,false);
    assertEquals(false,memoryAccessor.getBooleanVolatile(obj,SampleObject.BOOLEAN_VALUE_OFFSET));
  }
  finally {
    if (address != 0) {
      freeMemory(address);
    }
  }
}
