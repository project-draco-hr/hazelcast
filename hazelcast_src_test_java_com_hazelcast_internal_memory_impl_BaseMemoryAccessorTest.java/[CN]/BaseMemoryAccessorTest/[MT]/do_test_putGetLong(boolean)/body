{
  long address=0;
  try {
    address=allocateMemory(16);
    long accessAddress=aligned ? address : address + 1;
    memoryAccessor.putLong(accessAddress,1L);
    assertEquals(1L,memoryAccessor.getLong(accessAddress));
    memoryAccessor.putLongVolatile(null,accessAddress,2L);
    assertEquals(2L,memoryAccessor.getLongVolatile(null,accessAddress));
    SampleObject obj=new SampleObject();
    memoryAccessor.putLong(obj,SampleObject.LONG_VALUE_OFFSET,3L);
    assertEquals(3L,memoryAccessor.getLong(obj,SampleObject.LONG_VALUE_OFFSET));
    memoryAccessor.putLongVolatile(obj,SampleObject.LONG_VALUE_OFFSET,4L);
    assertEquals(4L,memoryAccessor.getLongVolatile(obj,SampleObject.LONG_VALUE_OFFSET));
  }
  finally {
    if (address != 0) {
      freeMemory(address);
    }
  }
}
