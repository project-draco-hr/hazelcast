{
  if (invokeCount > 0) {
    throw new IllegalStateException("An invocation can not be invoked more than once!");
  }
  if (op.getCallId() != 0) {
    throw new IllegalStateException("An operation[" + op + "] can not be used for multiple invocations!");
  }
  try {
    OperationAccessor.setCallTimeout(op,callTimeout);
    OperationAccessor.setCallerAddress(op,nodeEngine.getThisAddress());
    op.setNodeEngine(nodeEngine).setServiceName(serviceName).setPartitionId(partitionId).setReplicaIndex(replicaIndex);
    if (op.getCallerUuid() == null) {
      op.setCallerUuid(nodeEngine.getLocalMember().getUuid());
    }
    BasicOperationService operationService=(BasicOperationService)nodeEngine.operationService;
    if (!operationService.isInvocationAllowedFromCurrentThread(op) && !OperationAccessor.isMigrationOperation(op)) {
      throw new IllegalThreadStateException(Thread.currentThread() + " cannot make remote call: " + op);
    }
    doInvoke();
  }
 catch (  Exception e) {
    if (e instanceof RetryableException) {
      notify(e);
    }
 else {
      throw ExceptionUtil.rethrow(e);
    }
  }
  return invocationFuture;
}
