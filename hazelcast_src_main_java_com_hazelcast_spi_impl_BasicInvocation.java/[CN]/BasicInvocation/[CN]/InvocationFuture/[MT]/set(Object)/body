{
  response=toResponse(response);
  ExecutionCallbackNode<E> callbackChain;
synchronized (this) {
    if (this.response != null && !(this.response instanceof InternalResponse)) {
      throw new IllegalArgumentException("The InvocationFuture.set method can only be called once for operation:" + op + " response:"+ response+ " this.response:"+ this.response);
    }
    this.response=response;
    if (response == WAIT_RESPONSE) {
      return;
    }
    callbackChain=callbackHead;
    callbackHead=null;
    this.notifyAll();
  }
  final long callId=op.getCallId();
  if (callId > 0) {
    operationService.deregisterInvocation(callId);
  }
  notifyCallbacks(callbackChain);
}
