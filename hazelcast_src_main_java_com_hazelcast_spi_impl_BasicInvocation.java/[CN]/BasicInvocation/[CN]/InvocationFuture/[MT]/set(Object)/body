{
  if (response == null) {
    throw new IllegalArgumentException("response can't be null");
  }
  if (response instanceof Response) {
    response=((Response)response).response;
  }
  if (response == null) {
    response=NULL_RESPONSE;
  }
  if (resultDeserialized && response instanceof Data) {
    response=nodeEngine.toObject(response);
  }
  ExecutionCallbackNode<E> callbackChain;
synchronized (this) {
    if (this.response != null && !(this.response instanceof InternalResponse)) {
      throw new IllegalArgumentException("The InvocationFuture.set method can only be called once");
    }
    this.response=response;
    if (response == WAIT_RESPONSE) {
      return;
    }
    callbackChain=callbackHead;
    callbackHead=null;
    this.notifyAll();
  }
  BasicOperationService operationService=(BasicOperationService)nodeEngine.operationService;
  operationService.deregisterBackupCall(op.getCallId());
  while (callbackChain != null) {
    runAsynchronous(callbackChain.callback,callbackChain.executor);
    callbackChain=callbackChain.next;
  }
}
