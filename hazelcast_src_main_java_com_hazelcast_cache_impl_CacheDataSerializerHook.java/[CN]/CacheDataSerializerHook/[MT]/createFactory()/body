{
  ConstructorFunction<Integer,IdentifiedDataSerializable>[] constructors=new ConstructorFunction[LEN];
  constructors[GET]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheGetOperation();
    }
  }
;
  constructors[CONTAINS_KEY]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheContainsKeyOperation();
    }
  }
;
  constructors[PUT]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CachePutOperation();
    }
  }
;
  constructors[PUT_IF_ABSENT]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CachePutIfAbsentOperation();
    }
  }
;
  constructors[REMOVE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheRemoveOperation();
    }
  }
;
  constructors[GET_AND_REMOVE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheGetAndRemoveOperation();
    }
  }
;
  constructors[REPLACE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheReplaceOperation();
    }
  }
;
  constructors[GET_AND_REPLACE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheGetAndReplaceOperation();
    }
  }
;
  constructors[PUT_BACKUP]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CachePutBackupOperation();
    }
  }
;
  constructors[PUT_ALL_BACKUP]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CachePutAllBackupOperation();
    }
  }
;
  constructors[REMOVE_BACKUP]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheRemoveBackupOperation();
    }
  }
;
  constructors[CLEAR_BACKUP]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheClearBackupOperation();
    }
  }
;
  constructors[SIZE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheSizeOperation();
    }
  }
;
  constructors[SIZE_FACTORY]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheSizeOperationFactory();
    }
  }
;
  constructors[CLEAR]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheClearOperation();
    }
  }
;
  constructors[CLEAR_FACTORY]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheClearOperationFactory();
    }
  }
;
  constructors[GET_ALL]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheGetAllOperation();
    }
  }
;
  constructors[GET_ALL_FACTORY]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheGetAllOperationFactory();
    }
  }
;
  constructors[LOAD_ALL]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheLoadAllOperation();
    }
  }
;
  constructors[LOAD_ALL_FACTORY]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheLoadAllOperationFactory();
    }
  }
;
  constructors[KEY_ITERATOR]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheKeyIteratorOperation();
    }
  }
;
  constructors[KEY_ITERATION_RESULT]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheKeyIteratorResult();
    }
  }
;
  constructors[ENTRY_PROCESSOR]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheEntryProcessorOperation();
    }
  }
;
  constructors[CLEAR_RESPONSE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheClearResponse();
    }
  }
;
  constructors[CREATE_CONFIG]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheCreateConfigOperation();
    }
  }
;
  constructors[GET_CONFIG]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheGetConfigOperation();
    }
  }
;
  constructors[MANAGEMENT_CONFIG]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheManagementConfigOperation();
    }
  }
;
  constructors[LISTENER_REGISTRATION]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new CacheListenerRegistrationOperation();
    }
  }
;
  return new ArrayDataSerializableFactory(constructors);
}
