{
  Map.Entry<Integer,Integer> o1=e1;
  Map.Entry<Integer,Integer> o2=e2;
switch (iterationType) {
case KEY:
    return (o1.getKey() - o2.getKey()) * ascending;
case VALUE:
  return (o1.getValue() - o2.getValue()) * ascending;
default :
int result=(o1.getValue() - o2.getValue()) * ascending;
if (result != 0) {
return result;
}
return (o1.getKey() - o2.getKey()) * ascending;
}
}
