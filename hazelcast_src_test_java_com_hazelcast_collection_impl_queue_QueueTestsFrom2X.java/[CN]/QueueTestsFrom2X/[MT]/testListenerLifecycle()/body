{
  long sleep=2000;
  String name="listenerLifecycle";
  HazelcastInstance instance=createHazelcastInstance();
  IQueue<Integer> queue=instance.getQueue(name);
  try {
    final CountDownLatch latch=new CountDownLatch(3);
    ItemListener<Integer> listener=new ItemListener<Integer>(){
      public void itemAdded(      ItemEvent<Integer> itemEvent){
        latch.countDown();
      }
      public void itemRemoved(      ItemEvent<Integer> itemEvent){
      }
    }
;
    queue.addItemListener(listener,false);
    queue.offer(1);
    sleep(sleep);
    queue.destroy();
    queue=instance.getQueue(name);
    String id=queue.addItemListener(listener,false);
    queue.offer(2);
    sleep(sleep);
    queue.removeItemListener(id);
    queue.offer(3);
    sleep(sleep);
    assertEquals(1,latch.getCount());
    latch.countDown();
    assertTrue("Remaining: " + latch.getCount(),latch.await(3,TimeUnit.SECONDS));
  }
  finally {
    queue.destroy();
  }
}
