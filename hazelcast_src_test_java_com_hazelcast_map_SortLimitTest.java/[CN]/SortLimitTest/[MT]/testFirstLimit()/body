{
  System.setProperty(GroupProperties.PROP_PARTITION_COUNT,"6");
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);
  final HazelcastInstance instance1=nodeFactory.newHazelcastInstance();
  final HazelcastInstance instance2=nodeFactory.newHazelcastInstance();
  final IMap<Integer,Integer> map=instance1.getMap("testSort");
  final int size=50;
  final int pageSize=5;
  for (int i=0; i < size; i++) {
    map.put(i,i);
  }
  final Predicate greaterEqual=Predicates.greaterEqual("this",23);
  final PagingPredicate predicate=new PagingPredicate(greaterEqual,new TestComparator(true),pageSize);
  Collection<Integer> values=map.values(predicate);
  assertEquals(pageSize,values.size());
  for (  Integer value : values) {
    System.err.println("value: " + value);
  }
  assertEquals(27,predicate.getAnchor());
  predicate.nextPage();
  values=map.values(predicate);
  assertEquals(pageSize,values.size());
  for (  Integer value : values) {
    System.err.println("value: " + value);
  }
  assertEquals(32,predicate.getAnchor());
}
