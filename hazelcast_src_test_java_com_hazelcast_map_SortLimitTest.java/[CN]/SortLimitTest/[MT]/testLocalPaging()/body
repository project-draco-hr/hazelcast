{
  IMap<Integer,Integer> map1=local.getMap("testSort");
  IMap<Integer,Integer> map2=remote.getMap("testSort");
  for (int i=0; i < size; i++) {
    map1.put(i + 10,i);
  }
  PagingPredicate predicate1=new PagingPredicate(pageSize);
  Set<Integer> keySet=map1.localKeySet(predicate1);
  int value=9;
  Set<Integer> whole=new HashSet<Integer>(size);
  while (keySet.size() > 0) {
    for (    Integer integer : keySet) {
      assertTrue(integer > value);
      value=integer;
      whole.add(integer);
    }
    predicate1.nextPage();
    keySet=map1.localKeySet(predicate1);
  }
  PagingPredicate predicate2=new PagingPredicate(pageSize);
  value=9;
  keySet=map2.localKeySet(predicate2);
  while (keySet.size() > 0) {
    for (    Integer integer : keySet) {
      assertTrue(integer > value);
      value=integer;
      whole.add(integer);
    }
    predicate2.nextPage();
    keySet=map2.localKeySet(predicate2);
  }
  assertEquals(size,whole.size());
}
