{
  if (name == null)   throw new IllegalArgumentException(sm.getString("standardSession.setAttribute.namenull"));
  if (SESSION_MARK.equals(name)) {
    throw new IllegalArgumentException(SESSION_MARK_EXCEPTION);
  }
  if (value == null) {
    removeAttribute(name);
    return;
  }
  if (!isValidInternal())   throw new IllegalStateException(sm.getString("standardSession.setAttribute.ise"));
  if ((manager != null) && manager.getDistributable() && !(value instanceof Serializable))   throw new IllegalArgumentException(sm.getString("standardSession.setAttribute.iae"));
  HttpSessionBindingEvent event=null;
  if (notify && value instanceof HttpSessionBindingListener) {
    HazelcastAttribute oldAttribute=(HazelcastAttribute)attributes.get(name);
    if (oldAttribute != null && value != oldAttribute.getValue()) {
      event=new HttpSessionBindingEvent(getSession(),name,value);
      try {
        ((HttpSessionBindingListener)value).valueBound(event);
      }
 catch (      Throwable t) {
        manager.getContainer().getLogger().error(sm.getString("standardSession.bindingEvent"),t);
      }
    }
  }
  final HazelcastAttribute attribute=new HazelcastAttribute(getIdInternal(),name,value);
  long requestId=LocalRequestId.get();
  attribute.touch(requestId);
  final HazelcastAttribute unboundAttribute=(HazelcastAttribute)attributes.put(name,attribute);
  final Object unboundValue=unboundAttribute != null ? unboundAttribute.getValue() : null;
  if (notify && (unboundValue != null) && (unboundValue != value)&& (unboundValue instanceof HttpSessionBindingListener)) {
    try {
      ((HttpSessionBindingListener)unboundValue).valueUnbound(new HttpSessionBindingEvent(getSession(),name));
    }
 catch (    Throwable t) {
      manager.getContainer().getLogger().error(sm.getString("standardSession.bindingEvent"),t);
    }
  }
  if (!notify)   return;
  Context context=(Context)manager.getContainer();
  Object listeners[]=context.getApplicationEventListeners();
  if (listeners == null)   return;
  for (int i=0; i < listeners.length; i++) {
    if (!(listeners[i] instanceof HttpSessionAttributeListener))     continue;
    HttpSessionAttributeListener listener=(HttpSessionAttributeListener)listeners[i];
    try {
      if (unboundValue != null) {
        fireContainerEvent(context,"beforeSessionAttributeReplaced",listener);
        if (event == null) {
          event=new HttpSessionBindingEvent(getSession(),name,unboundValue);
        }
        listener.attributeReplaced(event);
        fireContainerEvent(context,"afterSessionAttributeReplaced",listener);
      }
 else {
        fireContainerEvent(context,"beforeSessionAttributeAdded",listener);
        if (event == null) {
          event=new HttpSessionBindingEvent(getSession(),name,value);
        }
        listener.attributeAdded(event);
        fireContainerEvent(context,"afterSessionAttributeAdded",listener);
      }
    }
 catch (    Throwable t) {
      try {
        if (unboundValue != null) {
          fireContainerEvent(context,"afterSessionAttributeReplaced",listener);
        }
 else {
          fireContainerEvent(context,"afterSessionAttributeAdded",listener);
        }
      }
 catch (      Exception e) {
        ;
      }
      manager.getContainer().getLogger().error(sm.getString("standardSession.attributeEvent"),t);
    }
  }
}
