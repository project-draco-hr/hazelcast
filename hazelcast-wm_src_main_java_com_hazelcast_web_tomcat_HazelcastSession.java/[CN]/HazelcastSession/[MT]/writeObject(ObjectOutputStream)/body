{
  stream.writeObject(new Long(creationTime));
  stream.writeObject(new Long(lastAccessedTime));
  stream.writeObject(new Integer(maxInactiveInterval));
  stream.writeObject(new Boolean(isNew));
  stream.writeObject(new Boolean(isValid));
  stream.writeObject(new Long(thisAccessedTime));
  stream.writeObject(id);
  if (manager.getContainer().getLogger().isDebugEnabled())   manager.getContainer().getLogger().debug("writeObject() storing session " + id);
  String keys[]=keys();
  ArrayList saveNames=new ArrayList();
  ArrayList saveValues=new ArrayList();
  for (int i=0; i < keys.length; i++) {
    HazelcastAttribute hattribute=(HazelcastAttribute)attributes.get(keys[i]);
    if (hattribute == null)     continue;
    Object value=hattribute.getValue();
    if (value == null)     continue;
 else     if ((value instanceof Serializable) && (!exclude(keys[i]))) {
      saveNames.add(keys[i]);
      saveValues.add(value);
    }
 else {
      removeAttributeInternal(keys[i],true);
    }
  }
  int n=saveNames.size();
  stream.writeObject(new Integer(n));
  for (int i=0; i < n; i++) {
    stream.writeObject((String)saveNames.get(i));
    try {
      stream.writeObject(saveValues.get(i));
      if (manager.getContainer().getLogger().isDebugEnabled())       manager.getContainer().getLogger().debug("  storing attribute '" + saveNames.get(i) + "' with value '"+ saveValues.get(i)+ "'");
    }
 catch (    NotSerializableException e) {
      manager.getContainer().getLogger().warn(sm.getString("standardSession.notSerializable",saveNames.get(i),id),e);
      stream.writeObject(NOT_SERIALIZED);
      if (manager.getContainer().getLogger().isDebugEnabled())       manager.getContainer().getLogger().debug("  storing attribute '" + saveNames.get(i) + "' with value NOT_SERIALIZED");
    }
  }
}
