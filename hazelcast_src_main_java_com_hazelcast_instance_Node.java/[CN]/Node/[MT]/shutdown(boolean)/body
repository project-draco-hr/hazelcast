{
  long start=Clock.currentTimeMillis();
  if (logger.isFinestEnabled()) {
    logger.finest("We are being asked to shutdown when state = " + state);
  }
  if (!setShuttingDown()) {
    waitIfAlreadyShuttingDown();
    return;
  }
  if (!terminate) {
    final int maxWaitSeconds=groupProperties.getSeconds(GroupProperty.GRACEFUL_SHUTDOWN_MAX_WAIT);
    if (!partitionService.prepareToSafeShutdown(maxWaitSeconds,TimeUnit.SECONDS)) {
      logger.warning("Graceful shutdown could not be completed in " + maxWaitSeconds + " seconds!");
    }
    try {
      clusterService.sendShutdownMessage();
      if (logger.isFinestEnabled()) {
        logger.finest("Shutdown message sent to other members");
      }
    }
 catch (    Throwable t) {
      EmptyStatement.ignore(t);
    }
  }
 else {
    logger.warning("Terminating forcefully...");
  }
  joined.set(false);
  setMasterAddress(null);
  try {
    if (groupProperties.getBoolean(GroupProperty.SHUTDOWNHOOK_ENABLED)) {
      Runtime.getRuntime().removeShutdownHook(shutdownHookThread);
    }
  }
 catch (  Throwable ignored) {
    EmptyStatement.ignore(ignored);
  }
  try {
    discoveryService.destroy();
  }
 catch (  Throwable ignored) {
    EmptyStatement.ignore(ignored);
  }
  try {
    shutdownServices(terminate);
    state=NodeState.SHUT_DOWN;
    logger.info("Hazelcast Shutdown is completed in " + (Clock.currentTimeMillis() - start) + " ms.");
  }
  finally {
    if (state != NodeState.SHUT_DOWN) {
      shuttingDown.compareAndSet(true,false);
    }
  }
}
