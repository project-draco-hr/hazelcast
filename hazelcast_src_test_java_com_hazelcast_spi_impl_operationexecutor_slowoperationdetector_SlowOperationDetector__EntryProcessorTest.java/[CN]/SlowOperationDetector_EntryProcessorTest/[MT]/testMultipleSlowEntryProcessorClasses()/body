{
  HazelcastInstance instance=getSingleNodeCluster(2000);
  IMap<String,String> map=getMapWithSingleElement(instance);
  for (int i=0; i < 3; i++) {
    map.executeOnEntries(getSlowEntryProcessor(3));
  }
  SlowEntryProcessorChild entryProcessorChild=new SlowEntryProcessorChild(3);
  map.executeOnEntries(entryProcessorChild);
  map.executeOnEntries(getSlowEntryProcessor(5));
  awaitSlowEntryProcessors();
  entryProcessorChild.await();
  final Collection<SlowOperationLog> logs=getSlowOperationLogs(instance);
  assertNumberOfSlowOperationLogs(logs,2);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      Iterator<SlowOperationLog> iterator=logs.iterator();
      SlowOperationLog firstLog=iterator.next();
      SlowOperationLog secondLog=iterator.next();
      int firstSize=getInvocations(firstLog).size();
      int secondSize=getInvocations(secondLog).size();
      assertTrue(format("Expected to find 1 and 4 invocations in logs, but was %d and %d. First log: %s%nSecond log: %s",firstSize,secondSize,firstLog.createDTO().toJson(),secondLog.createDTO().toJson()),(firstSize == 1 ^ secondSize == 1) && (firstSize == 4 ^ secondSize == 4));
    }
  }
,ASSERT_TRUE_TIMEOUT);
}
