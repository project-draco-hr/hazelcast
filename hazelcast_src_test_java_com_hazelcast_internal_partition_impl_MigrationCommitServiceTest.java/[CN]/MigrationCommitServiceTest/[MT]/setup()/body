{
  blockMigrationStartLatch=new CountDownLatch(1);
  factory=createHazelcastInstanceFactory(NODE_COUNT);
  instances=factory.newInstances(createConfig(),NODE_COUNT);
  warmUpPartitions(instances);
  waitAllForSafeState(instances);
  final InternalOperationService operationService=getOperationService(instances[0]);
  for (int partitionId=0; partitionId < PARTITION_COUNT; partitionId++) {
    operationService.invokeOnPartition(null,new SamplePutOperation(),partitionId).get();
  }
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      for (int partitionId=0; partitionId < PARTITION_COUNT; partitionId++) {
        final InternalPartitionService partitionService=getPartitionService(instances[0]);
        final InternalPartition partition=partitionService.getPartition(partitionId);
        for (int i=0; i <= BACKUP_COUNT; i++) {
          final Address replicaAddress=partition.getReplicaAddress(i);
          if (replicaAddress != null) {
            final MigrationEventCollectingService service=getService(replicaAddress);
            assertTrue(Boolean.TRUE.equals(service.data.get(partitionId)));
          }
        }
      }
    }
  }
);
  for (  HazelcastInstance instance : instances) {
    final MigrationEventCollectingService service=getNodeEngineImpl(instance).getService(MigrationEventCollectingService.SERVICE_NAME);
    service.clearEvents();
  }
}
