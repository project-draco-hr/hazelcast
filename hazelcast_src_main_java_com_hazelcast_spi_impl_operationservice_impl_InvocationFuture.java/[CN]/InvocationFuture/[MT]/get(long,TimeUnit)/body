{
  if (response != VOID) {
    return resolveAndThrow(response);
  }
  boolean threadInterrupted=false;
  long timeoutMillis=unit.toMillis(timeout);
  final long deadLineMillis=Clock.currentTimeMillis() + timeoutMillis;
  try {
synchronized (this) {
      while (response == VOID) {
        if (timeoutMillis <= 0) {
          throw new TimeoutException(invocation.op.getClass().getSimpleName() + " failed to complete within " + timeout+ " "+ unit+ ". "+ invocation);
        }
        try {
          wait(timeoutMillis);
        }
 catch (        InterruptedException e) {
          interrupted=true;
        }
        timeoutMillis=deadLineMillis - System.currentTimeMillis();
      }
    }
    return resolveAndThrow(response);
  }
  finally {
    restoreInterrupt(threadInterrupted);
  }
}
