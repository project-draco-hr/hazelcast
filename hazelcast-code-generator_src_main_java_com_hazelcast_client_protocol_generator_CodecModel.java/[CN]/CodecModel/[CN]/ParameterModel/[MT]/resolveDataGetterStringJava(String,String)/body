{
  String getterString;
  if (type.equals(DATA_FULL_NAME)) {
    getterString=name + " = clientMessage.getData();";
  }
 else   if (type.equals("java.lang.Integer")) {
    getterString=name + " = clientMessage.getInt();";
  }
 else   if (type.equals("java.lang.Boolean")) {
    getterString=name + " = clientMessage.getBoolean();";
  }
 else   if (type.equals("java.lang.String")) {
    getterString=name + " = clientMessage.getStringUtf8();";
  }
 else   if (type.equals("com.hazelcast.nio.Address")) {
    getterString=name + " = " + PARAMETERS_PACKAGE+ "AddressCodec.decode(clientMessage);";
  }
 else   if (type.equals("com.hazelcast.core.Member")) {
    getterString=name + " = " + PARAMETERS_PACKAGE+ "MemberCodec.decode(clientMessage);";
  }
 else   if (type.equals("com.hazelcast.cluster.client.MemberAttributeChange")) {
    getterString=name + " = " + PARAMETERS_PACKAGE+ "MemberAttributeChangeCodec.decode(clientMessage);";
  }
 else   if (type.equals("com.hazelcast.map.impl.SimpleEntryView<" + DATA_FULL_NAME + ","+ DATA_FULL_NAME+ ">")) {
    getterString=name + " = " + PARAMETERS_PACKAGE+ "EntryViewCodec.decode(clientMessage);";
  }
 else   if (type.equals("com.hazelcast.client.impl.client.DistributedObjectInfo")) {
    getterString=name + " = " + PARAMETERS_PACKAGE+ "DistributedObjectInfoCodec.decode(clientMessage);";
  }
 else   if (type.equals("com.hazelcast.mapreduce.JobPartitionState")) {
    getterString=name + " = " + PARAMETERS_PACKAGE+ "JobPartitionStateCodec.decode(clientMessage);";
  }
 else   if (type.equals("javax.transaction.xa.Xid")) {
    getterString=name + " = " + PARAMETERS_PACKAGE+ "XIDCodec.decode(clientMessage);";
  }
 else   if (type.equals("com.hazelcast.cache.impl.CacheEventData")) {
    getterString=name + " = " + PARAMETERS_PACKAGE+ "CacheEventDataCodec.decode(clientMessage);";
  }
 else   if (type.equals("com.hazelcast.map.impl.querycache.event.SingleEventData")) {
    getterString=name + " = " + PARAMETERS_PACKAGE+ "SingleEventDataCodec.decode(clientMessage);";
  }
 else   if (type.startsWith("java.util.Map<")) {
    getterString=getMapGetterString(type,name);
  }
 else   if (type.startsWith("java.util.List<") || type.startsWith("java.util.Set<") || type.startsWith("java.util.Collection<")) {
    getterString=getCollectionGetterString(type,name);
  }
 else   if (type.endsWith("[]")) {
    getterString=getArrayGetterString(type,name);
  }
 else {
    getterString=name + " = clientMessage.get" + CodeGenerationUtils.capitalizeFirstLetter(type)+ "();";
  }
  return getterString;
}
