{
  this.nodeEngine=nodeEngine;
  int partitionCount=nodeEngine.getGroupProperties().PARTITION_COUNT.getInteger();
  versions=new AtomicLong[partitionCount];
  for (int i=0; i < versions.length; i++) {
    versions[i]=new AtomicLong();
  }
  final int coreSize=Runtime.getRuntime().availableProcessors();
  syncBackups=new ConcurrentHashMap<Long,Semaphore>(1000,0.75f,(coreSize >= 8 ? coreSize * 4 : 16));
  logger=nodeEngine.getLogger(getClass());
}
