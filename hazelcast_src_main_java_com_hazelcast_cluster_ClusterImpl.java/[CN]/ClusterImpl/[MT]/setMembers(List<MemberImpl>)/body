{
  final Set<MembershipListener> listenerSet=listeners.get();
  Set<Member> setNew=new LinkedHashSet<Member>(lsMembers.size());
  ArrayList<Runnable> notifications=new ArrayList<Runnable>();
  for (  MemberImpl member : lsMembers) {
    final MemberImpl dummy=new MemberImpl(node.factory.getName(),member.getAddress(),member.localMember(),member.getNodeType());
    Member clusterMember=clusterMembers.get(dummy);
    if (clusterMember == null) {
      clusterMember=dummy;
      if (listenerSet != null && listenerSet.size() > 0) {
        notifications.add(new Runnable(){
          public void run(){
            MembershipEvent membershipEvent=new MembershipEvent(ClusterImpl.this,dummy,MembershipEvent.MEMBER_ADDED);
            for (            MembershipListener listener : listenerSet) {
              listener.memberAdded(membershipEvent);
            }
          }
        }
);
      }
    }
    if (clusterMember.localMember()) {
      localMember.set(clusterMember);
    }
    setNew.add(clusterMember);
  }
  if (listenerSet != null && listenerSet.size() > 0) {
    Set<Member> it=clusterMembers.keySet();
    for (    final Member member : it) {
      if (!setNew.contains(member)) {
        notifications.add(new Runnable(){
          public void run(){
            MembershipEvent membershipEvent=new MembershipEvent(ClusterImpl.this,member,MembershipEvent.MEMBER_REMOVED);
            for (            MembershipListener listener : listenerSet) {
              listener.memberRemoved(membershipEvent);
            }
          }
        }
);
      }
    }
  }
  clusterMembers.clear();
  for (  Member member : setNew) {
    clusterMembers.put(member,member);
  }
  members.set(setNew);
  for (  Runnable notification : notifications) {
    node.executorManager.executeLocally(notification);
  }
}
