{
  final Collection<EventRegistration> candidates=getCandidates(mapName);
  if (candidates.isEmpty()) {
    return;
  }
  final Set<EventRegistration> registrationsWithValue=new HashSet<EventRegistration>();
  final Set<EventRegistration> registrationsWithoutValue=new HashSet<EventRegistration>();
  for (  final EventRegistration candidate : candidates) {
    Result result=Result.NONE;
    EventFilter filter=candidate.getFilter();
    if (filter instanceof EventServiceImpl.EmptyFilter) {
      result=processEmptyFilter();
    }
 else     if (filter instanceof QueryEventFilter) {
      result=processQueryEventFilter(filter,eventType,dataKey,dataOldValue,dataValue);
    }
 else     if (filter.eval(dataKey)) {
      result=processEntryEventFilter(filter);
    }
    registerCandidate(result,candidate,registrationsWithValue,registrationsWithoutValue);
  }
  if (registrationsWithValue.isEmpty() && registrationsWithoutValue.isEmpty()) {
    return;
  }
  dataValue=pickDataValue(eventType,dataOldValue,dataValue);
  final EntryEventData eventData=createEntryEventData(mapName,caller,dataKey,dataValue,dataOldValue,eventType.getType());
  final int orderKey=pickOrderKey(dataKey);
  publishWithValue(registrationsWithValue,eventData,orderKey);
  publishWithoutValue(registrationsWithoutValue,eventData,orderKey);
}
