{
  final CountDownLatch splitLatch=new CountDownLatch(6);
  h4.getCluster().addMembershipListener(new MembershipAdapter(){
    @Override public void memberRemoved(    MembershipEvent membershipEvent){
      splitLatch.countDown();
    }
  }
);
  h5.getCluster().addMembershipListener(new MembershipAdapter(){
    @Override public void memberRemoved(    MembershipEvent membershipEvent){
      splitLatch.countDown();
    }
  }
);
  splitCluster();
  assertTrue(splitLatch.await(30,TimeUnit.SECONDS));
  assertEquals(3,h1.getCluster().getMembers().size());
  assertEquals(3,h2.getCluster().getMembers().size());
  assertEquals(3,h3.getCluster().getMembers().size());
  assertEquals(2,h4.getCluster().getMembers().size());
  assertEquals(2,h5.getCluster().getMembers().size());
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      assertFalse(h4.getQuorumService().getQuorum(SUCCESSFUL_SPLIT_TEST_QUORUM_NAME).isPresent());
      assertFalse(h5.getQuorumService().getQuorum(SUCCESSFUL_SPLIT_TEST_QUORUM_NAME).isPresent());
    }
  }
);
  return this;
}
