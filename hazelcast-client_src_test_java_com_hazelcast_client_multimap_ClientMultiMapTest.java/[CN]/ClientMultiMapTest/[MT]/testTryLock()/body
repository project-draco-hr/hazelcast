{
  final MultiMap mm=client.getMultiMap(randomString());
  final Object key="keyZ";
  mm.lock(key);
  final CountDownLatch tryLockFailed=new CountDownLatch(1);
  new Thread(){
    public void run(){
      try {
        if (!mm.tryLock(key,2,TimeUnit.SECONDS)) {
          tryLockFailed.countDown();
        }
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
.start();
  assertTrue(tryLockFailed.await(30,TimeUnit.SECONDS));
  assertTrue(mm.isLocked(key));
  final CountDownLatch tryLockReturnsTrue=new CountDownLatch(1);
  new Thread(){
    public void run(){
      try {
        if (mm.tryLock(key,20,TimeUnit.SECONDS)) {
          tryLockReturnsTrue.countDown();
        }
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
.start();
  Thread.sleep(1000);
  mm.unlock(key);
  assertTrue(tryLockReturnsTrue.await(30,TimeUnit.SECONDS));
  assertTrue(mm.isLocked(key));
  mm.forceUnlock(key);
}
