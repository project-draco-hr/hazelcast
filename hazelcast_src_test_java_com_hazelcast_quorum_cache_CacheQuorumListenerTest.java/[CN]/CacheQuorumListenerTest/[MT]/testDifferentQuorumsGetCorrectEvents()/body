{
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(3);
  final CountDownLatch quorumFailureLatch=new CountDownLatch(2);
  String fourNodeQuorumName="fourNode";
  QuorumConfig fourNodeQuorumConfig=new QuorumConfig(fourNodeQuorumName,true,4);
  fourNodeQuorumConfig.addListenerConfig(new QuorumListenerConfig(new QuorumListener(){
    public void onChange(    QuorumEvent quorumEvent){
      if (!quorumEvent.isPresent()) {
        quorumFailureLatch.countDown();
      }
    }
  }
));
  String threeNodeQuorumName="threeNode";
  QuorumConfig threeNodeQuorumConfig=new QuorumConfig(threeNodeQuorumName,true,3);
  threeNodeQuorumConfig.addListenerConfig(new QuorumListenerConfig(new QuorumListener(){
    public void onChange(    QuorumEvent quorumEvent){
      if (!quorumEvent.isPresent()) {
        quorumFailureLatch.countDown();
      }
    }
  }
));
  CacheSimpleConfig fourNodeCacheConfig=new CacheSimpleConfig();
  fourNodeCacheConfig.setName("fourNode");
  fourNodeCacheConfig.setQuorumName(fourNodeQuorumName);
  CacheSimpleConfig threeNodeCacheConfig=new CacheSimpleConfig();
  threeNodeCacheConfig.setName("threeNode");
  threeNodeCacheConfig.setQuorumName(threeNodeQuorumName);
  Config config=new Config();
  config.addCacheConfig(fourNodeCacheConfig);
  config.addQuorumConfig(fourNodeQuorumConfig);
  config.addCacheConfig(threeNodeCacheConfig);
  config.addQuorumConfig(threeNodeQuorumConfig);
  HazelcastInstance h1=factory.newHazelcastInstance(config);
  factory.newHazelcastInstance(config);
  HazelcastServerCachingProvider cachingProvider=HazelcastServerCachingProvider.createCachingProvider(h1);
  Cache<Object,Object> fourNode=cachingProvider.getCacheManager().getCache("fourNode");
  Cache<Object,Object> threeNode=cachingProvider.getCacheManager().getCache("threeNode");
  try {
    threeNode.put(generateKeyOwnedBy(h1),"bar");
    fail("Expected a QuorumException");
  }
 catch (  QuorumException expected) {
    EmptyStatement.ignore(expected);
  }
  try {
    fourNode.put(generateKeyOwnedBy(h1),"bar");
    fail("Expected a QuorumException");
  }
 catch (  QuorumException expected) {
    EmptyStatement.ignore(expected);
  }
  assertOpenEventually(quorumFailureLatch,15);
}
