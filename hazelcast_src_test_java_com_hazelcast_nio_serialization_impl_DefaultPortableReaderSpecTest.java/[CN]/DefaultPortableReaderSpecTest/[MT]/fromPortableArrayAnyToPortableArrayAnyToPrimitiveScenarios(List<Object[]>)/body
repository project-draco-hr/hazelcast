{
  String p="fromPortableArrayAnyToPortableArrayAnyToPrimitiveScenarios";
  PrimitivePortable p1=prim(1,NONE);
  PrimitivePortable p10=prim(10,FULL);
  PrimitivePortable p20=prim(20,FULL);
  NestedGroupPortable input=nested(new Portable[]{new GroupPortable(new Portable[0]),group(p1,p10),new GroupPortable((Portable[])null),group(new PrimitivePortable[]{p20})});
  Class failure=IllegalArgumentException.class;
  result.addAll(asList(scenario(input,failure,ByteArray,"portables[any].portables[any].byte_",p),scenario(input,failure,ShortArray,"portables[any].portables[any].short_",p),scenario(input,failure,IntArray,"portables[any].portables[any].int_",p),scenario(input,failure,LongArray,"portables[any].portables[any].long_",p),scenario(input,failure,CharArray,"portables[any].portables[any].char_",p),scenario(input,failure,FloatArray,"portables[any].portables[any].float_",p),scenario(input,failure,DoubleArray,"portables[any].portables[any].double_",p),scenario(input,failure,BooleanArray,"portables[any].portables[any].boolean_",p)));
  List expectedUtfArray=list(null,p1.string_,p10.string_,null,p20.string_);
  result.add(scenario(input,expectedUtfArray,UTFArray,"portables[any].portables[any].string_",p));
  result.addAll(asList(scenario(input,list(null,p1.byte_,p10.byte_,null,p20.byte_),Generic,"portables[any].portables[any].byte_",p),scenario(input,list(null,p1.short_,p10.short_,null,p20.short_),Generic,"portables[any].portables[any].short_",p),scenario(input,list(null,p1.int_,p10.int_,null,p20.int_),Generic,"portables[any].portables[any].int_",p),scenario(input,list(null,p1.long_,p10.long_,null,p20.long_),Generic,"portables[any].portables[any].long_",p),scenario(input,list(null,p1.char_,p10.char_,null,p20.char_),Generic,"portables[any].portables[any].char_",p),scenario(input,list(null,p1.float_,p10.float_,null,p20.float_),Generic,"portables[any].portables[any].float_",p),scenario(input,list(null,p1.double_,p10.double_,null,p20.double_),Generic,"portables[any].portables[any].double_",p),scenario(input,list(null,p1.boolean_,p10.boolean_,null,p20.boolean_),Generic,"portables[any].portables[any].boolean_",p),scenario(input,list(null,p1.string_,p10.string_,null,p20.string_),Generic,"portables[any].portables[any].string_",p)));
  NestedGroupPortable inputEmpty=nested(new Portable[0]);
  result.addAll(asList(scenario(inputEmpty,null,ByteArray,"portables[any].portables[any].byte_",p),scenario(inputEmpty,null,ShortArray,"portables[any].portables[any].short_",p),scenario(inputEmpty,null,IntArray,"portables[any].portables[any].int_",p),scenario(inputEmpty,null,LongArray,"portables[any].portables[any].long_",p),scenario(inputEmpty,null,CharArray,"portables[any].portables[any].char_",p),scenario(inputEmpty,null,FloatArray,"portables[any].portables[any].float_",p),scenario(inputEmpty,null,DoubleArray,"portables[any].portables[any].double_",p),scenario(inputEmpty,null,BooleanArray,"portables[any].portables[any].boolean_",p),scenario(inputEmpty,null,UTFArray,"portables[any].portables[any].string_",p)));
  result.addAll(asList(scenario(inputEmpty,null,Generic,"portables[any].portables[any].byte_",p),scenario(inputEmpty,null,Generic,"portables[any].portables[any].short_",p),scenario(inputEmpty,null,Generic,"portables[any].portables[any].int_",p),scenario(inputEmpty,null,Generic,"portables[any].portables[any].long_",p),scenario(inputEmpty,null,Generic,"portables[any].portables[any].char_",p),scenario(inputEmpty,null,Generic,"portables[any].portables[any].float_",p),scenario(inputEmpty,null,Generic,"portables[any].portables[any].double_",p),scenario(inputEmpty,null,Generic,"portables[any].portables[any].boolean_",p),scenario(inputEmpty,null,Generic,"portables[any].portables[any].string_",p)));
  NestedGroupPortable inputNull=nested((Portable[])null);
  result.addAll(asList(scenario(inputNull,null,ByteArray,"portables[any].portables[any].byte_",p),scenario(inputNull,null,ShortArray,"portables[any].portables[any].short_",p),scenario(inputNull,null,IntArray,"portables[any].portables[any].int_",p),scenario(inputNull,null,LongArray,"portables[any].portables[any].long_",p),scenario(inputNull,null,CharArray,"portables[any].portables[any].char_",p),scenario(inputNull,null,FloatArray,"portables[any].portables[any].float_",p),scenario(inputNull,null,DoubleArray,"portables[any].portables[any].double_",p),scenario(inputNull,null,BooleanArray,"portables[any].portables[any].boolean_",p),scenario(inputNull,null,UTFArray,"portables[any].portables[any].string_",p)));
  result.addAll(asList(scenario(inputNull,null,Generic,"portables[any].portables[any].byte_",p),scenario(inputNull,null,Generic,"portables[any].portables[any].short_",p),scenario(inputNull,null,Generic,"portables[any].portables[any].int_",p),scenario(inputNull,null,Generic,"portables[any].portables[any].long_",p),scenario(inputNull,null,Generic,"portables[any].portables[any].char_",p),scenario(inputNull,null,Generic,"portables[any].portables[any].float_",p),scenario(inputNull,null,Generic,"portables[any].portables[any].double_",p),scenario(inputNull,null,Generic,"portables[any].portables[any].boolean_",p),scenario(inputNull,null,Generic,"portables[any].portables[any].string_",p)));
}
