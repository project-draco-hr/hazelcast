{
  String p="fromPortableArrayToPortableArrayAnyScenarios";
  NestedGroupPortable anyGroup=nested(new Portable[]{group(prim(1,FULL),prim(10,NONE),prim(50,NULL)),group(prim(2,FULL),prim(20,NONE),prim(80,NULL))});
  result.addAll(asList(scenario(anyGroup,((GroupPortable)(anyGroup.portables[0])).portables,PortableArray,"portables[0].portables[any]",p),scenario(anyGroup,new Portable[]{prim(1,FULL),prim(2,FULL)},PortableArray,"portables[any].portables[0]",p),scenario(anyGroup,new Portable[]{prim(10,FULL),prim(20,FULL)},PortableArray,"portables[any].portables[1]",p),scenario(anyGroup,new Portable[]{prim(50,FULL),prim(80,FULL)},PortableArray,"portables[any].portables[2]",p),scenario(anyGroup,new Portable[]{prim(1,FULL),prim(10,FULL),prim(50,FULL),prim(2,FULL),prim(20,FULL),prim(80,FULL)},PortableArray,"portables[any].portables[any]",p)));
  result.addAll(asList(scenario(anyGroup,((GroupPortable)(anyGroup.portables[0])).portables,Generic,"portables[0].portables[any]",p),scenario(anyGroup,new Portable[]{prim(1,FULL),prim(2,FULL)},Generic,"portables[any].portables[0]",p),scenario(anyGroup,new Portable[]{prim(10,FULL),prim(20,FULL)},Generic,"portables[any].portables[1]",p),scenario(anyGroup,new Portable[]{prim(50,FULL),prim(80,FULL)},Generic,"portables[any].portables[2]",p),scenario(anyGroup,new Portable[]{prim(1,FULL),prim(10,FULL),prim(50,FULL),prim(2,FULL),prim(20,FULL),prim(80,FULL)},Generic,"portables[any].portables[any]",p)));
  NestedGroupPortable nestedEmptyArrayGroup=nested(new Portable[]{new GroupPortable(new Portable[0]),group(prim(1,FULL),prim(10,NONE),prim(50,NULL))});
  result.addAll(asList(scenario(nestedEmptyArrayGroup,null,PortableArray,"portables[0].portables[any]",p),scenario(nestedEmptyArrayGroup,new Portable[]{null,prim(1,FULL)},PortableArray,"portables[any].portables[0]",p),scenario(nestedEmptyArrayGroup,new Portable[]{null,prim(10,FULL)},PortableArray,"portables[any].portables[1]",p),scenario(nestedEmptyArrayGroup,new Portable[]{null,prim(50,FULL)},PortableArray,"portables[any].portables[2]",p),scenario(nestedEmptyArrayGroup,new Portable[]{null,prim(1,FULL),prim(10,FULL),prim(50,FULL)},PortableArray,"portables[any].portables[any]",p)));
  result.addAll(asList(scenario(nestedEmptyArrayGroup,null,Generic,"portables[0].portables[any]",p),scenario(nestedEmptyArrayGroup,new Portable[]{null,prim(1,FULL)},Generic,"portables[any].portables[0]",p),scenario(nestedEmptyArrayGroup,new Portable[]{null,prim(10,FULL)},Generic,"portables[any].portables[1]",p),scenario(nestedEmptyArrayGroup,new Portable[]{null,prim(50,FULL)},Generic,"portables[any].portables[2]",p),scenario(nestedEmptyArrayGroup,new Portable[]{null,prim(1,FULL),prim(10,FULL),prim(50,FULL)},Generic,"portables[any].portables[any]",p)));
  NestedGroupPortable nestedNullArrayGroup=nested(new Portable[]{new GroupPortable((Portable[])null),group(prim(1,FULL),prim(10,NONE),prim(50,NULL))});
  result.addAll(asList(scenario(nestedNullArrayGroup,null,PortableArray,"portables[0].portables[any]",p),scenario(nestedNullArrayGroup,new Portable[]{null,prim(1,FULL)},PortableArray,"portables[any].portables[0]",p),scenario(nestedNullArrayGroup,new Portable[]{null,prim(10,FULL)},PortableArray,"portables[any].portables[1]",p),scenario(nestedNullArrayGroup,new Portable[]{null,prim(50,FULL)},PortableArray,"portables[any].portables[2]",p),scenario(nestedNullArrayGroup,new Portable[]{null,prim(1,FULL),prim(10,FULL),prim(50,FULL)},PortableArray,"portables[any].portables[any]",p)));
  result.addAll(asList(scenario(nestedNullArrayGroup,null,PortableArray,"portables[0].portables[any]",p),scenario(nestedNullArrayGroup,new Portable[]{null,prim(1,FULL)},Generic,"portables[any].portables[0]",p),scenario(nestedNullArrayGroup,new Portable[]{null,prim(10,FULL)},Generic,"portables[any].portables[1]",p),scenario(nestedNullArrayGroup,new Portable[]{null,prim(50,FULL)},Generic,"portables[any].portables[2]",p),scenario(nestedNullArrayGroup,new Portable[]{null,prim(1,FULL),prim(10,FULL),prim(50,FULL)},Generic,"portables[any].portables[any]",p)));
}
