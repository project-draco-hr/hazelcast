{
  String p="fromPortableArrayToPrimitiveScenarios";
  GroupPortable fullGroupVarious=group(prim(1,FULL),prim(10,FULL),prim(100,FULL));
  result.addAll(expandPortableArrayPrimitiveScenario(fullGroupVarious,fullGroupVarious,"portableArray.primitiveUTF_",p));
  GroupPortable fullEmptyNullGroup=group(prim(1,FULL),prim(10,NONE),prim(100,NULL));
  result.addAll(expandPortableArrayPrimitiveScenario(fullEmptyNullGroup,fullEmptyNullGroup,"portableArray.primitiveUTF_",p));
  GroupPortable nullArrayGroup=new GroupPortable((Portable[])null);
  result.addAll(expandPortableArrayPrimitiveScenario(nullArrayGroup,nullArrayGroup,"portableArray.primitiveUTF_",p));
  GroupPortable emptyArrayGroup=new GroupPortable(new Portable[0]);
  result.addAll(expandPortableArrayPrimitiveScenario(emptyArrayGroup,emptyArrayGroup,"portableArray.primitiveUTF_",p));
  GroupPortable fullGroup=group(prim(FULL),prim(FULL),prim(FULL));
  result.addAll(expandPrimitiveArrayScenario(fullGroup,prim(FULL),"portables[0].primitiveArray",p));
  result.addAll(expandPrimitiveArrayScenario(fullGroup,prim(FULL),"portables[1].primitiveArray",p));
  result.addAll(expandPrimitiveArrayScenario(fullGroup,prim(FULL),"portables[2].primitiveArray",p));
  GroupPortable noneGroup=group(prim(NONE),prim(NONE),prim(NONE));
  result.addAll(expandPrimitiveArrayScenario(noneGroup,prim(NONE),"portables[0].primitiveArray",p));
  result.addAll(expandPrimitiveArrayScenario(noneGroup,prim(NONE),"portables[1].primitiveArray",p));
  result.addAll(expandPrimitiveArrayScenario(noneGroup,prim(NONE),"portables[2].primitiveArray",p));
  GroupPortable nullGroup=group(prim(NULL),prim(NULL),prim(NULL));
  result.addAll(expandPrimitiveArrayScenario(nullGroup,prim(NULL),"portables[0].primitiveArray",p));
  result.addAll(expandPrimitiveArrayScenario(nullGroup,prim(NULL),"portables[1].primitiveArray",p));
  result.addAll(expandPrimitiveArrayScenario(nullGroup,prim(NULL),"portables[2].primitiveArray",p));
  result.addAll(expandPrimitiveScenario(emptyArrayGroup,IllegalArgumentException.class,"portables[0].primitive_",p));
  result.addAll(expandPrimitiveScenario(emptyArrayGroup,IllegalArgumentException.class,"portables[1].primitive_",p));
  result.addAll(expandPrimitiveScenario(emptyArrayGroup,IllegalArgumentException.class,"portables[2].primitive_",p));
  result.add(scenario(emptyArrayGroup,null,UTF,"portables[0].string_",p));
  result.add(scenario(emptyArrayGroup,null,UTF,"portables[1].string_",p));
  result.add(scenario(emptyArrayGroup,null,Generic,"portables[0].string_",p));
  result.add(scenario(emptyArrayGroup,null,Generic,"portables[1].string_",p));
  result.addAll(expandPrimitiveArrayScenario(emptyArrayGroup,null,"portables[0].primitiveArray",p));
  result.addAll(expandPrimitiveArrayScenario(emptyArrayGroup,null,"portables[1].primitiveArray",p));
  result.addAll(expandPrimitiveArrayScenario(emptyArrayGroup,null,"portables[2].primitiveArray",p));
  result.addAll(expandPrimitiveScenario(nullArrayGroup,IllegalArgumentException.class,"portables[0].primitive_",p));
  result.addAll(expandPrimitiveScenario(nullArrayGroup,IllegalArgumentException.class,"portables[1].primitive_",p));
  result.addAll(expandPrimitiveScenario(nullArrayGroup,IllegalArgumentException.class,"portables[2].primitive_",p));
  result.add(scenario(nullArrayGroup,null,UTF,"portables[0].string_",p));
  result.add(scenario(nullArrayGroup,null,UTF,"portables[1].string_",p));
  result.add(scenario(nullArrayGroup,null,Generic,"portables[0].string_",p));
  result.add(scenario(nullArrayGroup,null,Generic,"portables[1].string_",p));
  result.addAll(expandPrimitiveArrayScenario(nullArrayGroup,null,"portables[0].primitiveArray",p));
  result.addAll(expandPrimitiveArrayScenario(nullArrayGroup,null,"portables[1].primitiveArray",p));
  result.addAll(expandPrimitiveArrayScenario(nullArrayGroup,null,"portables[2].primitiveArray",p));
}
