{
  List<Object[]> scenarios=new ArrayList<Object[]>();
  Object adjustedResult;
  String tokenToReplace="primitive_";
  if (pathToExplode.contains("primitiveUTF_")) {
    tokenToReplace="primitiveUTF_";
  }
  for (  Method method : getPrimitives(tokenToReplace.contains("UTF"))) {
    if (result instanceof PrimitivePortable) {
      adjustedResult=((PrimitivePortable)result).getPrimitive(method);
    }
 else     if (result == null && method != UTF) {
      adjustedResult=IllegalArgumentException.class;
    }
 else {
      adjustedResult=result;
    }
    scenarios.add(scenario(input,adjustedResult,method,pathToExplode.replace(tokenToReplace,method.field),parent));
    scenarios.add(scenario(input,adjustedResult == IllegalArgumentException.class ? null : adjustedResult,Generic,pathToExplode.replace(tokenToReplace,method.field),parent));
  }
  return scenarios;
}
