{
  int instanceCount=3;
  TestHazelcastInstanceFactory instanceFactory=createHazelcastInstanceFactory(instanceCount);
  HazelcastInstance instance=instanceFactory.newInstances(getConfig())[0];
  IMap<String,String> map=instance.getMap(randomString());
  boolean includeValue=false;
  map.addLocalEntryListener(createEntryListener(false),matchingPredicate(),includeValue);
  int count=1000;
  for (int i=0; i < count; i++) {
    map.put("key" + i,"value" + i);
  }
  final int eventPerPartitionMin=count / instanceCount - count / 10;
  final int eventPerPartitionMax=count / instanceCount + count / 10;
  assertTrueEventually(new AssertTask(){
    @Override public void run(){
      assertTrue(globalCount.get() > eventPerPartitionMin && globalCount.get() < eventPerPartitionMax);
    }
  }
);
}
