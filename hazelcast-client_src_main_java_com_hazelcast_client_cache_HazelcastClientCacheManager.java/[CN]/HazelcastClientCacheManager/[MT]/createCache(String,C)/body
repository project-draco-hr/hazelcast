{
  if (isClosed()) {
    throw new IllegalStateException();
  }
  if (cacheName == null) {
    throw new NullPointerException("cacheName must not be null");
  }
  if (configuration == null) {
    throw new NullPointerException("configuration must not be null");
  }
synchronized (caches) {
    final String cacheNameWithPrefix=getCacheNameWithPrefix(cacheName);
    final CacheConfig _cacheConfig=getCacheConfig(cacheNameWithPrefix);
    if (_cacheConfig == null) {
      final CacheConfig<K,V> cacheConfig;
      if (configuration instanceof CompleteConfiguration) {
        cacheConfig=new CacheConfig<K,V>((CompleteConfiguration)configuration);
      }
 else {
        cacheConfig=new CacheConfig<K,V>();
        cacheConfig.setStoreByValue(configuration.isStoreByValue());
        cacheConfig.setTypes(configuration.getKeyType(),configuration.getValueType());
      }
      cacheConfig.setName(cacheName);
      cacheConfig.setManagerPrefix(this.cacheNamePrefix);
      cacheConfig.setUriString(getURI().toString());
      boolean created=createConfigOnPartition(cacheConfig,cacheNameWithPrefix);
      createConfigOnAllMembers(cacheConfig,cacheNameWithPrefix);
      createCacheConfigIfAbsent(cacheConfig,cacheNameWithPrefix);
      final ClientProxy distributedObject=hazelcastInstance.getDistributedObject(CacheService.SERVICE_NAME,cacheNameWithPrefix);
      final ClientCacheProxy<K,V> cacheProxy=new ClientCacheProxy<K,V>(cacheName,cacheConfig,distributedObject,this);
      caches.put(cacheNameWithPrefix,cacheProxy);
      if (created) {
        if (cacheConfig.isStatisticsEnabled()) {
          enableStatistics(cacheName,true);
        }
        if (cacheConfig.isManagementEnabled()) {
          enableManagement(cacheName,true);
        }
        return cacheProxy;
      }
    }
    throw new CacheException("A cache named " + cacheName + " already exists.");
  }
}
