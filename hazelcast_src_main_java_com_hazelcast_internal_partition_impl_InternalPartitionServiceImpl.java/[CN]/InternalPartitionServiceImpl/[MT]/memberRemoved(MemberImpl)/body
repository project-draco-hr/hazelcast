{
  logger.info("Removing " + member);
  partitionStateManager.updateMemberGroupsSize();
  final Address deadAddress=member.getAddress();
  final Address thisAddress=node.getThisAddress();
  lock.lock();
  try {
    if (partitionStateManager.isInitialized() && node.getClusterService().getClusterState() == ClusterState.ACTIVE) {
      partitionStateManager.incrementVersion();
    }
    migrationManager.onMemberRemove(member);
    if (node.isMaster() && !thisAddress.equals(lastMaster)) {
      Runnable runnable=new FetchMostRecentPartitionTableTask();
      migrationManager.execute(runnable);
    }
    lastMaster=node.getMasterAddress();
    migrationManager.pauseMigration();
    replicaManager.cancelReplicaSyncRequestsTo(deadAddress);
    if (node.isMaster()) {
      migrationManager.execute(new RepairPartitionTableTask(deadAddress));
      migrationManager.triggerRepartitioning();
    }
    migrationManager.resumeMigrationEventually();
  }
  finally {
    lock.unlock();
  }
}
