{
  Callable<Boolean> callable=new Callable<Boolean>(){
    public Boolean call(){
synchronized (lifecycleLock) {
        long begin=Clock.currentTimeMillis();
        fireLifecycleEvent(SHUTTING_DOWN);
        hazelcastClient.doShutdown();
        running.set(false);
        long time=Clock.currentTimeMillis() - begin;
        logger.log(Level.FINE,"HazelcastClient shutdown completed in " + time + " ms.");
        fireLifecycleEvent(SHUTDOWN);
        return true;
      }
    }
  }
;
  hazelcastClient.callAsyncAndWait(callable);
  try {
    Thread.sleep(1000);
  }
 catch (  InterruptedException ignore) {
  }
  es.shutdown();
}
