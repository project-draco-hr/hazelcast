{
  if (!(op instanceof PartitionAwareOperation)) {
    return;
  }
  int partitionId=op.getPartitionId();
  if (partitionId < 0) {
    throw new IllegalArgumentException("Partition id cannot be negative! -> " + partitionId);
  }
  InternalPartition internalPartition=nodeEngine.getPartitionService().getPartition(partitionId);
  if (retryDuringMigration(op) && internalPartition.isMigrating()) {
    throw new PartitionMigratingException(node.getThisAddress(),partitionId,op.getClass().getName(),op.getServiceName());
  }
  Address owner=internalPartition.getReplicaAddress(op.getReplicaIndex());
  if (op.validatesTarget() && !node.getThisAddress().equals(owner)) {
    throw new WrongTargetException(node.getThisAddress(),owner,partitionId,op.getReplicaIndex(),op.getClass().getName(),op.getServiceName());
  }
}
