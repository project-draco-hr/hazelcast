{
  final CacheEntry currentEntry=(CacheEntry)value;
  long timeout=System.currentTimeMillis() + tryLockAndGetTimeout;
  do {
    final CacheEntry previousEntry=(CacheEntry)map.get(key);
    if (previousEntry == null) {
      if (map.putIfAbsent(key,value) == null) {
        return true;
      }
    }
 else     if (versionComparator.compare(currentEntry.getVersion(),previousEntry.getVersion()) > 0) {
      if (map.replace(key,previousEntry,value)) {
        return true;
      }
    }
 else {
      return false;
    }
  }
 while (System.currentTimeMillis() < timeout);
  return false;
}
