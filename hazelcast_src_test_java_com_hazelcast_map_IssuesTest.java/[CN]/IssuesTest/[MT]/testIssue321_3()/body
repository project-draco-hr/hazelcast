{
  int n=1;
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(n);
  final IMap<Integer,Integer> imap=factory.newHazelcastInstance(getConfig()).getMap("testIssue321_3");
  final List<EntryEvent<Integer,Integer>> eventsWithValues=new ArrayList<EntryEvent<Integer,Integer>>();
  final List<EntryEvent<Integer,Integer>> eventsWithoutValues=new ArrayList<EntryEvent<Integer,Integer>>();
  final EntryAdapter<Integer,Integer> listener=new EntryAdapter<Integer,Integer>(){
    @Override public void entryAdded(    com.hazelcast.core.EntryEvent<Integer,Integer> event){
      if (event.getValue() == null) {
        eventsWithoutValues.add(event);
      }
 else {
        eventsWithValues.add(event);
      }
    }
  }
;
  imap.addEntryListener(listener,true);
  Thread.sleep(50L);
  imap.addEntryListener(listener,false);
  imap.put(1,1);
  assertEqualsEventually(new Callable<Integer>(){
    @Override public Integer call() throws Exception {
      return eventsWithValues.size();
    }
  }
,1);
  assertEqualsEventually(new Callable<Integer>(){
    @Override public Integer call() throws Exception {
      return eventsWithoutValues.size();
    }
  }
,1);
}
