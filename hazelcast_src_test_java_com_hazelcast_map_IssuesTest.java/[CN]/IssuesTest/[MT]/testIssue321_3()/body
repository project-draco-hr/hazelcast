{
  int n=1;
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(n);
  final IMap<Integer,Integer> imap=factory.newHazelcastInstance(null).getMap("testIssue321_3");
  final BlockingQueue<EntryEvent<Integer,Integer>> events=new LinkedBlockingQueue<EntryEvent<Integer,Integer>>();
  final EntryAdapter<Integer,Integer> listener=new EntryAdapter<Integer,Integer>(){
    @Override public void entryAdded(    EntryEvent<Integer,Integer> event){
      events.add(event);
    }
  }
;
  imap.addEntryListener(listener,true);
  Thread.sleep(50L);
  imap.addEntryListener(listener,false);
  imap.put(1,1);
  final EntryEvent<Integer,Integer> event1=events.poll(10,TimeUnit.MILLISECONDS);
  final EntryEvent<Integer,Integer> event2=events.poll(10,TimeUnit.MILLISECONDS);
  assertNotNull(event1);
  assertNotNull(event2);
  assertNotNull(event1.getValue());
  assertNull(event2.getValue());
}
