{
  this.name=name;
  this.nodeEngine=nodeEngine;
  this.localMember=nodeEngine.getLocalMember();
  this.localMemberHash=localMember.getUuid().hashCode();
  this.eventService=nodeEngine.getEventService();
  this.executionService=nodeEngine.getExecutionService();
  this.replicatedMapService=replicatedMapService;
  this.replicatedMapConfig=replicatedMapService.getReplicatedMapConfig(name);
  this.executorService=getExecutorService(nodeEngine,replicatedMapConfig);
  this.ttlEvictionScheduler=EntryTaskSchedulerFactory.newScheduler(nodeEngine.getExecutionService().getScheduledExecutor(),new ReplicatedMapEvictionProcessor(nodeEngine,replicatedMapService,name),ScheduleType.POSTPONE);
  this.mutexes=new Object[replicatedMapConfig.getConcurrencyLevel()];
  for (int i=0; i < mutexes.length; i++) {
    mutexes[i]=new Object();
  }
  this.cleanerFuture=cleanerRegistrator.registerCleaner(this);
  this.allowReplicationHooks=Boolean.parseBoolean(System.getProperty("hazelcast.repmap.hooks.allowed","false"));
}
