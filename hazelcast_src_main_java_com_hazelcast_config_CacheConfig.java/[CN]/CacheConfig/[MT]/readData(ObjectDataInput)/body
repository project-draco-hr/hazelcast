{
  name=in.readUTF();
  managerPrefix=in.readUTF();
  uriString=in.readUTF();
  backupCount=in.readInt();
  asyncBackupCount=in.readInt();
  final int _inMemoryFormat=in.readInt();
  inMemoryFormat=InMemoryFormat.values()[_inMemoryFormat];
  final int _evictionPolicy=in.readInt();
  evictionPolicy=EvictionPolicy.values()[_evictionPolicy];
  keyType=in.readObject();
  valueType=in.readObject();
  cacheLoaderFactory=in.readObject();
  cacheWriterFactory=in.readObject();
  expiryPolicyFactory=in.readObject();
  isReadThrough=in.readBoolean();
  isWriteThrough=in.readBoolean();
  isStoreByValue=in.readBoolean();
  isManagementEnabled=in.readBoolean();
  final boolean listNotEmpty=in.readBoolean();
  if (listNotEmpty) {
    final int size=in.readInt();
    listenerConfigurations=new HashSet<CacheEntryListenerConfiguration<K,V>>(size);
    for (int i=0; i < size; i++) {
      listenerConfigurations.add((CacheEntryListenerConfiguration<K,V>)in.readObject());
    }
  }
}
