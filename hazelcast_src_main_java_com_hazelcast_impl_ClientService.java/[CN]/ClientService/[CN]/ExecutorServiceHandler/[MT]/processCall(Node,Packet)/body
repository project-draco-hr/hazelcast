{
  Future<?> future;
  ExecutorService executorService=node.factory.getExecutorService();
  Callable<Object> callable=(Callable<Object>)toObject(packet.key);
  Object result;
  try {
    if (callable instanceof ClientDistributedTask) {
      DistributedTask task=null;
      ClientDistributedTask cdt=(ClientDistributedTask)callable;
      if (cdt.getKey() != null) {
        task=new DistributedTask(cdt.getCallable(),cdt.getKey());
      }
 else       if (cdt.getMember() != null) {
        task=new DistributedTask(cdt.getCallable(),cdt.getMember());
      }
 else       if (cdt.getMembers() != null) {
        task=new MultiTask(cdt.getCallable(),cdt.getMembers());
      }
      executorService.submit(task);
      result=task.get();
    }
 else {
      future=executorService.submit(callable);
      result=future.get();
    }
    packet.value=toData(result);
  }
 catch (  InterruptedException e) {
    return;
  }
catch (  ExecutionException e) {
    packet.value=toData(e);
  }
}
