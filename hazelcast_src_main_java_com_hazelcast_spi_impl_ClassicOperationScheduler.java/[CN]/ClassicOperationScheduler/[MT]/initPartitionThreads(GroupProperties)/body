{
  int threadCount=groupProperties.PARTITION_OPERATION_THREAD_COUNT.getInteger();
  if (threadCount <= 0) {
    int coreSize=Runtime.getRuntime().availableProcessors();
    threadCount=Math.max(2,coreSize);
  }
  OperationThread[] threads=new OperationThread[threadCount];
  for (int threadId=0; threadId < threads.length; threadId++) {
    String threadName=threadGroup.getThreadPoolNamePrefix("partition-operation") + threadId;
    LinkedBlockingQueue workQueue=new LinkedBlockingQueue();
    ConcurrentLinkedQueue priorityWorkQueue=new ConcurrentLinkedQueue();
    OperationThread operationThread=new OperationThread(threadName,true,threadId,workQueue,priorityWorkQueue);
    threads[threadId]=operationThread;
    operationThread.start();
  }
  return threads;
}
