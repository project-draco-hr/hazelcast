{
  ExecutorService esService=client.getExecutorService();
  Set<Member> members=client.getCluster().getMembers();
  System.out.println("Members: " + members.size());
  MultiTask<DistributedMapStatsCallable.MemberMapStat> task=new MultiTask<DistributedMapStatsCallable.MemberMapStat>(new DistributedMapStatsCallable(mapName),members);
  esService.execute(task);
  Collection<DistributedMapStatsCallable.MemberMapStat> mapStats=null;
  try {
    mapStats=task.get();
  }
 catch (  InterruptedException e) {
    return null;
  }
catch (  ExecutionException e) {
    return null;
  }
  if (mapStats == null) {
    return null;
  }
  List<MapStatistics.LocalMapStatistics> listOfStats=new ArrayList<MapStatistics.LocalMapStatistics>();
  System.out.println("Size of list returned from exs : " + mapStats.size());
  for (  DistributedMapStatsCallable.MemberMapStat memberMapStat : mapStats) {
    MapStatistics.LocalMapStatistics stat=new MapStatistics.LocalMapStatistics();
    stat.backupEntryCount=memberMapStat.getLocalMapStats().getBackupEntryCount();
    stat.backupEntryMemoryCost=memberMapStat.getLocalMapStats().getBackupEntryMemoryCost();
    stat.creationTime=memberMapStat.getLocalMapStats().getCreationTime();
    stat.hits=memberMapStat.getLocalMapStats().getHits();
    stat.lastAccessTime=memberMapStat.getLocalMapStats().getLastAccessTime();
    stat.lastUpdateTime=memberMapStat.getLocalMapStats().getLastUpdateTime();
    stat.lockedEntryCount=memberMapStat.getLocalMapStats().getLockedEntryCount();
    stat.lockWaitCount=memberMapStat.getLocalMapStats().getLockWaitCount();
    stat.markedAsRemovedEntryCount=memberMapStat.getLocalMapStats().getMarkedAsRemovedEntryCount();
    stat.markedAsRemovedMemoryCost=memberMapStat.getLocalMapStats().getMarkedAsRemovedMemoryCost();
    stat.ownedEntryCount=memberMapStat.getLocalMapStats().getOwnedEntryCount();
    stat.ownedEntryMemoryCost=memberMapStat.getLocalMapStats().getOwnedEntryMemoryCost();
    stat.lastEvictionTime=memberMapStat.getLocalMapStats().getLastEvictionTime();
    stat.memberName=memberMapStat.getMember().getInetSocketAddress().getHostName() + ":" + memberMapStat.getMember().getInetSocketAddress().getPort();
    listOfStats.add(stat);
  }
  System.out.println("Returning List of Stats: " + listOfStats.size());
  MapStatistics event=new MapStatistics(clusterId);
  event.setSize(map.size());
  event.setListOfLocalStats(listOfStats);
  if (!list.isEmpty() && list.get(list.size() - 1).equals(event)) {
    list.remove(list.size() - 1);
  }
  list.add(event);
  while (list.size() > 100) {
    list.remove(0);
  }
  return event;
}
