{
  try {
    Field field=object.getClass().getDeclaredField(fieldName);
    field.setAccessible(true);
    return (T)field.get(object);
  }
 catch (  NoSuchFieldException e) {
    throw new IllegalArgumentException("Class " + object.getClass() + " doesn't have a field "+ fieldName+ " declared");
  }
catch (  IllegalAccessException e) {
    throw new IllegalArgumentException(e);
  }
}
