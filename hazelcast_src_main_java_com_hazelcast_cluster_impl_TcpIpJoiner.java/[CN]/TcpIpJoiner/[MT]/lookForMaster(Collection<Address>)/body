{
  int tryCount=0;
  while (node.getMasterAddress() == null && tryCount++ < 20) {
    sendMasterQuestion(possibleAddresses);
    Thread.sleep(JOIN_RETRY_WAIT_TIME);
    if (isAllBlacklisted(possibleAddresses)) {
      break;
    }
  }
  if (node.joined()) {
    return;
  }
  if (isAllBlacklisted(possibleAddresses) && node.getMasterAddress() == null) {
    if (logger.isFinestEnabled()) {
      logger.finest("Setting myself as master! No possible addresses remaining to connect...");
    }
    node.setAsMaster();
    return;
  }
  long maxMasterJoinTime=getMaxJoinTimeToMasterNode();
  long start=Clock.currentTimeMillis();
  while (node.isRunning() && !node.joined() && Clock.currentTimeMillis() - start < maxMasterJoinTime) {
    Address master=node.getMasterAddress();
    if (master != null) {
      if (logger.isFinestEnabled()) {
        logger.finest("Joining to master " + master);
      }
      clusterJoinManager.sendJoinRequest(master,true);
    }
 else {
      break;
    }
    Thread.sleep(JOIN_RETRY_WAIT_TIME);
  }
  if (!node.joined()) {
    Address master=node.getMasterAddress();
    if (master != null) {
      logger.warning("Couldn't join to the master : " + master);
    }
 else {
      if (logger.isFinestEnabled()) {
        logger.finest("Couldn't find a master! But there was connections available: " + possibleAddresses);
      }
    }
  }
}
