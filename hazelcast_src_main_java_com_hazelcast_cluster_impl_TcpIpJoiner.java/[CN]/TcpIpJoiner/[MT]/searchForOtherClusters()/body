{
  final Collection<Address> possibleAddresses;
  try {
    possibleAddresses=getPossibleAddresses();
  }
 catch (  Throwable e) {
    logger.severe(e);
    return;
  }
  possibleAddresses.remove(node.getThisAddress());
  possibleAddresses.removeAll(node.getClusterService().getMemberAddresses());
  if (possibleAddresses.isEmpty()) {
    return;
  }
  for (  Address address : possibleAddresses) {
    JoinMessage response=sendSplitBrainJoinMessage(address);
    if (shouldMerge(response)) {
      logger.warning(node.getThisAddress() + " is merging [tcp/ip] to " + address);
      setTargetAddress(address);
      startClusterMerge(address);
      return;
    }
  }
}
