{
  JobTrackerConfig config=jobTracker.getJobTrackerConfig();
  boolean communicateStats=config.isCommunicateStats();
  if (chunkSize == -1) {
    chunkSize=config.getChunkSize();
  }
  ClusterService cs=nodeEngine.getClusterService();
  Collection<MemberImpl> members=cs.getMemberList();
  for (  MemberImpl member : members) {
    Operation operation=new KeyValueJobOperation<KeyIn,ValueIn>(name,jobId,chunkSize,keyValueSource,mapper,combinerFactory,reducerFactory,communicateStats);
    executeOperation(operation,member.getAddress(),mapReduceService,nodeEngine);
  }
  for (  MemberImpl member : members) {
    Operation operation=new StartProcessingJobOperation<KeyIn>(name,jobId,keys,predicate);
    executeOperation(operation,member.getAddress(),mapReduceService,nodeEngine);
  }
  return jobFuture;
}
