{
  JobTrackerConfig config=((AbstractJobTracker)jobTracker).getJobTrackerConfig();
  boolean communicateStats=config.isCommunicateStats();
  if (chunkSize == -1) {
    chunkSize=config.getChunkSize();
  }
  if (topologyChangedStrategy == null) {
    topologyChangedStrategy=config.getTopologyChangedStrategy();
  }
  ClusterService clusterService=nodeEngine.getClusterService();
  for (  Member member : clusterService.getMembers(KeyValueJobOperation.MEMBER_SELECTOR)) {
    Operation operation=new KeyValueJobOperation<KeyIn,ValueIn>(name,jobId,chunkSize,keyValueSource,mapper,combinerFactory,reducerFactory,communicateStats,topologyChangedStrategy);
    executeOperation(operation,member.getAddress(),mapReduceService,nodeEngine);
  }
  for (  Member member : clusterService.getMembers(DATA_MEMBER_SELECTOR)) {
    Operation operation=new StartProcessingJobOperation<KeyIn>(name,jobId,keys,predicate);
    executeOperation(operation,member.getAddress(),mapReduceService,nodeEngine);
  }
  return jobFuture;
}
