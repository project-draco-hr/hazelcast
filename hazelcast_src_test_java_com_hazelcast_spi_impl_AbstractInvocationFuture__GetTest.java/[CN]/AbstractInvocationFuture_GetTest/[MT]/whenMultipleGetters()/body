{
  List<Future> getFutures=new LinkedList<Future>();
  for (int k=0; k < 10; k++) {
    getFutures.add(spawn(new Callable<Object>(){
      @Override public Object call() throws Exception {
        return future.get();
      }
    }
));
  }
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      assertNotSame(VOID,future.getState());
    }
  }
);
  sleepSeconds(5);
  future.complete(value);
  for (  Future getFuture : getFutures) {
    assertCompletesEventually(getFuture);
    assertSame(value,future.get());
  }
  assertSame(value,future.getState());
}
