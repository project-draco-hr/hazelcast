{
  int numClients=5;
  Config config=new Config();
  HazelcastInstance h=Hazelcast.newHazelcastInstance(config);
  ClientConfig clientConfig=new ClientConfig();
  clientConfig.addInetSocketAddress(h.getCluster().getLocalMember().getInetSocketAddress());
  final CountDownLatch connected=new CountDownLatch(numClients);
  final CountDownLatch disconnected=new CountDownLatch(numClients);
  h.getClientService().addClientListener(new ClientListener(){
    public void clientConnected(    Client client){
      connected.countDown();
    }
    public void clientDisconnected(    Client client){
      disconnected.countDown();
    }
  }
);
  Map<Integer,HazelcastClient> map=new HashMap<Integer,HazelcastClient>();
  for (int i=0; i < numClients; i++) {
    HazelcastClient client=HazelcastClient.newHazelcastClient(clientConfig);
    map.put(i,client);
  }
  assertTrue(connected.await(5000,TimeUnit.MILLISECONDS));
  assertEquals(numClients,disconnected.getCount());
  for (  HazelcastClient client : map.values()) {
    client.getLifecycleService().shutdown();
  }
  assertTrue(disconnected.await(5000,TimeUnit.MILLISECONDS));
}
