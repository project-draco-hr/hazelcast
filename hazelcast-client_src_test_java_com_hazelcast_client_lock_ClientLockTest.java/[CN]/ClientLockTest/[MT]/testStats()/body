{
  factory.newHazelcastInstance();
  HazelcastInstance hz=factory.newHazelcastClient();
  final ILock lock=hz.getLock(randomName());
  lock.lock();
  assertTrue(lock.isLocked());
  assertTrue(lock.isLockedByCurrentThread());
  assertEquals(1,lock.getLockCount());
  lock.unlock();
  assertFalse(lock.isLocked());
  assertEquals(0,lock.getLockCount());
  assertEquals(-1L,lock.getRemainingLeaseTime());
  lock.lock(1,TimeUnit.MINUTES);
  assertTrue(lock.isLocked());
  assertTrue(lock.isLockedByCurrentThread());
  assertEquals(1,lock.getLockCount());
  assertTrue(lock.getRemainingLeaseTime() > 1000 * 30);
  final CountDownLatch latch=new CountDownLatch(1);
  new Thread(){
    public void run(){
      assertTrue(lock.isLocked());
      assertFalse(lock.isLockedByCurrentThread());
      assertEquals(1,lock.getLockCount());
      assertTrue(lock.getRemainingLeaseTime() > 1000 * 30);
      latch.countDown();
    }
  }
.start();
  assertTrue(latch.await(1,TimeUnit.MINUTES));
}
