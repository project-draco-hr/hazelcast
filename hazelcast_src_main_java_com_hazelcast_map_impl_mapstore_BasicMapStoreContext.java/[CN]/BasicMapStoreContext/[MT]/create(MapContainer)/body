{
  final BasicMapStoreContext context=new BasicMapStoreContext();
  final String mapName=mapContainer.getName();
  final MapServiceContext mapServiceContext=mapContainer.getMapServiceContext();
  final NodeEngine nodeEngine=mapServiceContext.getNodeEngine();
  final PartitioningStrategy partitioningStrategy=mapContainer.getPartitioningStrategy();
  final MapConfig mapConfig=mapContainer.getMapConfig();
  final MaxSizeConfig maxSizeConfig=mapConfig.getMaxSizeConfig();
  final MapStoreConfig mapStoreConfig=mapConfig.getMapStoreConfig();
  final ClassLoader configClassLoader=nodeEngine.getConfigClassLoader();
  final Object store=createStore(mapName,mapStoreConfig,configClassLoader);
  final MapStoreWrapper storeWrapper=new MapStoreWrapper(mapName,store);
  setStoreImplToWritableMapStoreConfig(nodeEngine,mapName,store);
  context.setMapName(mapName);
  context.setMapStoreConfig(mapStoreConfig);
  context.setMaxSizeConfig(maxSizeConfig);
  context.setPartitioningStrategy(partitioningStrategy);
  context.setMapServiceContext(mapServiceContext);
  context.setStoreWrapper(storeWrapper);
  final MapStoreManager mapStoreManager=createMapStoreManager(context);
  context.setMapStoreManager(mapStoreManager);
  callLifecycleSupportInit(context);
  return context;
}
