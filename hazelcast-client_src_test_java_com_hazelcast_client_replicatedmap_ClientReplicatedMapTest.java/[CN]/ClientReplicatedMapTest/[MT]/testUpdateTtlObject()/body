{
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);
  Config cfg=new Config();
  cfg.getReplicatedMapConfig("default").setInMemoryFormat(InMemoryFormat.OBJECT);
  HazelcastInstance instance1=Hazelcast.newHazelcastInstance(cfg);
  HazelcastInstance instance2=HazelcastClient.newHazelcastClient();
  final ReplicatedMap<String,String> map1=instance1.getReplicatedMap("default");
  final ReplicatedMap<String,String> map2=instance2.getReplicatedMap("default");
  WatchedOperationExecutor executor=new WatchedOperationExecutor();
  executor.execute(new Runnable(){
    @Override public void run(){
      map1.put("foo","bar",3,TimeUnit.SECONDS);
    }
  }
,2,EntryEventType.ADDED,map1,map2);
  executor.execute(new Runnable(){
    @Override public void run(){
      map1.put("foo2","bar",3,TimeUnit.SECONDS);
    }
  }
,2,EntryEventType.ADDED,map1,map2);
  assertEquals("bar",map1.get("foo"));
  assertEquals("bar",map2.get("foo2"));
  executor.execute(new Runnable(){
    @Override public void run(){
      map2.put("foo","bar2");
    }
  }
,2,EntryEventType.ADDED,map1,map2);
  executor.execute(new Runnable(){
    @Override public void run(){
      map2.put("foo2","bar2",1,TimeUnit.SECONDS);
    }
  }
,2,EntryEventType.ADDED,map1,map2);
  TimeUnit.SECONDS.sleep(5);
  assertEquals("bar2",map1.get("foo"));
  assertEquals("bar2",map2.get("foo"));
  assertNull(map1.get("foo2"));
  assertNull(map2.get("foo2"));
}
