{
  if (members.size() == 0) {
    return;
  }
  int randomMember=memberRandomizer.nextInt(members.size());
  Member newMember=members.get(randomMember);
  ReplicatedMapPostJoinOperation.MemberMapPair[] memberMapPairs=new ReplicatedMapPostJoinOperation.MemberMapPair[1];
  memberMapPairs[0]=new ReplicatedMapPostJoinOperation.MemberMapPair(newMember,name);
  OperationService operationService=nodeEngine.getOperationService();
  int defaultChunkSize=ReplicatedMapPostJoinOperation.DEFAULT_CHUNK_SIZE;
  ReplicatedMapPostJoinOperation op=new ReplicatedMapPostJoinOperation(memberMapPairs,defaultChunkSize);
  operationService.send(op,newMember.getAddress());
}
