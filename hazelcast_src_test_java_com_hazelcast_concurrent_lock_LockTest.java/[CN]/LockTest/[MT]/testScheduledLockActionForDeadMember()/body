{
  final TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);
  final HazelcastInstance h1=nodeFactory.newHazelcastInstance();
  final ILock lock1=h1.getLock("default");
  final HazelcastInstance h2=nodeFactory.newHazelcastInstance();
  final ILock lock2=h2.getLock("default");
  assertTrue(lock1.tryLock());
  final AtomicBoolean error=new AtomicBoolean(false);
  Thread thread=new Thread(new Runnable(){
    public void run(){
      try {
        lock2.lock();
        error.set(true);
      }
 catch (      Throwable ignored) {
      }
    }
  }
);
  thread.start();
  Thread.sleep(5000);
  assertTrue(lock1.isLocked());
  h2.shutdown();
  thread.join(10000);
  assertFalse(thread.isAlive());
  assertFalse(error.get());
  assertTrue(lock1.isLocked());
  lock1.unlock();
  assertFalse(lock1.isLocked());
  assertTrue(lock1.tryLock());
}
