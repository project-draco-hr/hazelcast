{
  final StaticNodeFactory nodeFactory=new StaticNodeFactory(3);
  final Config config=new Config();
  final HazelcastInstance keyOwner=nodeFactory.newHazelcastInstance(config);
  final HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);
  final HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);
  int k=0;
  final AtomicInteger atomicInteger=new AtomicInteger(0);
  while (keyOwner.getCluster().getLocalMember().equals(instance1.getPartitionService().getPartition(k++).getOwner()))   ;
  final int key=k;
  final ILock lock1=instance1.getLock(key);
  lock1.lock();
  Thread t=new Thread(new Runnable(){
    public void run(){
      final ILock lock=instance2.getLock(key);
      lock.lock();
      atomicInteger.incrementAndGet();
    }
  }
);
  t.start();
  keyOwner.getLifecycleService().shutdown();
  Assert.assertEquals(true,lock1.isLocked());
  Assert.assertEquals(true,lock1.tryLock());
  lock1.unlock();
  lock1.unlock();
  Thread.sleep(1000);
  Assert.assertEquals(1,atomicInteger.get());
  lock1.forceUnlock();
}
