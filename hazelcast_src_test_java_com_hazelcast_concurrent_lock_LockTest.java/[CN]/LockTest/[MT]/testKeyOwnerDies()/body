{
  final StaticNodeFactory nodeFactory=createNodeFactory(3);
  final Config config=new Config();
  final HazelcastInstance keyOwner=nodeFactory.newHazelcastInstance(config);
  final HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);
  final HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);
  int k=0;
  final Member localMember=keyOwner.getCluster().getLocalMember();
  while (!localMember.equals(instance1.getPartitionService().getPartition(++k).getOwner())) {
    Thread.sleep(1);
  }
  final int key=k;
  final ILock lock1=instance1.getLock(key);
  lock1.lock();
  final CountDownLatch latch=new CountDownLatch(1);
  new Thread(new Runnable(){
    public void run(){
      final ILock lock=instance2.getLock(key);
      lock.lock();
      latch.countDown();
    }
  }
).start();
  keyOwner.getLifecycleService().shutdown();
  Assert.assertTrue(lock1.isLocked());
  Assert.assertTrue(lock1.tryLock());
  lock1.unlock();
  lock1.unlock();
  Assert.assertTrue(latch.await(5,TimeUnit.SECONDS));
}
