{
  Config config=getConfig();
  final TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  final HazelcastInstance h1=factory.newHazelcastInstance(config);
  final HazelcastInstance h2=factory.newHazelcastInstance(config);
  final String mapName=randomMapName();
  final IMap map=h1.getMap(mapName);
  final int size=100;
  final CountDownLatch transactionCompletedLatch=new CountDownLatch(size + 1);
  final CountDownLatch thresholdReached=new CountDownLatch(1);
  Runnable runnable=new Runnable(){
    public void run(){
      try {
        final int oneThird=size / 3;
        final int threshold=new Random().nextInt(oneThird) + oneThird;
        h1.executeTransaction(options,new TransactionalTask<Boolean>(){
          public Boolean execute(          TransactionalTaskContext context) throws TransactionException {
            final TransactionalMap<Object,Object> txMap=context.getMap(mapName);
            for (int i=0; i < size; i++) {
              if (i == threshold) {
                thresholdReached.countDown();
              }
              txMap.put(i,i);
              sleepMillis(100);
              transactionCompletedLatch.countDown();
            }
            return true;
          }
        }
);
        fail();
      }
 catch (      Exception ignored) {
      }
      transactionCompletedLatch.countDown();
    }
  }
;
  new Thread(runnable).start();
  assertOpenEventually(thresholdReached);
  terminateInstance(h2);
  assertOpenEventually(transactionCompletedLatch);
  for (int i=0; i < size; i++) {
    assertNull(map.get(i));
  }
}
