{
  Class<?> type=value.getClass();
  if (type.equals(Boolean.class)) {
    clientMessage.set(IOUtil.PRIMITIVE_TYPE_BOOLEAN);
    clientMessage.set((Boolean)value);
  }
 else   if (type.equals(Byte.class)) {
    clientMessage.set(IOUtil.PRIMITIVE_TYPE_BYTE);
    clientMessage.set((Byte)value);
  }
 else   if (type.equals(Short.class)) {
    clientMessage.set(IOUtil.PRIMITIVE_TYPE_SHORT);
    clientMessage.set((Short)value);
  }
 else   if (type.equals(Integer.class)) {
    clientMessage.set(IOUtil.PRIMITIVE_TYPE_INTEGER);
    clientMessage.set((Integer)value);
  }
 else   if (type.equals(Long.class)) {
    clientMessage.set(IOUtil.PRIMITIVE_TYPE_LONG);
    clientMessage.set((Long)value);
  }
 else   if (type.equals(Float.class)) {
    clientMessage.set(IOUtil.PRIMITIVE_TYPE_FLOAT);
    clientMessage.set((Float)value);
  }
 else   if (type.equals(Double.class)) {
    clientMessage.set(IOUtil.PRIMITIVE_TYPE_DOUBLE);
    clientMessage.set((Double)value);
  }
 else   if (type.equals(String.class)) {
    clientMessage.set(IOUtil.PRIMITIVE_TYPE_UTF);
    clientMessage.set((String)value);
  }
 else {
    throw new IllegalStateException("Illegal attribute type id found");
  }
}
