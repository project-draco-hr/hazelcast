{
  List<String> tokens=buildTokens(alignINClause(in));
  List<String> output=new ArrayList<String>();
  List<String> stack=new ArrayList<String>();
  for (  String token : tokens) {
    if (isOperand(token)) {
      if (token.equals(")")) {
        while (openParanthesesFound(stack)) {
          output.add(stack.remove(stack.size() - 1));
        }
        if (stack.size() > 0) {
          stack.remove(stack.size() - 1);
        }
      }
 else {
        while (openParanthesesFound(stack) && !hasHigherPrecedence(token,stack.get(stack.size() - 1))) {
          output.add(stack.remove(stack.size() - 1));
        }
        stack.add(token);
      }
    }
 else {
      output.add(token);
    }
  }
  while (stack.size() > 0) {
    output.add(stack.remove(stack.size() - 1));
  }
  return output;
}
