{
  InternalPartitionService service=getService(InternalPartitionService.SERVICE_NAME);
  service.firstArrangement();
  InternalPartition[] partitions=service.getPartitions();
  int[] indexes=new int[partitions.length];
  Map<Address,Set<Integer>> partitionsMap=new HashMap<Address,Set<Integer>>();
  for (  InternalPartition partition : partitions) {
    Address owner=partition.getOwnerOrNull();
    if (owner == null) {
      return ClientGetPartitionsCodec.encodeResponse(new Address[0],new int[0]);
    }
    Set<Integer> ownedPartitions=partitionsMap.get(owner);
    if (ownedPartitions == null) {
      ownedPartitions=new HashSet<Integer>();
      partitionsMap.put(owner,ownedPartitions);
    }
    ownedPartitions.add(partition.getPartitionId());
  }
  Address[] addresses=new Address[partitionsMap.size()];
  int k=0;
  for (  Address owner : partitionsMap.keySet()) {
    addresses[k++]=owner;
  }
  for (k=0; k < addresses.length; k++) {
    Set<Integer> ownedPartitions=partitionsMap.get(addresses[k]);
    for (    int partitionId : ownedPartitions) {
      indexes[partitionId]=k;
    }
  }
  return ClientGetPartitionsCodec.encodeResponse(addresses,indexes);
}
