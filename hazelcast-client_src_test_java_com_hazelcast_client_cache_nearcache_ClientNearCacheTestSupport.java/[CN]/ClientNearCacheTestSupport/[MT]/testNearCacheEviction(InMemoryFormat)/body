{
  int size=100;
  int expectedEvictions=1;
  NearCacheConfig nearCacheConfig=createNearCacheConfig(inMemoryFormat).setEvictionConfig(new EvictionConfig(size,ENTRY_COUNT,EvictionPolicy.LRU));
  NearCacheTestContext context=createNearCacheTest(DEFAULT_CACHE_NAME,nearCacheConfig);
  for (int i=0; i < size + 1; i++) {
    context.cache.put(i,"value-" + i);
  }
  for (int i=0; i < size; i++) {
    context.cache.get(i);
  }
  NearCacheStats statsBeforeEviction=getNearCacheStats(context.cache);
  context.cache.get(size);
  waitForNearCacheEvictions(context.cache,expectedEvictions);
  int expectedOwnedEntryCount=size + 1 - expectedEvictions;
  NearCacheStats stats=getNearCacheStats(context.cache);
  assertEquals("got the wrong ownedEntryCount",expectedOwnedEntryCount,stats.getOwnedEntryCount());
  assertEquals("got the wrong eviction count",expectedEvictions,stats.getEvictions());
  assertEquals("got the wrong expiration count",0,stats.getExpirations());
  assertEquals("we expect the same hits",statsBeforeEviction.getHits(),stats.getHits());
  assertEquals("we expect the same misses",statsBeforeEviction.getMisses(),stats.getMisses());
}
