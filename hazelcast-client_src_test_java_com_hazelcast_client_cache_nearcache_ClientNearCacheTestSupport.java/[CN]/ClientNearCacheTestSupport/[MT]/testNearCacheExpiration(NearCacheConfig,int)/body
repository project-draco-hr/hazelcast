{
  final int size=147;
  final NearCacheTestContext context=createNearCacheTest(DEFAULT_CACHE_NAME,nearCacheConfig);
  for (int i=0; i < size; i++) {
    context.cache.put(i,"value-" + i);
    context.cache.get(i);
  }
  final NearCacheStats statsBeforeExpiration=getNearCacheStats(context.cache);
  assertTrue(format("we expected to have all cache entries in the Near Cache or already expired (%s)",statsBeforeExpiration),statsBeforeExpiration.getOwnedEntryCount() + statsBeforeExpiration.getExpirations() >= 0);
  sleepSeconds(expireSeconds + 1);
  assertTrueEventually(new AssertTask(){
    public void run(){
      context.cache.get(0);
      NearCacheStats stats=getNearCacheStats(context.cache);
      assertEquals("we expect the same hits",statsBeforeExpiration.getHits(),stats.getHits());
      assertEquals("we expect the same misses",statsBeforeExpiration.getMisses(),stats.getMisses());
      assertEquals("we expect all entries beside the 'trigger entry' to be deleted from the Near Cache",1,stats.getOwnedEntryCount());
      assertEquals("we did not expect any entries to be evicted from the Near Cache",0,stats.getEvictions());
      assertTrue(format("we expect at least %d entries to be expired from the Near Cache",size),stats.getExpirations() >= size);
    }
  }
);
}
