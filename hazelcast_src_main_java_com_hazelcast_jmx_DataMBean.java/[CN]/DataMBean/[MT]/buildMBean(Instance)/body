{
  if (instance.getInstanceType().isTopic()) {
    return new TopicMBean((ITopic)instance,managementService);
  }
  if (instance.getInstanceType().isQueue()) {
    return new QueueMBean((IQueue)instance,managementService);
  }
  if (instance.getInstanceType().isList()) {
    return new ListMBean((IList)instance,managementService);
  }
  if (instance.getInstanceType().isSet()) {
    return new SetMBean((ISet)instance,managementService);
  }
  if (instance.getInstanceType().isMultiMap()) {
    return new MultiMapMBean((MultiMap)instance,managementService);
  }
  if (instance.getInstanceType().isMap()) {
    return new MapMBean((IMap)instance,managementService);
  }
  if (instance.getInstanceType().isLock()) {
    return new LockMBean((ILock)instance,managementService);
  }
  if (instance.getInstanceType().isAtomicNumber()) {
    return new AtomicNumberMBean((AtomicNumber)instance,managementService);
  }
  if (instance.getInstanceType().isCountDownLatch()) {
    return new CountDownLatchMBean((ICountDownLatch)instance,managementService);
  }
  if (instance.getInstanceType().isSemaphore()) {
    return new SemaphoreMBean((ISemaphore)instance,managementService);
  }
  return null;
}
