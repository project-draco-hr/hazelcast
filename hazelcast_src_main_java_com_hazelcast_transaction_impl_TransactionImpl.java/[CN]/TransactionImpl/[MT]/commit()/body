{
  try {
    if (transactionType == TWO_PHASE) {
      if (transactionLog.size() > 1) {
        if (state != PREPARED) {
          throw new IllegalStateException("Transaction is not prepared");
        }
      }
 else {
        if (state != PREPARED && state != ACTIVE) {
          throw new IllegalStateException("Transaction is not prepared or active");
        }
      }
    }
 else     if (transactionType == ONE_PHASE && state != ACTIVE) {
      throw new IllegalStateException("Transaction is not active");
    }
    checkThread();
    checkTimeout();
    try {
      state=COMMITTING;
      List<Future> futures=transactionLog.commit(nodeEngine);
      waitWithDeadline(futures,Long.MAX_VALUE,MILLISECONDS,RETHROW_TRANSACTION_EXCEPTION);
      state=COMMITTED;
      transactionManagerService.commitCount.inc();
    }
 catch (    Throwable e) {
      state=COMMIT_FAILED;
      throw rethrow(e,TransactionException.class);
    }
 finally {
      purgeBackupLogs();
    }
  }
  finally {
    setThreadFlag(null);
  }
}
