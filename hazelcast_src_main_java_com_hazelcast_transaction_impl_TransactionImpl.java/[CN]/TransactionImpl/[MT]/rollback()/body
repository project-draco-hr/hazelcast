{
  try {
    if (state == NO_TXN || state == ROLLED_BACK) {
      throw new IllegalStateException("Transaction is not active");
    }
    checkThread();
    state=ROLLING_BACK;
    try {
      rollbackTxBackup();
      List<Future> futures=transactionLog.rollback(nodeEngine);
      waitWithDeadline(futures,ROLLBACK_TIMEOUT_MINUTES,MINUTES,rollbackExceptionHandler);
      purgeTxBackups();
    }
 catch (    Throwable e) {
      throw ExceptionUtil.rethrow(e);
    }
 finally {
      state=ROLLED_BACK;
    }
  }
  finally {
    setThreadFlag(null);
  }
}
