{
  if (evictionStagingArea.isEmpty() || !inEvictableTimeWindow(now)) {
    return;
  }
  final long nextItemsStoreTimeInWriteBehindQueue=getNextItemsStoreTimeInWriteBehindQueue();
  final int size=evictionStagingArea.size();
  final int evictionPercentage=20;
  int maxAllowedIterationCount=getMaxIterationCount(size,evictionPercentage);
  initStagingAreaIterator();
  while (evictionStagingAreaIterator.hasNext()) {
    if (maxAllowedIterationCount <= 0) {
      break;
    }
    --maxAllowedIterationCount;
    final DelayedEntry entry=evictionStagingAreaIterator.next();
    if (entry.getStoreTime() < nextItemsStoreTimeInWriteBehindQueue) {
      evictionStagingAreaIterator.remove();
    }
    initStagingAreaIterator();
    if (!evictionStagingAreaIterator.hasNext()) {
      break;
    }
    lastCleanupTime=now;
  }
}
