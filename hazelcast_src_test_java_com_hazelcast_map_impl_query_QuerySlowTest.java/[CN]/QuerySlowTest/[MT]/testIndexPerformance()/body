{
  Config config=new Config();
  MapConfig mapConfig=config.getMapConfig("employees2");
  mapConfig.addMapIndexConfig(new MapIndexConfig("name",false)).addMapIndexConfig(new MapIndexConfig("age",true)).addMapIndexConfig(new MapIndexConfig("active",false));
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(4);
  HazelcastInstance instance=nodeFactory.newHazelcastInstance(config);
  IMap<String,SampleObjects.Employee> map=instance.getMap("employees");
  fillMap(map);
  EntryObject entryObject=new PredicateBuilder().getEntryObject();
  Predicate predicate=entryObject.is("active").and(entryObject.get("age").equal(23));
  long tookWithout=runQuery(map,predicate);
  map.clear();
  map=instance.getMap("employees2");
  fillMap(map);
  entryObject=new PredicateBuilder().getEntryObject();
  predicate=entryObject.is("active").and(entryObject.get("age").equal(23));
  long start=Clock.currentTimeMillis();
  Set<Map.Entry<String,SampleObjects.Employee>> entries=map.entrySet(predicate);
  long tookWithIndex=(Clock.currentTimeMillis() - start);
  assertEntriesMatch(entries);
  assertTrue("tookWithIndex: " + tookWithIndex + ", tookWithoutIndex: "+ tookWithout,tookWithIndex < (tookWithout / 2));
}
