{
  Config config=new Config();
  config.setGroupConfig(new GroupConfig("test","test"));
  config.getNetworkConfig().setPort(6701);
  HazelcastInstance hazelcastInstance=Hazelcast.newHazelcastInstance(config);
  IMap<Integer,GenericEvent> map=hazelcastInstance.getMap("test");
  map.addIndex("userId",false);
  Hazelcast.newHazelcastInstance(config);
  ClientConfig clientConfig=new ClientConfig();
  clientConfig.getNetworkConfig().addAddress("localhost:6701","localhost:6702");
  clientConfig.setGroupConfig(new GroupConfig("test","test"));
  clientConfig.getNetworkConfig().setConnectionAttemptLimit(100);
  clientConfig.getNetworkConfig().setSmartRouting(false);
  HazelcastInstance client=HazelcastClient.newHazelcastClient(clientConfig);
  IMap<Integer,GenericEvent> mapClient=client.getMap("test");
  mapClient.addEntryListener(new EntryAdapter<Integer,GenericEvent>(){
    public void entryAdded(    EntryEvent<Integer,GenericEvent> event){
      adds++;
    }
    public void entryEvicted(    EntryEvent<Integer,GenericEvent> event){
      if (event.getValue() == null)       evictionsNull++;
    }
  }
,true);
  HazelcastInstance client2=HazelcastClient.newHazelcastClient(clientConfig);
  IMap<Integer,GenericEvent> mapClient2=client2.getMap("test");
  map.put(1,new GenericEvent(1),5,TimeUnit.SECONDS);
  Thread.sleep(20);
  mapClient.remove(1);
  hazelcastInstance.getLifecycleService().terminate();
  Thread.sleep(15000);
  mapClient2.put(2,new GenericEvent(2),1,TimeUnit.SECONDS);
  Thread.sleep(20);
  mapClient2.remove(2);
  mapClient2.put(3,new GenericEvent(3),1,TimeUnit.SECONDS);
  Thread.sleep(15000);
  hazelcastInstance=Hazelcast.newHazelcastInstance(config);
  map=hazelcastInstance.getMap("test");
  map.put(4,new GenericEvent(4),1,TimeUnit.SECONDS);
  map.put(5,new GenericEvent(5),5,TimeUnit.SECONDS);
  map.put(6,new GenericEvent(6),1,TimeUnit.SECONDS);
  map.put(7,new GenericEvent(7),1,TimeUnit.SECONDS);
  Thread.sleep(10000);
  if (evictionsNull != 0) {
    System.out.println("ERROR: got " + evictionsNull + " evictions with null values");
  }
 else {
    System.out.println("OK");
  }
  mapClient.put(8,new GenericEvent(8),1,TimeUnit.SECONDS);
  Thread.sleep(5000);
  if (adds != 8) {
    System.out.println("ERROR: got " + adds + " instead of 8");
  }
 else {
    System.out.println("OK");
  }
  System.exit(0);
}
