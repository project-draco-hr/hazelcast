{
  if (!initialized.get()) {
    lock.lock();
    return initialConnection;
  }
  if (member == null) {
    member=router.next();
    if (member == null) {
      throw new RuntimeException("Router '" + router + "' could not find a member to route to");
    }
  }
  ObjectPool<Connection> pool=mPool.get(member.getInetSocketAddress());
  if (pool == null) {
synchronized (mPool) {
      pool=mPool.get(member.getInetSocketAddress());
      if (pool == null)       pool=createPoolForTheMember((MemberImpl)member);
    }
  }
  Connection connection=pool.take();
  if (connection == null) {
    Thread.sleep(1000);
    return takeConnection(null);
  }
  if (!heartbeat.checkHeartBeat(connection)) {
    try {
      connection.close();
    }
 catch (    IOException e) {
    }
    return takeConnection(null);
  }
  return connection;
}
