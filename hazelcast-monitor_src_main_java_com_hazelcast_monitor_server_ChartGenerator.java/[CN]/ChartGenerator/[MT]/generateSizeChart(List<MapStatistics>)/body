{
  TimeSeries ts=new TimeSeries("size",Second.class);
  TimeSeries tm=new TimeSeries("memory",Second.class);
  for (int i=0; i < list.size(); i++) {
    MapStatistics mapStatistics=list.get(i);
    double size=mapStatistics.getSize();
    double memory=0;
    for (    MapStatistics.LocalMapStatistics localMapStatistics : mapStatistics.getListOfLocalStats()) {
      memory=memory + localMapStatistics.ownedEntryMemoryCost + localMapStatistics.backupEntryMemoryCost+ localMapStatistics.markedAsRemovedMemoryCost;
    }
    double mem=new Double(memory / (double)(1024 * 1024));
    ts.addOrUpdate(new Second(list.get(i).getCreatedDate()),new Double(size / (double)1000));
    tm.addOrUpdate(new Second(list.get(i).getCreatedDate()),mem);
  }
  TimeSeriesCollection timeDataset=new TimeSeriesCollection();
  timeDataset.addSeries(ts);
  NumberAxis axis=new NumberAxis("memory (MB)");
  axis.setAutoRange(true);
  axis.setAutoRangeIncludesZero(false);
  JFreeChart chart=ChartFactory.createTimeSeriesChart(null,"time","size (x1000)",timeDataset,true,true,true);
  XYPlot plot=(XYPlot)chart.getPlot();
  plot.setDataset(1,new TimeSeriesCollection(tm));
  plot.setRangeAxis(1,axis);
  plot.mapDatasetToRangeAxis(1,1);
  plot.setRenderer(1,new StandardXYItemRenderer());
  plot.setDatasetRenderingOrder(DatasetRenderingOrder.FORWARD);
  increaseRange(axis);
  NumberAxis sizeAxis=(NumberAxis)plot.getRangeAxis(0);
  axis.setLabelFont(sizeAxis.getLabelFont());
  axis.setLabelPaint(sizeAxis.getLabelPaint());
  increaseRange(sizeAxis);
  return chart;
}
