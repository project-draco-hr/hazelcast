{
  String name=req.getParameter("name");
  SessionObject sessionObject=getSessionObject(req.getSession());
  List<MapStatistics> list=null;
  for (  ChangeEventGenerator eventGenerator : sessionObject.eventGenerators) {
    if (eventGenerator.getChangeEventType().equals(ChangeEventType.MAP_STATISTICS)) {
      MapStatisticsGenerator msg=(MapStatisticsGenerator)eventGenerator;
      if (!msg.getName().equals(name)) {
        continue;
      }
      list=msg.getPastMapStatistics();
    }
  }
  if (list == null) {
    return;
  }
  TimeSeries ts=new TimeSeries("Map.size()",Second.class);
  for (int i=0; i < list.size(); i++) {
    ts.addOrUpdate(new Second(list.get(i).getCreatedDate()),list.get(i).getSize());
  }
  TimeSeriesCollection timeDataset=new TimeSeriesCollection();
  timeDataset.addSeries(ts);
  JFreeChart chart=ChartFactory.createTimeSeriesChart("Map:" + name,"Time","Size",timeDataset,false,false,false);
  try {
    OutputStream out=response.getOutputStream();
    response.setContentType("image/png");
    ChartUtilities.writeChartAsPNG(out,chart,1000,400);
  }
 catch (  IOException ignore) {
  }
}
