{
  final List<Integer> ownedPartitions=new ArrayList<Integer>();
  for (int i=0; i < partitionContainers.length; i++) {
    final PartitionInfo partitionInfo=nodeService.getPartitionInfo(i);
    if (partitionInfo != null && nodeService.getThisAddress().equals(partitionInfo.getOwner())) {
      ownedPartitions.add(i);
    }
  }
  final CountDownLatch latch=new CountDownLatch(ownedPartitions.size());
  for (  Integer partitionId : ownedPartitions) {
    Operation op=new AbstractOperation(){
      public void run(){
        try {
          getPartitionContainer(getPartitionId()).invalidateExpiredScheduledOps();
        }
  finally {
          latch.countDown();
        }
      }
    }
;
    op.setPartitionId(partitionId).setValidateTarget(false);
    nodeService.runLocally(op);
  }
  try {
    latch.await(5,TimeUnit.SECONDS);
  }
 catch (  InterruptedException ignored) {
  }
}
