{
  this.nodeService=nodeService;
  int partitionCount=nodeService.getPartitionCount();
  partitionContainers=new PartitionContainer[partitionCount];
  for (int i=0; i < partitionCount; i++) {
    partitionContainers[i]=new PartitionContainer(nodeService.getConfig(),this,partitions[i]);
  }
  nodeService.getScheduledExecutorService().scheduleAtFixedRate(new Runnable(){
    public void run(){
      List<Integer> ownedPartitions=new ArrayList<Integer>();
      for (int i=0; i < partitionContainers.length; i++) {
        if (nodeService.getThisAddress().equals(nodeService.getPartitionInfo(i).getOwner())) {
          ownedPartitions.add(i);
        }
      }
      final CountDownLatch latch=new CountDownLatch(ownedPartitions.size());
      for (      Integer partitionId : ownedPartitions) {
        Operation op=new AbstractOperation(){
          public void run(){
            try {
            }
  finally {
              latch.countDown();
            }
          }
        }
;
        op.setPartitionId(partitionId).setValidateTarget(false);
        nodeService.runLocally(op);
        try {
          latch.await(5,TimeUnit.SECONDS);
        }
 catch (        InterruptedException ignored) {
        }
      }
    }
  }
,1,1,TimeUnit.SECONDS);
}
