{
  final NodeEngine nodeEngine=lockProxy.getNodeEngine();
  final int threadId=ThreadUtil.getThreadId();
  try {
    Future f=nodeEngine.getOperationService().invokeOnPartition(SERVICE_NAME,new BeforeAwaitOperation(namespace,lockProxy.key,threadId,conditionId),partitionId);
    f.get();
  }
 catch (  Throwable t) {
    throw ExceptionUtil.rethrow(t);
  }
  try {
    Future f=nodeEngine.getOperationService().invokeOnPartition(SERVICE_NAME,new AwaitOperation(namespace,lockProxy.key,threadId,unit.toMillis(time),conditionId),partitionId);
    return Boolean.TRUE.equals(f.get());
  }
 catch (  Throwable t) {
    throw ExceptionUtil.rethrowAllowInterrupted(t);
  }
}
