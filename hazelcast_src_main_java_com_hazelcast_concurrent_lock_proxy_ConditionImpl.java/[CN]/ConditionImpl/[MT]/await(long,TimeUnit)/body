{
  final NodeEngine nodeEngine=lockProxy.getNodeEngine();
  final int threadId=ThreadUtil.getThreadId();
  final Invocation inv1=nodeEngine.getOperationService().createInvocationBuilder(SERVICE_NAME,new BeforeAwaitOperation(namespace,lockProxy.key,threadId,conditionId),partitionId).build();
  try {
    Future f=inv1.invoke();
    f.get();
  }
 catch (  Throwable t) {
    throw ExceptionUtil.rethrow(t);
  }
  final Invocation inv2=nodeEngine.getOperationService().createInvocationBuilder(SERVICE_NAME,new AwaitOperation(namespace,lockProxy.key,threadId,unit.toMillis(time),conditionId),partitionId).build();
  try {
    Future f=inv2.invoke();
    return Boolean.TRUE.equals(f.get());
  }
 catch (  Throwable t) {
    throw ExceptionUtil.rethrowAllowInterrupted(t);
  }
}
