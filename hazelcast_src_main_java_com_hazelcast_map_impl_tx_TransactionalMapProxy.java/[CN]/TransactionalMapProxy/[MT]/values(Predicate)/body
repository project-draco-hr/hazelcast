{
  checkTransactionState();
  checkNotNull(predicate,"Predicate can not be null!");
  checkNotInstanceOf(PagingPredicate.class,predicate,"Paging is not supported for Transactional queries");
  SerializationService serializationService=getNodeEngine().getSerializationService();
  QueryResultSet queryResultSet=(QueryResultSet)queryInternal(predicate,IterationType.ENTRY,false);
  List<Object> valueSet=new ArrayList<Object>();
  Set<Object> keyWontBeIncluded=new HashSet<Object>();
  MapServiceContext mapServiceContext=getService().getMapServiceContext();
  for (  Map.Entry<Data,TxnValueWrapper> entry : txMap.entrySet()) {
    boolean isRemoved=TxnValueWrapper.Type.REMOVED.equals(entry.getValue().type);
    boolean isUpdated=TxnValueWrapper.Type.UPDATED.equals(entry.getValue().type);
    Object keyObject=serializationService.toObject(entry.getKey());
    if (isRemoved) {
      keyWontBeIncluded.add(keyObject);
    }
 else {
      if (isUpdated) {
        keyWontBeIncluded.add(keyObject);
      }
      Object entryValue=entry.getValue().value;
      QueryableEntry queryEntry=new CachedQueryEntry(serializationService,entry.getKey(),entryValue);
      if (predicate.apply(queryEntry)) {
        valueSet.add(queryEntry.getValue());
      }
    }
  }
  removeFromResultSet(queryResultSet,valueSet,keyWontBeIncluded);
  return valueSet;
}
