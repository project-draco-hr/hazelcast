{
  if (hazelSession != null)   return hazelSession;
  final String requestedSessionId=getRequestedSessionId();
  HazelSession session=null;
  if (requestedSessionId != null) {
    session=context.getSession(requestedSessionId,false);
  }
  if (DEBUG) {
    log(requestedSessionId + " is requestedSessionId and  getSession : " + session);
    log("Request AppContext " + context);
  }
  if (session == null) {
    if (create) {
      session=context.createNewSession();
      hazelSession=session;
      if (requestedSessionId != null) {
        final Map mapSession=(Map)context.getClusterMap().remove(requestedSessionId);
        if (DEBUG) {
          log(session + " Reloading from map.. " + mapSession);
          log("ContextPath " + getContextPath());
          log("pathInfo " + getPathInfo());
          log("pathtranslated " + getPathTranslated());
          log("requesturi " + getRequestURI());
        }
        if (mapSession != null) {
          final Set<Map.Entry> entries=mapSession.entrySet();
          for (          final Map.Entry entry : entries) {
            session.setAttribute((String)entry.getKey(),entry.getValue());
          }
        }
        removeCookieForSession(this,requestedSessionId);
        final Cookie[] cookies=getCookies();
        if (cookies != null) {
          removeCookies:           for (int i=0; i < cookies.length; i++) {
            final Cookie cookie=cookies[i];
            final String name=cookie.getName();
            final String value=cookie.getValue();
            final String path=cookie.getPath();
            if (getContextPath().equals(path)) {
              if (name.equals("JSESSIONID") && value.equals(requestedSessionId)) {
                if (DEBUG) {
                  log("Found old sessionId cookie DELETING " + value);
                }
                cookie.setMaxAge(0);
                res.addCookie(cookie);
                break removeCookies;
              }
            }
          }
        }
      }
      addCookieForSession(this,session.getId());
    }
  }
  return session;
}
