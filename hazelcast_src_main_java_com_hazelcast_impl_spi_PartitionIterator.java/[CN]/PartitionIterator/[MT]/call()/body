{
  final NodeService nodeService=getOperationContext().getNodeService();
  final Object service=getOperationContext().getService();
  Map<Integer,Object> results=new HashMap<Integer,Object>(partitions.size());
  Map<Integer,Future> responses=new HashMap<Integer,Future>(partitions.size());
  for (  final int partitionId : partitions) {
    Future f=nodeService.runLocally(partitionId,new Callable(){
      public Object call() throws Exception {
        if (!nodeService.isOwner(partitionId)) {
          return "NOT OWNER";
        }
 else {
          Operation mpe=(Operation)toObject(callableOperation);
          mpe.getOperationContext().setPartitionId(partitionId).setService(service);
          return mpe.call();
        }
      }
    }
,false);
    responses.put(partitionId,f);
  }
  for (  Map.Entry<Integer,Future> partitionResponse : responses.entrySet()) {
    results.put(partitionResponse.getKey(),partitionResponse.getValue().get());
  }
  return new Response(results);
}
