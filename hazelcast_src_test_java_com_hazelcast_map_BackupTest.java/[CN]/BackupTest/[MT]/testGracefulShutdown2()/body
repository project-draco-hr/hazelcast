{
  Config config=new Config();
  config.getMapConfig(MAP_NAME).setBackupCount(2).setStatisticsEnabled(true);
  config.setProperty(GroupProperties.PROP_PARTITION_COUNT,"1111");
  TestHazelcastInstanceFactory f=createHazelcastInstanceFactory(6);
  final HazelcastInstance hz=f.newHazelcastInstance(config);
  final IMap<Object,Object> map=hz.getMap(MAP_NAME);
  final int size=200000;
  for (int i=0; i < size; i++) {
    map.put(i,i);
  }
  final HazelcastInstance hz2=f.newHazelcastInstance(config);
  final IMap<Object,Object> map2=hz2.getMap(MAP_NAME);
  assertEquals(size,map2.size());
  final HazelcastInstance hz3=f.newHazelcastInstance(config);
  final IMap<Object,Object> map3=hz3.getMap(MAP_NAME);
  final HazelcastInstance hz4=f.newHazelcastInstance(config);
  final IMap<Object,Object> map4=hz4.getMap(MAP_NAME);
  assertEquals(size,map3.size());
  assertEquals(size,map4.size());
  final HazelcastInstance hz5=f.newHazelcastInstance(config);
  final IMap<Object,Object> map5=hz5.getMap(MAP_NAME);
  final HazelcastInstance hz6=f.newHazelcastInstance(config);
  final IMap<Object,Object> map6=hz6.getMap(MAP_NAME);
  assertEquals(size,map5.size());
  assertEquals(size,map6.size());
  hz.shutdown();
  hz2.shutdown();
  assertEquals(size,map3.size());
  assertEquals(size,map4.size());
  assertEquals(size,map5.size());
  assertEquals(size,map6.size());
  hz3.shutdown();
  hz4.shutdown();
  assertEquals(size,map5.size());
  assertEquals(size,map6.size());
}
