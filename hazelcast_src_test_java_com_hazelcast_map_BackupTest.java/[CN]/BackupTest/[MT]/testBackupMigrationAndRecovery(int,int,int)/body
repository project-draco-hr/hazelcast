{
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(nodeCount);
  final String name=mapName;
  Config config=getConfig();
  config.setProperty(GroupProperty.PARTITION_BACKUP_SYNC_INTERVAL.getName(),"1");
  config.getMapConfig(name).setBackupCount(backupCount).setStatisticsEnabled(true);
  List<HazelcastInstance> instances=new ArrayList<HazelcastInstance>(nodeCount);
  for (int i=0; i < nodeCount; i++) {
    HazelcastInstance hz=nodeFactory.newHazelcastInstance(config);
    instances.add(hz);
    if (i == 0) {
      IMap<Integer,String> map=hz.getMap(name);
      for (int k=0; k < mapSize; k++) {
        map.put(k,"value" + k);
      }
    }
    checkMapSizes(mapSize,backupCount,instances);
  }
  Random rand=new Random();
  while (!instances.isEmpty()) {
    int ix=rand.nextInt(instances.size());
    HazelcastInstance removedInstance=instances.remove(ix);
    TestUtil.terminateInstance(removedInstance);
    checkMapSizes(mapSize,backupCount,instances);
  }
}
