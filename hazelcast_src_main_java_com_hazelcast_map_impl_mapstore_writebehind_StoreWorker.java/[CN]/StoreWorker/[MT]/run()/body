{
  long now=Clock.currentTimeMillis();
  NodeEngine nodeEngine=mapServiceContext.getNodeEngine();
  InternalPartitionService partitionService=nodeEngine.getPartitionService();
  int partitionCount=partitionService.getPartitionCount();
  List<DelayedEntry> entries=new ArrayList<DelayedEntry>(partitionCount);
  for (int partitionId=0; partitionId < partitionCount; partitionId++) {
    InternalPartition partition=partitionService.getPartition(partitionId,false);
    Address owner=partition.getOwnerOrNull();
    if (owner == null) {
      continue;
    }
    RecordStore recordStore=getRecordStoreOrNull(mapName,partitionId);
    if (recordStore == null) {
      continue;
    }
    List<DelayedEntry> entriesToStore=getEntriesToStore(now,recordStore);
    if (!partition.isLocal()) {
      if (now > lastRunTime + backupRunIntervalTime) {
        doInBackup(entriesToStore,partitionId);
      }
    }
 else {
      entries.addAll(entriesToStore);
    }
  }
  if (entries.isEmpty()) {
    return;
  }
  Map<Integer,List<DelayedEntry>> failuresPerPartition=writeBehindProcessor.process(entries);
  removeFinishedStoreOperationsFromQueues(mapName,entries);
  readdFailedStoreOperationsToQueues(mapName,failuresPerPartition);
  lastRunTime=now;
}
