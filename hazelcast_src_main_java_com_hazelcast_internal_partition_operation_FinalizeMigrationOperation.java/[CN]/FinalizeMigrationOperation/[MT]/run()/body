{
  InternalPartitionServiceImpl partitionService=getService();
  int partitionId=getPartitionId();
  NodeEngineImpl nodeEngine=(NodeEngineImpl)getNodeEngine();
  PartitionMigrationEvent event=new PartitionMigrationEvent(endpoint,partitionId,endpoint == MigrationEndpoint.SOURCE ? migrationInfo.getSourceCurrentReplicaIndex() : migrationInfo.getDestinationCurrentReplicaIndex(),endpoint == MigrationEndpoint.SOURCE ? migrationInfo.getSourceNewReplicaIndex() : migrationInfo.getDestinationNewReplicaIndex());
  Collection<MigrationAwareService> migrationAwareServices=nodeEngine.getServices(MigrationAwareService.class);
  if (nodeEngine.getThisAddress().equals(migrationInfo.getSource()) && migrationInfo.getSourceCurrentReplicaIndex() > 0) {
    for (    MigrationAwareService service : migrationAwareServices) {
      beforeMigration(event,service);
    }
  }
  for (  MigrationAwareService service : migrationAwareServices) {
    finishMigration(event,service);
  }
  PartitionReplicaManager replicaManager=partitionService.getReplicaManager();
  ILogger logger=getLogger();
  if (endpoint == MigrationEndpoint.SOURCE && success) {
    int keepReplicaIndex=migrationInfo.getSourceNewReplicaIndex();
    if (keepReplicaIndex < 0) {
      replicaManager.clearPartitionReplicaVersions(partitionId);
      if (logger.isFinestEnabled()) {
        logger.finest("Replica versions are cleared in source after migration. partitionId=" + partitionId);
      }
    }
 else     if (migrationInfo.getSourceCurrentReplicaIndex() != keepReplicaIndex && keepReplicaIndex > 1) {
      long[] versions=replicaManager.getPartitionReplicaVersions(partitionId);
      Arrays.fill(versions,0,keepReplicaIndex - 1,0);
      if (logger.isFinestEnabled()) {
        logger.finest("Replica versions are set after MOVE COPY BACK migration. partitionId=" + partitionId + " replica versions="+ Arrays.toString(versions));
      }
    }
  }
 else   if (endpoint == MigrationEndpoint.DESTINATION && !success) {
    int destinationCurrentReplicaIndex=migrationInfo.getDestinationCurrentReplicaIndex();
    if (destinationCurrentReplicaIndex == -1) {
      replicaManager.clearPartitionReplicaVersions(partitionId);
      if (logger.isFinestEnabled()) {
        logger.finest("Replica versions are cleared in destination after failed migration. partitionId=" + partitionId);
      }
    }
 else {
      long[] versions=replicaManager.getPartitionReplicaVersions(partitionId);
      int replicaOffset=migrationInfo.getDestinationCurrentReplicaIndex() <= 1 ? 1 : migrationInfo.getDestinationCurrentReplicaIndex();
      Arrays.fill(versions,0,replicaOffset - 1,0);
      if (logger.isFinestEnabled()) {
        logger.finest("Replica versions are rolled back in destination after failed migration. partitionId=" + partitionId + " replica versions="+ Arrays.toString(versions));
      }
    }
  }
  if (success) {
    nodeEngine.onPartitionMigrate(migrationInfo);
  }
}
