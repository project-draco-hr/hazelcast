{
  InternalPartitionServiceImpl partitionService=getService();
  int partitionId=getPartitionId();
  MigrationInfo migrationInfo=partitionService.getActiveMigration(partitionId);
  if (migrationInfo == null) {
    return;
  }
  NodeEngineImpl nodeEngine=(NodeEngineImpl)getNodeEngine();
  MigrationParticipant participant=endpoint == MigrationEndpoint.SOURCE ? MigrationParticipant.SOURCE : MigrationParticipant.DESTINATION;
  InternalMigrationListener migrationListener=partitionService.getInternalMigrationListener();
  if (success) {
    migrationListener.onMigrationCommit(participant,migrationInfo);
  }
 else {
    migrationListener.onMigrationRollback(participant,migrationInfo);
  }
  PartitionMigrationEvent event=new PartitionMigrationEvent(endpoint,partitionId);
  for (  MigrationAwareService service : nodeEngine.getServices(MigrationAwareService.class)) {
    finishMigration(event,service);
  }
  if (endpoint == MigrationEndpoint.SOURCE && success) {
    partitionService.clearPartitionReplicaVersions(partitionId);
  }
 else   if (endpoint == MigrationEndpoint.DESTINATION && !success) {
    partitionService.clearPartitionReplicaVersions(partitionId);
  }
  partitionService.removeActiveMigration(partitionId);
  if (success) {
    nodeEngine.onPartitionMigrate(migrationInfo);
  }
}
