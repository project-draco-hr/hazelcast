{
  this.node=node;
  this.serializationService=node.getSerializationService();
  this.nodeEngine=node.nodeEngine;
  this.endpointManager=new ClientEndpointManager(this,nodeEngine);
  int coreSize=Runtime.getRuntime().availableProcessors();
  this.executor=nodeEngine.getExecutionService().register(ExecutionService.CLIENT_EXECUTOR,coreSize * THREADS_PER_CORE,coreSize * EXECUTOR_QUEUE_CAPACITY_PER_CORE,ExecutorType.CONCRETE);
  this.logger=node.getLogger(ClientEngine.class);
  long heartbeatIntervalSeconds=node.groupProperties.CLIENT_HEARTBEAT_INTERVAL_SECONDS.getInteger();
  long heartbeatNoHeartBeatsSeconds=node.groupProperties.CLIENT_MAX_NO_HEARTBEAT_SECONDS.getInteger();
  heartbeatIntervalSeconds=heartbeatIntervalSeconds <= 0 ? DEFAULT_CLIENT_HEART_BEAT_INTERVAL_SECONDS : heartbeatIntervalSeconds;
  ClientHeartbeatMonitor heartBeatMonitor=new ClientHeartbeatMonitor(heartbeatNoHeartBeatsSeconds,endpointManager,this);
  final ExecutionService executionService=nodeEngine.getExecutionService();
  executionService.scheduleWithFixedDelay(heartBeatMonitor,heartbeatIntervalSeconds,heartbeatIntervalSeconds,TimeUnit.SECONDS);
}
