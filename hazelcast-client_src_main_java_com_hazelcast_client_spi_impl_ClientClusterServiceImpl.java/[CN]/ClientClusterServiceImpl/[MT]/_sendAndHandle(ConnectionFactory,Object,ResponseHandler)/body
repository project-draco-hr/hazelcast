{
  ResponseStream stream=null;
  while (stream == null) {
    Connection conn=null;
    try {
      conn=connectionFactory.create();
      final SerializationService serializationService=getSerializationService();
      final Data request=serializationService.toData(obj);
      conn.write(request);
      stream=new ResponseStreamImpl(serializationService,conn);
    }
 catch (    Exception e) {
      if (e instanceof IOException) {
        if (logger.isFinestEnabled()) {
          logger.finest("Error on connection... conn: " + conn + ", error: "+ e);
        }
      }
      if (conn != null) {
        IOUtil.closeResource(conn);
      }
      if (ErrorHandler.isRetryable(e)) {
        if (redoOperation || obj instanceof RetryableRequest) {
          if (logger.isFinestEnabled()) {
            logger.finest("Retrying " + obj + ", last-conn: "+ conn+ ", last-error: "+ e);
          }
          beforeRetry();
          continue;
        }
      }
      throw ExceptionUtil.rethrow(e,IOException.class);
    }
  }
  try {
    handler.handle(stream);
  }
 catch (  Exception e) {
    throw ExceptionUtil.rethrow(e,IOException.class);
  }
 finally {
    stream.end();
  }
}
