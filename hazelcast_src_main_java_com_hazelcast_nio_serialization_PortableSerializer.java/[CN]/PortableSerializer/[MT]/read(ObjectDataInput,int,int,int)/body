{
  if (!(in instanceof BufferObjectDataInput)) {
    throw new IllegalArgumentException("ObjectDataInput must be instance of BufferObjectDataInput!");
  }
  final PortableFactory portableFactory=factories.get(factoryId);
  if (portableFactory == null) {
    throw new HazelcastSerializationException("Could not find PortableFactory for factory-id: " + factoryId);
  }
  final Portable portable=portableFactory.create(classId);
  if (portable == null) {
    throw new HazelcastSerializationException("Could not create Portable for class-id: " + classId);
  }
  final DefaultPortableReader reader;
  final ClassDefinition cd;
  final BufferObjectDataInput bufferedIn=(BufferObjectDataInput)in;
  int effectiveVersion=version;
  if (version < 0) {
    effectiveVersion=context.getVersion();
  }
  int currentVersion=context.getClassVersion(factoryId,classId);
  if (currentVersion < 0) {
    currentVersion=PortableVersionHelper.getVersion(portable,context.getVersion());
    if (currentVersion > 0) {
      context.setClassVersion(factoryId,classId,currentVersion);
    }
  }
  cd=context.lookup(factoryId,classId,effectiveVersion);
  if (cd == null) {
    throw new HazelcastSerializationException("Could not find class-definition for " + "factory-id: " + factoryId + ", class-id: "+ classId+ ", version: "+ effectiveVersion);
  }
  if (currentVersion == effectiveVersion) {
    reader=new DefaultPortableReader(this,bufferedIn,cd);
  }
 else {
    reader=new MorphingPortableReader(this,bufferedIn,cd);
  }
  portable.readPortable(reader);
  reader.end();
  return portable;
}
