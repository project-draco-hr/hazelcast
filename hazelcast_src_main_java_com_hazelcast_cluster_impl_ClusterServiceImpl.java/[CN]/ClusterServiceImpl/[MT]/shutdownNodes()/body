{
  final Operation op=new ShutdownNodeOperation();
  logger.info("Sending shutting down operations to all members...");
  Collection<Member> members=getMembers(NON_LOCAL_MEMBER_SELECTOR);
  final long timeout=node.groupProperties.getNanos(GroupProperty.CLUSTER_SHUTDOWN_TIMEOUT_SECONDS);
  final long startTime=System.nanoTime();
  while ((System.nanoTime() - startTime) < timeout && !members.isEmpty()) {
    for (    Member member : members) {
      nodeEngine.getOperationService().send(op,member.getAddress());
    }
    try {
      Thread.sleep(CLUSTER_SHUTDOWN_SLEEP_DURATION_IN_MILLIS);
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
      logger.warning("Shutdown sleep interrupted. ",e);
      break;
    }
    members=getMembers(NON_LOCAL_MEMBER_SELECTOR);
  }
  logger.info("Number of other nodes remaining: " + getSize(NON_LOCAL_MEMBER_SELECTOR) + ". Shutting down itself.");
  final HazelcastInstanceImpl hazelcastInstance=node.hazelcastInstance;
  hazelcastInstance.getLifecycleService().shutdown();
}
