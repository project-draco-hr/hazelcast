{
  logger.info("Removing " + deadMember);
  lock.lock();
  try {
    Map<Address,MemberImpl> members=membersMapRef.get();
    if (members.containsKey(deadMember.getAddress())) {
      Map<Address,MemberImpl> newMembers=new LinkedHashMap<Address,MemberImpl>(members);
      newMembers.remove(deadMember.getAddress());
      masterConfirmationTimes.remove(deadMember);
      setMembersRef(newMembers);
      if (node.isMaster()) {
        if (logger.isFinestEnabled()) {
          logger.finest(deadMember + " is dead, sending remove to all other members...");
        }
        invokeMemberRemoveOperation(deadMember.getAddress());
      }
      if (clusterStateManager.getState() == ClusterState.FROZEN) {
        membersRemovedWhileFrozen.put(deadMember.getAddress(),deadMember);
      }
 else {
        onMemberRemove(deadMember,newMembers);
      }
      sendMembershipEventNotifications(deadMember,unmodifiableSet(new LinkedHashSet<Member>(newMembers.values())),false);
    }
  }
  finally {
    lock.unlock();
  }
}
