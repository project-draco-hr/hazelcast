{
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(4);
  final Config config=new Config();
  HazelcastInstance h1=nodeFactory.newHazelcastInstance(config);
  HazelcastInstance h2=nodeFactory.newHazelcastInstance(config);
  HazelcastInstance h3=nodeFactory.newHazelcastInstance(config);
  IMap<Integer,Integer> m1=h1.getMap(MAP_NAME);
  for (int i=0; i < 100; i++) {
    m1.put(i,i);
  }
  JobTracker tracker=h1.getJobTracker("default");
  Job<Integer,Integer> job=tracker.newJob(KeyValueSource.fromMap(m1));
  CompletableFuture<Integer> future=job.mapper(new GroupingTestMapper()).combiner(new TestCombinerFactory()).reducer(new TestReducerFactory()).submit(new TestCollator());
  int expectedResult=0;
  for (int i=0; i < 100; i++) {
    expectedResult+=i;
  }
  int result=future.get();
  for (int i=0; i < 4; i++) {
    assertEquals(expectedResult,result);
  }
}
