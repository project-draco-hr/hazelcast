{
  masterTime=in.readLong();
  version=in.readInt();
  int size=in.readInt();
  final Map<Address,Integer> addressIndexes=new HashMap<Address,Integer>(size);
  int memberIndex=0;
  while (size-- > 0) {
    MemberInfo memberInfo=new MemberInfo();
    memberInfo.readData(in);
    addMemberInfo(memberInfo,addressIndexes,memberIndex);
    memberIndex++;
  }
  int partitionCount=in.readInt();
  for (int i=0; i < partitionCount; i++) {
    ShortPartitionInfo spi=new ShortPartitionInfo();
    spi.readData(in);
    partitionInfos.add(spi);
  }
  int k=in.readInt();
  completedMigrations=new ArrayList<MigrationInfo>(k);
  for (int i=0; i < k; i++) {
    MigrationInfo cm=new MigrationInfo();
    cm.readData(in);
    completedMigrations.add(cm);
  }
}
