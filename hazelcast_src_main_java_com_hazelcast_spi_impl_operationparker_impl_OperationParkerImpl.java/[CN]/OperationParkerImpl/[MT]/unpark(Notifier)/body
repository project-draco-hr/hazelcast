{
  WaitNotifyKey key=notifier.getNotifiedKey();
  Queue<ParkedOperation> parkQueue=parkQueueMap.get(key);
  if (parkQueue == null) {
    return;
  }
  ParkedOperation parkedOp=parkQueue.peek();
  while (parkedOp != null) {
    Operation op=parkedOp.getOperation();
    if (notifier == op) {
      throw new IllegalStateException("Found cyclic wait-notify! -> " + notifier);
    }
    if (parkedOp.isValid()) {
      if (parkedOp.isExpired()) {
        parkedOp.onExpire();
      }
 else {
        if (parkedOp.shouldWait()) {
          return;
        }
        nodeEngine.getOperationService().run(op);
      }
      parkedOp.setValid(false);
    }
    parkQueue.poll();
    parkedOp=parkQueue.peek();
    if (parkedOp == null) {
      parkQueueMap.remove(key);
    }
  }
}
