{
  final HazelcastInstance h1=Hazelcast.newHazelcastInstance(new Config());
  final IMap map1=h1.getMap("default");
  final HazelcastInstance h2=Hazelcast.newHazelcastInstance(new Config());
  final IMap map2=h2.getMap("default");
  final HazelcastInstance h3=Hazelcast.newHazelcastInstance(new Config());
  final IMap map3=h3.getMap("default");
  map1.put(1,1);
  migrateKey(1,h1,h2,0);
  migrateKey(1,h1,h3,1);
  assertTrue(h1.getPartitionService().getPartition(1).getOwner().equals(h2.getCluster().getLocalMember()));
  assertTrue(h3.getPartitionService().getPartition(1).getOwner().equals(h2.getCluster().getLocalMember()));
  assertTrue(h2.getPartitionService().getPartition(1).getOwner().localMember());
  assertTrue(map1.tryLock(1));
  final CountDownLatch latchLock=new CountDownLatch(1);
  new Thread(new Runnable(){
    public void run(){
      try {
        map3.lock(1);
        assertTrue(latchLock.await(10,TimeUnit.SECONDS));
      }
 catch (      Throwable e) {
        fail();
      }
    }
  }
).start();
  Thread.sleep(2000);
  h2.getLifecycleService().shutdown();
  Thread.sleep(2000);
  assertEquals(1,map1.put(1,2));
  map1.unlock(1);
  latchLock.countDown();
  assertFalse(map1.tryLock(1));
}
