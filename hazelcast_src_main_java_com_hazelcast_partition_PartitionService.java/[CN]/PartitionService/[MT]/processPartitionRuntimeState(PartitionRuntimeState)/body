{
  lock.lock();
  try {
    final Address sender=partitionState.getEndpoint();
    if (node.isMaster()) {
      logger.log(Level.WARNING,"This is the master node and received a PartitionRuntimeState from " + sender + ". Ignoring incoming state! ");
      return;
    }
 else {
      final Address master=node.getMasterAddress();
      if (sender == null || !sender.equals(master)) {
        if (node.clusterService.getMember(sender) == null) {
          logger.log(Level.SEVERE,"Received a ClusterRuntimeState from an unknown member!" + " => Sender: " + sender + ", Master: "+ master+ "! ");
          return;
        }
 else {
          logger.log(Level.WARNING,"Received a ClusterRuntimeState, but its sender doesn't seem master!" + " => Sender: " + sender + ", Master: "+ master+ "! "+ "(Ignore if master node has changed recently.)");
        }
      }
    }
    PartitionInfo[] newPartitions=partitionState.getPartitions();
    for (    PartitionInfo newPartition : newPartitions) {
      PartitionInfo currentPartition=partitions[newPartition.getPartitionId()];
      for (int index=0; index < PartitionInfo.MAX_REPLICA_COUNT; index++) {
        Address address=newPartition.getReplicaAddress(index);
        if (address != null && getMember(address) == null) {
          logger.log(Level.WARNING,"Unknown " + address + " is found in received partition table from master "+ sender+ ". Probably it is dead. Partition: "+ newPartition);
        }
      }
      currentPartition.setPartitionInfo(newPartition);
    }
    Collection<MigrationInfo> completedMigrations=partitionState.getCompletedMigrations();
    for (    MigrationInfo completedMigration : completedMigrations) {
      finalizeActiveMigration(completedMigration);
    }
    version.set(partitionState.getVersion());
    initialized=true;
  }
  finally {
    lock.unlock();
  }
}
