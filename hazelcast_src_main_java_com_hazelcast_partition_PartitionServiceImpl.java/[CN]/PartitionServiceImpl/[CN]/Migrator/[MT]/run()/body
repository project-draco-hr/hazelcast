{
  try {
    if (!node.isActive() || !node.isMaster()) {
      return;
    }
    fireMigrationEvent(MigrationStatus.STARTED);
    if (migrationInfo.getToAddress() == null) {
      logger.log(Level.FINEST,"Fixing partition, " + migrationRequestOp.getReplicaIndex() + ". replica of partition["+ migrationRequestOp.getPartitionId()+ "] should be removed.");
      removeReplicaOwner();
    }
 else {
      MemberImpl fromMember=null;
      Boolean result=Boolean.FALSE;
      if (migrationRequestOp.isMigration()) {
        fromMember=getMember(migrationInfo.getFromAddress());
      }
 else {
        final int partitionId=migrationRequestOp.getPartitionId();
        fromMember=getMember(partitions[partitionId].getOwner());
      }
      logger.log(Level.FINEST,"Started Migration : " + migrationRequestOp);
      systemLogService.logPartition("Started Migration : " + migrationRequestOp);
      if (fromMember != null) {
        migrationInfo.setFromAddress(fromMember.getAddress());
        Invocation inv=nodeEngine.getOperationService().createInvocationBuilder(SERVICE_NAME,migrationRequestOp,migrationInfo.getFromAddress()).setTryPauseMillis(1000).setReplicaIndex(migrationRequestOp.getReplicaIndex()).build();
        Future future=inv.invoke();
        try {
          result=(Boolean)nodeEngine.toObject(future.get(partitionMigrationTimeout,TimeUnit.SECONDS));
        }
 catch (        Throwable e) {
          final Level level=node.isActive() && migrationInfo.isValid() ? Level.WARNING : Level.FINEST;
          logger.log(level,"Failed migrating from " + fromMember,e);
        }
      }
 else {
        result=Boolean.TRUE;
      }
      logger.log(Level.FINEST,"Finished Migration : " + migrationRequestOp);
      systemLogService.logPartition("Finished Migration : " + migrationRequestOp);
      if (Boolean.TRUE.equals(result)) {
        processMigrationResult();
      }
 else {
        final Level level=migrationInfo.isValid() ? Level.WARNING : Level.FINEST;
        logger.log(level,"Migration task has failed => " + migrationRequestOp);
        migrationTaskFailed();
      }
    }
  }
 catch (  Throwable t) {
    final Level level=migrationInfo.isValid() ? Level.WARNING : Level.FINEST;
    logger.log(level,"Error [" + t.getClass() + ": "+ t.getMessage()+ "] "+ "while executing "+ migrationRequestOp);
    logger.log(Level.FINEST,t.getMessage(),t);
    migrationTaskFailed();
  }
}
