{
  lock.lock();
  try {
    final int partitionId=migrationInfo.getPartitionId();
    partitions[partitionId].isMigrating=true;
    final MigrationInfo currentMigrationInfo=activeMigrations.putIfAbsent(partitionId,migrationInfo);
    if (currentMigrationInfo != null) {
      boolean oldMaster=false;
      MigrationInfo oldMigration;
      MigrationInfo newMigration;
      final MemberImpl masterMember=getMasterMember();
      final String master=masterMember.getUuid();
      if (!master.equals(currentMigrationInfo.getMasterUuid())) {
        oldMigration=currentMigrationInfo;
        newMigration=migrationInfo;
        oldMaster=true;
      }
 else       if (!master.equals(migrationInfo.getMasterUuid())) {
        oldMigration=migrationInfo;
        newMigration=currentMigrationInfo;
        oldMaster=true;
      }
 else       if (!currentMigrationInfo.isProcessing() && migrationInfo.isProcessing()) {
        oldMigration=currentMigrationInfo;
        newMigration=migrationInfo;
      }
 else {
        final String message="Something is seriously wrong! There are two migration requests for the same partition!" + " First-> " + currentMigrationInfo + ", Second -> "+ migrationInfo;
        final IllegalStateException error=new IllegalStateException(message);
        logger.severe(message,error);
        throw error;
      }
      if (oldMaster) {
        logger.info("Finalizing migration instantiated by the old master -> " + oldMigration);
      }
 else {
        if (logger.isFinestEnabled()) {
          logger.finest("Finalizing previous migration -> " + oldMigration);
        }
      }
      finalizeActiveMigration(oldMigration);
      activeMigrations.put(partitionId,newMigration);
    }
  }
  finally {
    lock.unlock();
  }
}
