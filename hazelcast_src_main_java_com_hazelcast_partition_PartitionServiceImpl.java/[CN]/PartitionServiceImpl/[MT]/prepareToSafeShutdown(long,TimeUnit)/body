{
  long timeoutInMillis=unit.toMillis(timeout);
  int sleep=500;
  while (timeoutInMillis > 0) {
    while (timeoutInMillis > 0 && shouldWaitMigrationOrBackups(Level.INFO)) {
      try {
        Thread.sleep(sleep);
      }
 catch (      InterruptedException ignored) {
      }
      timeoutInMillis-=sleep;
    }
    if (timeoutInMillis < 0) {
      return false;
    }
    if (!node.isMaster()) {
      while (timeoutInMillis > 0 && hasOnGoingMigrationMaster()) {
        logger.info("Waiting for the master node to complete remaining migrations!");
        try {
          Thread.sleep(sleep);
        }
 catch (        InterruptedException ignored) {
        }
        timeoutInMillis-=sleep;
      }
      if (timeoutInMillis < 0) {
        return false;
      }
    }
    long start=Clock.currentTimeMillis();
    boolean ok=checkReplicaSyncState();
    timeoutInMillis-=(Clock.currentTimeMillis() - start);
    if (ok) {
      logger.finest("Replica sync state before shutdown is OK");
      return true;
    }
 else {
      if (timeoutInMillis < 0) {
        return false;
      }
      logger.info("Backup replica versions inconsistent, waiting for synchronization..");
      try {
        Thread.sleep(sleep);
      }
 catch (      InterruptedException ignored) {
      }
      timeoutInMillis-=sleep;
    }
  }
  return false;
}
