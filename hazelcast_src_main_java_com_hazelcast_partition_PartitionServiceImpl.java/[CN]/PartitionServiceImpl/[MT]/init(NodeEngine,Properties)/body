{
  migrationThread.start();
  int partitionTableSendInterval=node.groupProperties.PARTITION_TABLE_SEND_INTERVAL.getInteger();
  if (partitionTableSendInterval <= 0) {
    partitionTableSendInterval=1;
  }
  nodeEngine.getExecutionService().scheduleAtFixedRate(new SendClusterStateTask(),partitionTableSendInterval,partitionTableSendInterval,TimeUnit.SECONDS);
  nodeEngine.getExecutionService().scheduleAtFixedRate(new Runnable(){
    public void run(){
      if (node.isMaster() && node.isActive() && initialized&& shouldCheckRepartitioning()) {
        logger.log(Level.FINEST,"Checking partition table for repartitioning...");
        immediateTasksQueue.add(new CheckRepartitioningTask());
      }
    }
  }
,180,180,TimeUnit.SECONDS);
}
