{
  int threadCount=properties.PARTITION_OPERATION_THREAD_COUNT.getInteger();
  if (threadCount <= 0) {
    int coreSize=Runtime.getRuntime().availableProcessors();
    threadCount=Math.max(2,coreSize);
  }
  PartitionOperationThread[] threads=new PartitionOperationThread[threadCount];
  for (int threadId=0; threadId < threads.length; threadId++) {
    String threadName=threadGroup.getThreadPoolNamePrefix("partition-operation") + threadId;
    ScheduleQueue scheduleQueue=new DefaultScheduleQueue();
    PartitionOperationThread operationThread=new PartitionOperationThread(threadName,threadId,scheduleQueue,logger,threadGroup,nodeExtension,partitionOperationRunners);
    for (int partitionId=0; partitionId < partitionOperationRunners.length; partitionId++) {
      if (partitionId % threadCount == threadId) {
        OperationRunner operationRunner=partitionOperationRunners[partitionId];
        operationRunner.setCurrentThread(operationThread);
      }
    }
    threads[threadId]=operationThread;
    operationThread.start();
  }
  return threads;
}
