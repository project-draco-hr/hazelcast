{
  this.source=source;
  this.serializationService=serializationService;
  final CacheEntryListener<? super K,? super V> cacheEntryListener=cacheEntryListenerConfiguration.getCacheEntryListenerFactory().create();
  this.cacheEntryListener=(CacheEntryListener<K,V>)cacheEntryListener;
  if (cacheEntryListener instanceof CacheEntryCreatedListener) {
    this.cacheEntryCreatedListener=(CacheEntryCreatedListener)cacheEntryListener;
  }
 else {
    this.cacheEntryCreatedListener=null;
  }
  if (cacheEntryListener instanceof CacheEntryRemovedListener) {
    this.cacheEntryRemovedListener=(CacheEntryRemovedListener)cacheEntryListener;
  }
 else {
    this.cacheEntryRemovedListener=null;
  }
  if (cacheEntryListener instanceof CacheEntryUpdatedListener) {
    this.cacheEntryUpdatedListener=(CacheEntryUpdatedListener)cacheEntryListener;
  }
 else {
    this.cacheEntryUpdatedListener=null;
  }
  if (cacheEntryListener instanceof CacheEntryExpiredListener) {
    this.cacheEntryExpiredListener=(CacheEntryExpiredListener)cacheEntryListener;
  }
 else {
    this.cacheEntryExpiredListener=null;
  }
  final Factory<CacheEntryEventFilter<? super K,? super V>> filterFactory=cacheEntryListenerConfiguration.getCacheEntryEventFilterFactory();
  if (filterFactory != null) {
    this.filter=filterFactory.create();
  }
 else {
    this.filter=null;
  }
  this.isOldValueRequired=cacheEntryListenerConfiguration.isOldValueRequired();
}
