{
  HashSet<CacheEntryEvent<? extends K,? extends V>> evt=new HashSet<CacheEntryEvent<? extends K,? extends V>>();
  for (  CacheEventData cacheEventData : cacheEventSet.getEvents()) {
    final EventType eventType=CacheEventType.convertToEventType(cacheEventData.getCacheEventType());
    final K key=toObject(cacheEventData.getDataKey());
    final V newValue=toObject(cacheEventData.getDataValue());
    final V oldValue;
    if (isOldValueRequired) {
      oldValue=toObject(cacheEventData.getDataOldValue());
    }
 else {
      oldValue=null;
    }
    final CacheEntryEventImpl<K,V> event=new CacheEntryEventImpl<K,V>(source,eventType,key,newValue,oldValue);
    if (filter == null || filter.evaluate(event)) {
      evt.add(event);
    }
  }
  return evt;
}
