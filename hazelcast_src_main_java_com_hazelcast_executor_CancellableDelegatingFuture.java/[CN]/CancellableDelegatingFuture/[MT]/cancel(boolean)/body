{
  if (isDone() || cancelled) {
    return false;
  }
  final CancellationOperation op=new CancellationOperation(uuid,mayInterruptIfRunning);
  final InvocationBuilder builder;
  if (partitionId > -1) {
    builder=nodeEngine.getOperationService().createInvocationBuilder(DistributedExecutorService.SERVICE_NAME,op,partitionId);
  }
 else {
    builder=nodeEngine.getOperationService().createInvocationBuilder(DistributedExecutorService.SERVICE_NAME,op,target);
  }
  builder.setTryCount(50).setTryPauseMillis(250);
  final Future f=builder.invoke();
  try {
    final Boolean b=(Boolean)f.get();
    if (b != null && b) {
      setError(new CancellationException());
      cancelled=true;
      return true;
    }
    return false;
  }
 catch (  Exception e) {
    throw ExceptionUtil.rethrow(e);
  }
 finally {
    setDone();
  }
}
