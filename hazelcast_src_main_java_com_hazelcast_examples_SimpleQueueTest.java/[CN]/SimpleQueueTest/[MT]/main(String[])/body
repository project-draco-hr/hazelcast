{
  int threadCount=20;
  final HazelcastInstance hz=Hazelcast.newHazelcastInstance(null);
  final Stats stats=new Stats();
  ExecutorService es=Executors.newFixedThreadPool(threadCount);
  for (int i=0; i < threadCount; i++) {
    es.submit(new Runnable(){
      public void run(){
        Queue<byte[]> queue=hz.getQueue("default");
        while (true) {
          for (int j=0; j < 1000; j++) {
            queue.offer(new byte[VALUE_SIZE]);
            stats.offers.incrementAndGet();
          }
          for (int j=0; j < 1000; j++) {
            queue.poll();
            stats.polls.incrementAndGet();
          }
        }
      }
    }
);
  }
  Executors.newSingleThreadExecutor().submit(new Runnable(){
    @SuppressWarnings("BusyWait") public void run(){
      while (true) {
        try {
          Thread.sleep(STATS_SECONDS * 1000);
          System.out.println("cluster size:" + hz.getCluster().getMembers().size());
          Stats currentStats=stats.getAndReset();
          System.out.println(currentStats);
          System.out.println("Operations per Second : " + currentStats.total() / STATS_SECONDS);
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
      }
    }
  }
);
}
