{
  final long start=Clock.currentTimeMillis();
  startExecution(name,start - creationTime);
  Object result=null;
  try {
    super.run();
    result=get();
  }
 catch (  Exception e) {
    final ILogger logger=getLogger();
    logger.log(Level.FINEST,"While executing callable: " + callableToString,e);
    result=e;
  }
 finally {
    if (uuid != null) {
      submittedTasks.remove(uuid);
    }
    final boolean cancelled=isCancelled();
    try {
      responseHandler.sendResponse(result);
    }
 catch (    ResponseAlreadySentException e) {
      if (!cancelled) {
        final ILogger logger=getLogger();
        logger.log(Level.SEVERE,e.getMessage(),e);
      }
    }
    if (!cancelled) {
      finishExecution(name,Clock.currentTimeMillis() - start);
    }
  }
}
