{
  final long start=Clock.currentTimeMillis();
  startExecution(name,start - creationTime);
  Object result=null;
  try {
    super.run();
    if (!isCancelled()) {
      result=get();
    }
  }
 catch (  Exception e) {
    final ILogger logger=getLogger();
    if (logger.isFinestEnabled()) {
      logger.finest("While executing callable: " + callableToString,e);
    }
    result=e;
  }
 finally {
    if (uuid != null) {
      submittedTasks.remove(uuid);
    }
    sendResponse(result);
    if (!isCancelled()) {
      finishExecution(name,Clock.currentTimeMillis() - start);
    }
  }
}
