{
  final Collection<Member> members=removeLiteMembers(allMembers);
  final Collection<MemberGroup> groups=createHostAwareMemberGroups(members);
  if (groups.size() == 1 && members.size() >= 2) {
    MemberGroup group1=groups.iterator().next();
    MemberGroup group2=new DefaultMemberGroup();
    final int sizePerGroup=group1.size() / 2;
    Iterator<Member> iter=group1.iterator();
    while (group2.size() < sizePerGroup && iter.hasNext()) {
      group2.addMember(iter.next());
      iter.remove();
    }
    groups.add(group2);
  }
  return groups;
}
