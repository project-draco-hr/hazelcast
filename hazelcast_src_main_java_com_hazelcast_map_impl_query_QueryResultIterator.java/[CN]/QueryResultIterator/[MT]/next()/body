{
  QueryResultRow row=iterator.next();
switch (iteratorType) {
case VALUE:
    return binary ? row.getValue() : serializationService.toObject(row.getValue());
case KEY:
  return binary ? row.getKey() : serializationService.toObject(row.getKey());
case ENTRY:
if (binary) {
  return new AbstractMap.SimpleImmutableEntry(row.getKey(),row.getValue());
}
 else {
  Object key=serializationService.toObject(row.getKey());
  Object value=serializationService.toObject(row.getValue());
  return new AbstractMap.SimpleImmutableEntry(key,value);
}
default :
throw new IllegalStateException("Unrecognized iteratorType:" + iteratorType);
}
}
