{
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(1);
  Config config=new Config();
  config.getServicesConfig().addServiceConfig(new ServiceConfig().setServiceImpl(new FailingInitializingObjectService()).setEnabled(true).setName(FailingInitializingObjectService.NAME));
  final String serviceName=FailingInitializingObjectService.NAME;
  final String objectName="test-object";
  final HazelcastInstance hz=factory.newHazelcastInstance(config);
  int threads=3;
  final CountDownLatch latch=new CountDownLatch(threads);
  for (int i=0; i < threads; i++) {
    new Thread(){
      public void run(){
        for (int j=0; j < 1000; j++) {
          try {
            hz.getDistributedObject(serviceName,objectName);
            fail("Proxy creation should fail!");
          }
 catch (          HazelcastException expected) {
          }
          LockSupport.parkNanos(1);
        }
        latch.countDown();
      }
    }
.start();
  }
  assertOpenEventually(latch,30);
}
