{
  int nodeCount=4;
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(nodeCount);
  Config config=new Config();
  config.getServicesConfig().addServiceConfig(new ServiceConfig().setServiceImpl(new TestInitializingObjectService()).setEnabled(true).setName(TestInitializingObjectService.NAME));
  String serviceName=TestInitializingObjectService.NAME;
  String objectName="test-object";
  HazelcastInstance[] instances=new HazelcastInstance[nodeCount];
  for (int i=0; i < instances.length; i++) {
    instances[i]=factory.newHazelcastInstance(config);
    instances[i].getDistributedObject(serviceName,objectName);
  }
  for (int i=0; i < nodeCount; i++) {
    Node node=TestUtil.getNode(instances[i]);
    ProxyServiceImpl proxyService=(ProxyServiceImpl)node.nodeEngine.getProxyService();
    Operation postJoinOperation=proxyService.getPostJoinOperation();
    for (int j=0; j < nodeCount; j++) {
      if (i == j)       continue;
      Node node2=TestUtil.getNode(instances[j]);
      node.nodeEngine.getOperationService().send(postJoinOperation,node2.address);
    }
  }
  for (int i=0; i < instances.length; i++) {
    TestInitializingObject obj=instances[i].getDistributedObject(serviceName,objectName);
    assertTrue(obj.init.get());
    Assert.assertFalse(obj.error);
  }
}
