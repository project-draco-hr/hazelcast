{
  int count=nodeEngine.getPartitionCount();
  for (int i=0; i < count; i++) {
    CollectionPartitionContainer partitionContainer=service.getPartitionContainer(i);
    Map<CollectionProxyId,CollectionContainer> multiMaps=partitionContainer.getContainerMap();
    if (multiMaps.size() > 0) {
      System.out.println("partitionId: " + i);
    }
    for (    Map.Entry<CollectionProxyId,CollectionContainer> entry : multiMaps.entrySet()) {
      System.out.println("\tname: " + entry.getKey());
      CollectionContainer container=entry.getValue();
      Map<Data,Collection<CollectionRecord>> map=container.getCollections();
      for (      Map.Entry<Data,Collection<CollectionRecord>> en : map.entrySet()) {
        System.out.println("\t\tkey: " + nodeEngine.toObject(en.getKey()));
        Collection<CollectionRecord> col=en.getValue();
        for (        CollectionRecord o : col) {
          System.out.println("\t\t\tval: " + nodeEngine.toObject(o.getObject()) + ", id: "+ o.getRecordId());
        }
      }
      ConcurrentMap<Data,LockInfo> locks=container.getLocks();
      System.out.println("\t\t\t\t\t-------------");
      for (      Data key : locks.keySet()) {
        System.out.println("\t\t\t\t\t\tkey: " + nodeEngine.toObject(key));
      }
      System.out.println("\t\t\t\t\t-------------");
    }
  }
  return null;
}
