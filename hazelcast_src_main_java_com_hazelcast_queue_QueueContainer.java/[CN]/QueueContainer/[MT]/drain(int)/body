{
  if (maxSize < 0 || maxSize > itemQueue.size()) {
    maxSize=itemQueue.size();
  }
  LinkedHashMap<Long,Data> map=new LinkedHashMap<Long,Data>(maxSize);
  Iterator<QueueItem> iter=itemQueue.iterator();
  for (int i=0; i < maxSize; i++) {
    QueueItem item=iter.next();
    if (store.isEnabled() && item.getData() == null) {
      try {
        load(item);
      }
 catch (      Exception e) {
        throw new RetryableHazelcastException(e);
      }
    }
    map.put(item.getItemId(),item.getData());
  }
  if (store.isEnabled()) {
    try {
      store.deleteAll(map.keySet());
    }
 catch (    Exception e) {
      throw new RetryableHazelcastException(e);
    }
  }
  long current=Clock.currentTimeMillis();
  for (int i=0; i < maxSize; i++) {
    QueueItem item=itemQueue.poll();
    age(item,current);
  }
  return map.values();
}
