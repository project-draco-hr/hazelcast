{
  int ttl=10;
  int minimumVisibleTTL=ttl - 2;
  setup(new RingbufferConfig("foo").setTimeToLiveSeconds(ttl).setCapacity(100));
  for (int k=0; k < ringbuffer.capacity(); k++) {
    ringbuffer.add("item" + k);
  }
  final long head=ringbuffer.headSequence();
  final long tail=ringbuffer.tailSequence();
  final long size=ringbuffer.size();
  assertTrueAllTheTime(new AssertTask(){
    @Override public void run() throws Exception {
      assertEquals(head,ringbuffer.headSequence());
      assertEquals(tail,ringbuffer.tailSequence());
      assertEquals(size,ringbuffer.size());
      for (long seq=head; seq <= tail; seq++) {
        assertEquals("item" + seq,ringbuffer.readOne(seq));
      }
    }
  }
,minimumVisibleTTL);
}
