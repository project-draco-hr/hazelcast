{
  final DistributedObjectFuture proxyFuture=proxies.remove(name);
  if (proxyFuture != null) {
    DistributedObject proxy;
    try {
      proxy=proxyFuture.get();
    }
 catch (    Throwable t) {
      logger.warning("Cannot destroy proxy [" + serviceName + ":"+ name+ "], since it's creation is failed with "+ t.getClass().getName()+ ": "+ t.getMessage());
      return;
    }
    nodeEngine.eventService.executeEventCallback(new ProxyEventProcessor(DESTROYED,serviceName,proxy));
    if (publishEvent) {
      publish(new DistributedObjectEventPacket(DESTROYED,serviceName,name));
    }
  }
}
