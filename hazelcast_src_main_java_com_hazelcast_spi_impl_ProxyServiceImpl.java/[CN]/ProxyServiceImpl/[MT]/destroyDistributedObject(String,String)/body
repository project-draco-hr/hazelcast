{
  if (serviceName == null) {
    throw new NullPointerException("Service name is required!");
  }
  if (name == null) {
    throw new NullPointerException("Object name is required!");
  }
  OperationService operationService=nodeEngine.getOperationService();
  Collection<MemberImpl> members=nodeEngine.getClusterService().getMemberList();
  Collection<Future> calls=new ArrayList<Future>(members.size());
  for (  MemberImpl member : members) {
    if (member.localMember()) {
      continue;
    }
    DistributedObjectDestroyOperation operation=new DistributedObjectDestroyOperation(serviceName,name);
    Future f=operationService.createInvocationBuilder(SERVICE_NAME,operation,member.getAddress()).setTryCount(TRY_COUNT).invoke();
    calls.add(f);
  }
  destroyLocalDistributedObject(serviceName,name,true);
  try {
    FutureUtil.waitWithDeadline(calls,TIME,TimeUnit.SECONDS,DESTROY_PROXY_EXCEPTION_HANDLER);
  }
 catch (  TimeoutException e) {
    logger.finest(e);
  }
}
