{
  Map.Entry entry;
  RecordStore recordStore=mapService.getMapServiceContext().getRecordStore(getPartitionId(),name);
  final Iterator<Record> iterator=recordStore.iterator();
  while (iterator.hasNext()) {
    final Record record=iterator.next();
    Data dataKey=record.getKey();
    Object objectKey=mapService.getMapServiceContext().toObject(record.getKey());
    Object valueBeforeProcess=mapService.getMapServiceContext().toObject(record.getValue());
    if (getPredicate() != null) {
      QueryEntry queryEntry=new QueryEntry(getNodeEngine().getSerializationService(),dataKey,objectKey,valueBeforeProcess);
      if (!getPredicate().apply(queryEntry)) {
        continue;
      }
    }
    entry=new AbstractMap.SimpleEntry(objectKey,valueBeforeProcess);
    entryProcessor.processBackup(entry);
    if (entry.getValue() == null) {
      recordStore.removeBackup(dataKey);
    }
 else {
      recordStore.putBackup(dataKey,entry.getValue());
    }
  }
}
