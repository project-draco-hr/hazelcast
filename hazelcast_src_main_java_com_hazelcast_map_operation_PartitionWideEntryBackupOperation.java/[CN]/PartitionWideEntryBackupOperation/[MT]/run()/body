{
  Map.Entry entry;
  RecordStore recordStore=mapService.getRecordStore(getPartitionId(),name);
  Map<Data,Record> records=recordStore.getReadonlyRecordMap();
  for (  Map.Entry<Data,Record> recordEntry : records.entrySet()) {
    Data dataKey=recordEntry.getKey();
    Record record=recordEntry.getValue();
    Object objectKey=mapService.toObject(record.getKey());
    Object valueBeforeProcess=mapService.toObject(record.getValue());
    if (getPredicate() != null) {
      QueryEntry queryEntry=new QueryEntry(getNodeEngine().getSerializationService(),dataKey,objectKey,valueBeforeProcess);
      if (!getPredicate().apply(queryEntry)) {
        continue;
      }
    }
    entry=new AbstractMap.SimpleEntry(objectKey,valueBeforeProcess);
    entryProcessor.processBackup(entry);
    if (entry.getValue() == null) {
      recordStore.remove(dataKey);
    }
 else {
      recordStore.put(new AbstractMap.SimpleImmutableEntry<Data,Object>(dataKey,entry.getValue()));
    }
  }
}
