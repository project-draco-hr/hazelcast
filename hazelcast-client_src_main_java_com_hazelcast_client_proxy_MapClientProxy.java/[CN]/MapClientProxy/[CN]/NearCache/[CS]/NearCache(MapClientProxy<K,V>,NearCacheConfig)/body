{
  this.timeToLiveMillis=nc.getTimeToLiveSeconds() * 1000;
  this.maxSize=nc.getMaxSize();
  this.evictionPolicy=MapConfig.EvictionPolicy.valueOf(nc.getEvictionPolicy());
  this.maxIdleMillis=nc.getMaxIdleSeconds() * 1000;
  this.invalidateOnChange=nc.isInvalidateOnChange();
  if (invalidateOnChange) {
    proxy.addEntryListener(new EntryListener<K,V>(){
      @Override public void entryAdded(      EntryEvent<K,V> kvEntryEvent){
        invalidate(kvEntryEvent.getKey());
      }
      @Override public void entryRemoved(      EntryEvent<K,V> kvEntryEvent){
        invalidate(kvEntryEvent.getKey());
      }
      @Override public void entryUpdated(      EntryEvent<K,V> kvEntryEvent){
        invalidate(kvEntryEvent.getKey());
      }
      @Override public void entryEvicted(      EntryEvent<K,V> kvEntryEvent){
        invalidate(kvEntryEvent.getKey());
      }
    }
,false);
  }
}
