{
  check(key);
  Data dKey=proxyHelper.toData(key);
  final Protocol protocol=proxyHelper.doCommand(dKey,Command.MGETENTRYVIEW,new String[]{getName()},dKey);
  if (!protocol.hasBuffer())   return new SimpleEntryView<K,V>();
 else {
    String[] args=protocol.args;
    return new EntryView<K,V>(){
      @Override public K getKey(){
        return (K)proxyHelper.toObject(protocol.buffers[0]);
      }
      @Override public V getValue(){
        return (V)proxyHelper.toObject(protocol.buffers[1]);
      }
      @Override public long getCost(){
        return Long.valueOf(protocol.args[0]);
      }
      @Override public long getCreationTime(){
        return Long.valueOf(protocol.args[1]);
      }
      @Override public long getExpirationTime(){
        return Long.valueOf(protocol.args[2]);
      }
      @Override public long getHits(){
        return Long.valueOf(protocol.args[3]);
      }
      @Override public long getLastAccessTime(){
        return Long.valueOf(protocol.args[4]);
      }
      @Override public long getLastStoredTime(){
        return Long.valueOf(protocol.args[5]);
      }
      @Override public long getLastUpdateTime(){
        return Long.valueOf(protocol.args[6]);
      }
      @Override public long getVersion(){
        return Long.valueOf(protocol.args[7]);
      }
    }
;
  }
}
