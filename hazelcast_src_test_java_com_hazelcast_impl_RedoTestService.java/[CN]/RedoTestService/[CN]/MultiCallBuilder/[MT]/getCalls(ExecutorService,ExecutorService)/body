{
  List<FutureTask> lsFutureTasks=new LinkedList<FutureTask>();
  addRunnable(es,lsFutureTasks,new Callable(){
    public Object call() throws Exception {
      return imap.size();
    }
    @Override public String toString(){
      return "m.size";
    }
  }
);
  addRunnable(es,lsFutureTasks,new Callable(){
    public Object call() throws Exception {
      return imap.values();
    }
    @Override public String toString(){
      return "m.values";
    }
  }
);
  addRunnable(es,lsFutureTasks,new Callable(){
    public Object call() throws Exception {
      return imap.containsValue(1);
    }
    @Override public String toString(){
      return "m.containsValue";
    }
  }
);
  addRunnable(es,lsFutureTasks,new Callable(){
    public Object call() throws Exception {
      imap.addEntryListener(new EntryAdapter(),true);
      return Boolean.TRUE;
    }
    @Override public String toString(){
      return "m.addEntryListener";
    }
  }
);
  addRunnable(es,lsFutureTasks,new Callable(){
    public Object call() throws Exception {
      return imap.keySet();
    }
    @Override public String toString(){
      return "m.keySet";
    }
  }
);
  addRunnable(es,lsFutureTasks,new Callable(){
    public Object call() throws Exception {
      return imap.entrySet();
    }
    @Override public String toString(){
      return "m.entrySet";
    }
  }
);
  addRunnable(es,lsFutureTasks,new Callable(){
    public Object call() throws Exception {
      topic.addMessageListener(new MessageListener(){
        public void onMessage(        Message message){
        }
      }
);
      return Boolean.TRUE;
    }
    @Override public String toString(){
      return "t.addMessageListener";
    }
  }
);
  return lsFutureTasks;
}
