{
  try {
    try {
      behavior.before();
    }
 catch (    Exception e) {
      e.printStackTrace();
      fail(e.getMessage());
    }
    List<FutureTask> lsFutureTasks=callBuilder.getCalls(es,esSingle);
    for (    FutureTask futureTask : lsFutureTasks) {
      try {
        Object result=futureTask.get(0,TimeUnit.SECONDS);
        fail("Expected: TimeoutException, got " + result + ", callTask: "+ futureTask);
      }
 catch (      TimeoutException e) {
      }
catch (      Exception e) {
        fail();
        return;
      }
    }
    behavior.after();
    for (    FutureTask futureTask : lsFutureTasks) {
      try {
        futureTask.get(20,TimeUnit.SECONDS);
      }
 catch (      Exception e) {
        e.printStackTrace();
        fail("Failed callTask: " + futureTask);
        return;
      }
    }
  }
  finally {
    behavior.destroy();
    destroy();
  }
}
