{
  Config config=new Config();
  StaticNodeFactory factory=new StaticNodeFactory(3);
  HazelcastInstance h1=factory.newHazelcastInstance(config);
  HazelcastInstance h2=factory.newHazelcastInstance(config);
  HazelcastInstance h3=factory.newHazelcastInstance(config);
  final IMap map1=h1.getMap("default");
  final int size=100;
  final CountDownLatch latch=new CountDownLatch(size);
  boolean b=h1.executeTransaction(new TransactionalTask<Boolean>(){
    public Boolean execute(    TransactionalTaskContext context) throws TransactionException {
      final TransactionalMap<Object,Object> txMap=context.getMap("default");
      for (int i=0; i < size; i++) {
        txMap.put(i,i);
        try {
          Thread.sleep(100);
          System.out.println("turn:" + i);
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
        latch.countDown();
      }
      return true;
    }
  }
);
  try {
    Thread.sleep(200);
    h1.getLifecycleService().shutdown();
    latch.await();
    final IMap map2=h2.getMap("default");
    for (int i=0; i < size; i++) {
      assertEquals(i,map2.get(i));
    }
  }
 catch (  InterruptedException e) {
  }
}
