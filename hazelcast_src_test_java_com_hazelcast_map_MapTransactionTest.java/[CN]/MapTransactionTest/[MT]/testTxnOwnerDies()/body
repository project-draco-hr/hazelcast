{
  Config config=new Config();
  final TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(3);
  final HazelcastInstance h1=factory.newHazelcastInstance(config);
  final HazelcastInstance h2=factory.newHazelcastInstance(config);
  final HazelcastInstance h3=factory.newHazelcastInstance(config);
  final IMap map1=h1.getMap("default");
  final int size=50;
  final AtomicBoolean result=new AtomicBoolean(false);
  Runnable runnable=new Runnable(){
    public void run(){
      try {
        boolean b=h1.executeTransaction(options,new TransactionalTask<Boolean>(){
          public Boolean execute(          TransactionalTaskContext context) throws TransactionException {
            final TransactionalMap<Object,Object> txMap=context.getMap("default");
            for (int i=0; i < size; i++) {
              txMap.put(i,i);
              try {
                Thread.sleep(100);
              }
 catch (              InterruptedException e) {
                e.printStackTrace();
              }
            }
            return true;
          }
        }
);
        result.set(b);
      }
 catch (      HazelcastInstanceNotActiveException ignored) {
      }
catch (      TransactionException ignored) {
      }
    }
  }
;
  Thread thread=new Thread(runnable);
  thread.start();
  Thread.sleep(200);
  h1.getLifecycleService().shutdown();
  thread.join(30 * 1000);
  assertFalse(result.get());
  final IMap map2=h2.getMap("default");
  for (int i=0; i < size; i++) {
    assertNull(map2.get(i));
  }
}
