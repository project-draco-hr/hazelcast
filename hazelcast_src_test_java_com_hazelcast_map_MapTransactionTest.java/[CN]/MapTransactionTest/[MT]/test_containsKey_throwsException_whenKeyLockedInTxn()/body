{
  final String mapName="default";
  Config config=getConfig();
  final HazelcastInstance instance=createHazelcastInstance(config);
  final IMap map=instance.getMap(mapName);
  map.put(1,1);
  final CountDownLatch latch=new CountDownLatch(1);
  new Thread(new Runnable(){
    @Override public void run(){
      instance.executeTransaction(options,new TransactionalTask<Boolean>(){
        public Boolean execute(        TransactionalTaskContext context) throws TransactionException {
          TransactionalMap<Object,Object> txMap=context.getMap(mapName);
          txMap.getForUpdate(1);
          latch.countDown();
          sleepSeconds(Integer.MAX_VALUE);
          return null;
        }
      }
);
    }
  }
).start();
  assertOpenEventually(latch);
  MapProxyImpl mapProxy=(MapProxyImpl)map;
  MapOperationProvider operationProvider=((MapService)mapProxy.getService()).getMapServiceContext().getMapOperationProvider(mapName);
  mapProxy.setOperationProvider(new WaitTimeoutSetterMapOperationProvider(operationProvider));
  map.containsKey(1);
}
