{
  Config config=new Config();
  StaticNodeFactory factory=new StaticNodeFactory(2);
  final HazelcastInstance h1=factory.newHazelcastInstance(config);
  final HazelcastInstance h2=factory.newHazelcastInstance(config);
  final IMap map1=h1.getMap("default");
  final int size=50;
  final CountDownLatch latch=new CountDownLatch(size + 1);
  Runnable runnable=new Runnable(){
    public void run(){
      try {
        boolean b=h1.executeTransaction(new TransactionalTask<Boolean>(){
          public Boolean execute(          TransactionalTaskContext context) throws TransactionException {
            final TransactionalMap<Object,Object> txMap=context.getMap("default");
            for (int i=0; i < size; i++) {
              txMap.put(i,i);
              try {
                Thread.sleep(100);
              }
 catch (              InterruptedException e) {
              }
              latch.countDown();
            }
            return true;
          }
        }
,new TransactionOptions().setDurability(1));
        fail();
      }
 catch (      Exception e) {
      }
      latch.countDown();
    }
  }
;
  new Thread(runnable).start();
  try {
    Thread.sleep(1000);
    h2.getLifecycleService().shutdown();
    latch.await();
    for (int i=0; i < size; i++) {
      assertNull(map1.get(i));
    }
  }
 catch (  InterruptedException e) {
  }
}
