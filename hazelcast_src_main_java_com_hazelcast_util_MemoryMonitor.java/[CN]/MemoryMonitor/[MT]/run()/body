{
  Runtime r=Runtime.getRuntime();
  while (node.isActive()) {
    long free=r.freeMemory();
    long total=r.totalMemory();
    long used=total - free;
    long max=r.maxMemory();
    StringBuilder sb=new StringBuilder();
    sb.append("used=").append(bytesToString(used)).append(", ");
    sb.append("free=").append(bytesToString(free)).append(", ");
    sb.append("total=").append(bytesToString(total)).append(", ");
    sb.append("max=").append(bytesToString(max)).append(", ");
    sb.append("used/total=").append(percentage(used,total)).append(" ");
    sb.append("used/max=").append(percentage(used,max));
    logger.log(Level.INFO,sb.toString());
    try {
      Thread.sleep(10000);
    }
 catch (    InterruptedException e) {
      return;
    }
  }
}
