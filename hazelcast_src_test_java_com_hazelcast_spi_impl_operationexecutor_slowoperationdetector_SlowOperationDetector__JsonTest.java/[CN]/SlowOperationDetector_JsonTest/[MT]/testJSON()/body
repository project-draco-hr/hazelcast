{
  String stackTrace="stackTrace";
  String operation="fakeOperation";
  int id=5;
  int durationMs=4444;
  long nowMillis=System.currentTimeMillis();
  long nowNanos=System.nanoTime();
  long durationNanos=TimeUnit.MILLISECONDS.toNanos(durationMs);
  SlowOperationLog log=new SlowOperationLog(stackTrace,operation);
  log.getOrCreateInvocation(id,durationNanos,nowNanos,nowMillis);
  JsonObject json=log.toJson();
  SlowOperationLog actual=new SlowOperationLog(json);
  System.out.println(json);
  assertEqualsStringFormat("Expected stack trace '%s', but was '%s'",stackTrace,actual.getStackTrace());
  assertEqualsStringFormat("Expected operation '%s', but was '%s'",operation,getFieldFromObject(actual,"operation"));
  assertEqualsStringFormat("Expected totalInvocations '%d', but was '%d'",1,getFieldFromObject(actual,"totalInvocations"));
  ConcurrentHashMap<Integer,SlowOperationLog.Invocation> invocations=getFieldFromObject(actual,"invocations");
  SlowOperationLog.Invocation invocation=invocations.values().iterator().next();
  assertEqualsStringFormat("Expected id '%d', but was '%d'",id,getFieldFromObject(invocation,"id"));
  assertEqualsStringFormat("Expected startedAt '%d', but was '%d'",nowMillis - durationMs,getFieldFromObject(invocation,"startedAt"));
  assertEqualsStringFormat("Expected durationMs '%d', but was '%d'",durationMs,getFieldFromObject(invocation,"durationMs"));
}
