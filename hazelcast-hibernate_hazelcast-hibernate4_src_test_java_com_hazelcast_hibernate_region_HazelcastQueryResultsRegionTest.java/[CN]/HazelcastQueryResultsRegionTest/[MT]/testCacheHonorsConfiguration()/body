{
  int maxSize=50;
  int timeout=60;
  MapConfig mapConfig=mock(MapConfig.class);
  when(mapConfig.getMaxSizeConfig()).thenReturn(new MaxSizeConfig(maxSize,MaxSizeConfig.MaxSizePolicy.PER_NODE));
  when(mapConfig.getTimeToLiveSeconds()).thenReturn(timeout);
  Config config=mock(Config.class);
  when(config.findMapConfig(eq(REGION_NAME))).thenReturn(mapConfig);
  HazelcastInstance instance=mock(HazelcastInstance.class);
  when(instance.getConfig()).thenReturn(config);
  HazelcastQueryResultsRegion region=new HazelcastQueryResultsRegion(instance,REGION_NAME,new Properties());
  assertEquals(TimeUnit.SECONDS.toMillis(timeout),region.getTimeout());
  verify(instance,atLeastOnce()).getConfig();
  verify(instance,never()).getTopic(anyString());
  verify(config,atLeastOnce()).findMapConfig(eq(REGION_NAME));
  verify(mapConfig,times(2)).getTimeToLiveSeconds();
  LocalRegionCache regionCache=region.getCache();
  assertNotNull(regionCache);
  int oversized=maxSize * 2;
  for (int i=0; i < oversized; ++i) {
    regionCache.put(i,i,i);
  }
  assertEquals(oversized,regionCache.size());
  LocalRegionCacheTest.runCleanup(regionCache);
  assertTrue(regionCache.size() <= 50);
  verify(mapConfig).getMaxSizeConfig();
  verify(mapConfig,times(3)).getTimeToLiveSeconds();
}
