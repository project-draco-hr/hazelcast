{
  final TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(3);
  final HazelcastInstance lite1=factory.newHazelcastInstance(liteConfig);
  final HazelcastInstance lite2=factory.newHazelcastInstance(liteConfig);
  final HazelcastInstance other=factory.newHazelcastInstance();
  final ResultHoldingMultiExecutionCallback callback=new ResultHoldingMultiExecutionCallback();
  final IExecutorService executor=other.getExecutorService(randomString());
  executor.submitToMembers(new LocalMemberReturningCallable(),LITE_MEMBER_SELECTOR,callback);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      final Map<Member,Object> results=callback.getResults();
      assertNotNull(results);
      final Member liteMember1=lite1.getCluster().getLocalMember();
      final Member liteMember2=lite2.getCluster().getLocalMember();
      assertEquals(liteMember1,results.get(liteMember1));
      assertEquals(liteMember2,results.get(liteMember2));
    }
  }
);
}
