{
  HazelcastInstance h1=Hazelcast.newHazelcastInstance(null);
  HazelcastInstance h2=Hazelcast.newHazelcastInstance(null);
  final ICountDownLatch cdl1=h1.getCountDownLatch("test");
  final ICountDownLatch cdl2=h2.getCountDownLatch("test");
  Address h1Address=((MemberImpl)h1.getCluster().getLocalMember()).getAddress();
  final AtomicInteger result=new AtomicInteger();
  int count=5;
  assertTrue(cdl1.setCount(count));
  assertEquals(count,cdl2.getCount());
  assertEquals(h1Address,cdl1.getOwnerAddress());
  assertEquals(h1Address,cdl2.getOwnerAddress());
  Thread thread=new Thread(){
    @Override public void run(){
      try {
        if (cdl2.await(1000,TimeUnit.MILLISECONDS))         result.incrementAndGet();
      }
 catch (      Throwable e) {
        e.printStackTrace();
        fail();
      }
    }
  }
;
  thread.start();
  for (int i=count; i > 0; i--) {
    assertEquals(i,cdl2.getCount());
    cdl1.countDown();
    Thread.sleep(100);
  }
  assertEquals(1,result.get());
}
