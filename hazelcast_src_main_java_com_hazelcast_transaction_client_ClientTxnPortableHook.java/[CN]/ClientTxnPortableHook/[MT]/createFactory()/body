{
  final PortableFactory factory=new PortableFactory(){
    @Override public Portable create(    int classId){
switch (classId) {
case CREATE:
        return new CreateTransactionRequest();
case COMMIT:
      return new CommitTransactionRequest();
case ROLLBACK:
    return new RollbackTransactionRequest();
case PREPARE_XA:
  return new PrepareXATransactionRequest();
case CREATE_XA:
return new CreateXATransactionRequest();
case COMMIT_XA:
return new CommitXATransactionRequest();
case ROLLBACK_XA:
return new RollbackXATransactionRequest();
case FINALIZE_XA:
return new FinalizeXATransactionRequest();
case COLLECT_XA:
return new CollectXATransactionsRequest();
default :
return null;
}
}
}
;
return factory;
}
