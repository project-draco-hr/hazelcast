{
  handleCommonBeanAttributes(element,builder,parserContext);
  handleClientAttributes(element);
  for (  Node node : new IterableNodeList(element,Node.ELEMENT_NODE)) {
    final String nodeName=cleanNodeName(node.getNodeName());
    if ("group".equals(nodeName)) {
      createAndFillBeanBuilder(node,GroupConfig.class,"groupConfig",configBuilder);
    }
 else     if ("properties".equals(nodeName)) {
      handleProperties(node,configBuilder);
    }
 else     if ("network".equals(nodeName)) {
      handleNetwork(node);
    }
 else     if ("listeners".equals(nodeName)) {
      final List listeners=parseListeners(node,ListenerConfig.class);
      configBuilder.addPropertyValue("listenerConfigs",listeners);
    }
 else     if ("serialization".equals(nodeName)) {
      handleSerialization(node);
    }
 else     if ("proxy-factories".equals(nodeName)) {
      final List list=parseProxyFactories(node,ProxyFactoryConfig.class);
      configBuilder.addPropertyValue("proxyFactoryConfigs",list);
    }
 else     if ("load-balancer".equals(nodeName)) {
      handleLoadBalancer(node);
    }
 else     if ("near-cache".equals(nodeName)) {
      handleNearCache(node);
    }
 else     if ("spring-aware".equals(nodeName)) {
      handleSpringAware();
    }
  }
  builder.addConstructorArgValue(configBuilder.getBeanDefinition());
}
