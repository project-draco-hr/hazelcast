{
  final String instanceName=properties.getProperty(INSTANCE_NAME);
  final String configLocation=properties.getProperty(CONFIG_LOCATION);
  final String useClientProp=properties.getProperty(USE_CLIENT);
  final String clientConfigLocation=properties.getProperty(CLIENT_CONFIG_LOCATION);
  final boolean useClient=!isEmpty(useClientProp) && Boolean.parseBoolean(useClientProp);
  URL configUrl=null;
  if (useClient && !isEmpty(clientConfigLocation)) {
    configUrl=getConfigURL(filterConfig,clientConfigLocation);
  }
 else   if (!isEmpty(configLocation)) {
    configUrl=getConfigURL(filterConfig,configLocation);
  }
  if (useClient) {
    boolean isSticky=Boolean.valueOf(properties.getProperty(STICKY_SESSION_CONFIG));
    return createClientInstance(sessionService,configUrl,isSticky);
  }
  Config config;
  if (configUrl == null) {
    config=new XmlConfigBuilder().build();
  }
 else {
    try {
      config=new UrlXmlConfig(configUrl);
    }
 catch (    IOException e) {
      throw new ServletException(e);
    }
  }
  return createHazelcastInstance(sessionService,instanceName,config);
}
