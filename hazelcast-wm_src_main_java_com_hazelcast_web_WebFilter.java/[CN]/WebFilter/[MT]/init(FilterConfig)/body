{
  this.config=config;
  String debugParam=getParam("debug");
  if (debugParam != null) {
    debug=Boolean.valueOf(debugParam);
  }
  servletContext=config.getServletContext();
  hazelcastInstance=props == null ? getInstance(config) : getInstance(props);
  String mapName=getParam("map-name");
  if (mapName != null) {
    clusterMapName=mapName;
  }
 else {
    clusterMapName="_web_" + servletContext.getServletContextName();
  }
  String cookieName=getParam("cookie-name");
  if (cookieName != null) {
    sessionCookieName=cookieName;
  }
  String stickySessionParam=getParam("sticky-session");
  if (stickySessionParam != null) {
    stickySession=Boolean.valueOf(stickySessionParam);
  }
  String shutdownOnDestroyParam=getParam("shutdown-on-destroy");
  if (shutdownOnDestroyParam != null) {
    shutdownOnDestroy=Boolean.valueOf(shutdownOnDestroyParam);
  }
  if (!stickySession) {
    getClusterMap().addEntryListener(new EntryListener(){
      public void entryAdded(      EntryEvent entryEvent){
      }
      public void entryRemoved(      EntryEvent entryEvent){
        if (entryEvent.getMember() == null || !entryEvent.getMember().localMember()) {
          removeSessionLocally((String)entryEvent.getKey());
        }
      }
      public void entryUpdated(      EntryEvent entryEvent){
        if (entryEvent.getMember() == null || !entryEvent.getMember().localMember()) {
          markSessionDirty((String)entryEvent.getKey());
        }
      }
      public void entryEvicted(      EntryEvent entryEvent){
      }
    }
,false);
  }
  log("sticky:" + stickySession + ", debug: "+ debug+ ", shutdown-on-destroy: "+ shutdownOnDestroy+ ", map-name: "+ clusterMapName);
}
