{
  if (firstCall) {
    String threadNamePrefix=node.getThreadPoolNamePrefix("client.service");
    for (int i=0; i < THREAD_COUNT; i++) {
      Worker worker=workers[i];
      new Thread(node.threadGroup,worker,threadNamePrefix + i).start();
    }
    firstCall=false;
  }
  ClientEndpoint clientEndpoint=getClientEndpoint(packet.conn);
  CallContext callContext=clientEndpoint.getCallContext(packet.threadId);
  ClientOperationHandler clientOperationHandler=clientOperationHandlers.get(packet.operation.getValue());
  if (clientOperationHandler == null) {
    clientOperationHandler=unknownOperationHandler;
  }
  if (packet.operation != CLIENT_AUTHENTICATE && !clientEndpoint.isAuthenticated()) {
    logger.log(Level.SEVERE,"A Client " + packet.conn + " must authenticate before any operation.");
    node.clientHandlerService.removeClientEndpoint(packet.conn);
    if (packet.conn != null)     packet.conn.close();
    return;
  }
  ClientRequestHandler clientRequestHandler=new ClientRequestHandler(node,packet,callContext,clientOperationHandler,clientEndpoint.getSubject());
  clientEndpoint.addRequest(clientRequestHandler);
  if (packet.operation == CONCURRENT_MAP_UNLOCK) {
    node.executorManager.executeNow(clientRequestHandler);
  }
 else {
    int hash=hash(callContext.getThreadId(),THREAD_COUNT);
    workers[hash].addWork(clientRequestHandler);
  }
}
