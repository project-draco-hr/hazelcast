{
  this.node=node;
  this.logger=node.getLogger(this.getClass().getName());
  node.getClusterImpl().addMembershipListener(new ClientServiceMembershipListener());
  clientOperationHandlers.put(CONCURRENT_MAP_PUT.getValue(),new MapPutHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_PUT.getValue(),new MapPutHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_PUT_AND_UNLOCK.getValue(),new MapPutAndUnlockHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_PUT_ALL.getValue(),new MapPutAllHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_PUT_MULTI.getValue(),new MapPutMultiHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_PUT_IF_ABSENT.getValue(),new MapPutIfAbsentHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_PUT_TRANSIENT.getValue(),new MapPutTransientHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_SET.getValue(),new MapSetHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_TRY_PUT.getValue(),new MapTryPutHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_GET.getValue(),new MapGetHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_GET_ALL.getValue(),new MapGetAllHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_REMOVE.getValue(),new MapRemoveHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_TRY_REMOVE.getValue(),new MapTryRemoveHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_REMOVE_IF_SAME.getValue(),new MapRemoveIfSameHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_REMOVE_MULTI.getValue(),new MapRemoveMultiHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_EVICT.getValue(),new MapEvictHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_FLUSH.getValue(),new MapFlushHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_REPLACE_IF_NOT_NULL.getValue(),new MapReplaceIfNotNullHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_REPLACE_IF_SAME.getValue(),new MapReplaceIfSameHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_SIZE.getValue(),new MapSizeHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_GET_MAP_ENTRY.getValue(),new GetMapEntryHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_TRY_LOCK_AND_GET.getValue(),new MapTryLockAndGetHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_LOCK.getValue(),new MapLockHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_UNLOCK.getValue(),new MapUnlockHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_FORCE_UNLOCK.getValue(),new MapForceUnlockHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_LOCK_MAP.getValue(),new MapLockMapHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_UNLOCK_MAP.getValue(),new MapUnlockMapHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_CONTAINS_KEY.getValue(),new MapContainsHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_CONTAINS_VALUE.getValue(),new MapContainsValueHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_ADD_TO_LIST.getValue(),new ListAddHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_ADD_TO_SET.getValue(),new SetAddHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_REMOVE_ITEM.getValue(),new MapItemRemoveHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_ITERATE_KEYS.getValue(),new MapIterateKeysHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_ITERATE_ENTRIES.getValue(),new MapIterateEntriesHandler());
  clientOperationHandlers.put(CONCURRENT_MAP_VALUE_COUNT.getValue(),new MapValueCountHandler());
  clientOperationHandlers.put(TOPIC_PUBLISH.getValue(),new TopicPublishHandler());
  clientOperationHandlers.put(BLOCKING_QUEUE_OFFER.getValue(),new QueueOfferHandler());
  clientOperationHandlers.put(BLOCKING_QUEUE_POLL.getValue(),new QueuePollHandler());
  clientOperationHandlers.put(BLOCKING_QUEUE_REMOVE.getValue(),new QueueRemoveHandler());
  clientOperationHandlers.put(BLOCKING_QUEUE_PEEK.getValue(),new QueuePeekHandler());
  clientOperationHandlers.put(BLOCKING_QUEUE_SIZE.getValue(),new QueueSizeHandler());
  clientOperationHandlers.put(BLOCKING_QUEUE_REMAINING_CAPACITY.getValue(),new QueueRemainingCapacityHandler());
  clientOperationHandlers.put(BLOCKING_QUEUE_ENTRIES.getValue(),new QueueEntriesHandler());
  clientOperationHandlers.put(TRANSACTION_BEGIN.getValue(),new TransactionBeginHandler());
  clientOperationHandlers.put(TRANSACTION_COMMIT.getValue(),new TransactionCommitHandler());
  clientOperationHandlers.put(TRANSACTION_ROLLBACK.getValue(),new TransactionRollbackHandler());
  clientOperationHandlers.put(ADD_LISTENER.getValue(),new AddListenerHandler());
  clientOperationHandlers.put(REMOVE_LISTENER.getValue(),new RemoveListenerHandler());
  clientOperationHandlers.put(REMOTELY_PROCESS.getValue(),new RemotelyProcessHandler());
  clientOperationHandlers.put(DESTROY.getValue(),new DestroyHandler());
  clientOperationHandlers.put(GET_ID.getValue(),new GetIdHandler());
  clientOperationHandlers.put(ADD_INDEX.getValue(),new AddIndexHandler());
  clientOperationHandlers.put(NEW_ID.getValue(),new NewIdHandler());
  clientOperationHandlers.put(EXECUTE.getValue(),new ExecutorServiceHandler());
  clientOperationHandlers.put(CANCEL_EXECUTION.getValue(),new CancelExecutionHandler());
  clientOperationHandlers.put(GET_INSTANCES.getValue(),new GetInstancesHandler());
  clientOperationHandlers.put(GET_MEMBERS.getValue(),new GetMembersHandler());
  clientOperationHandlers.put(GET_CLUSTER_TIME.getValue(),new GetClusterTimeHandler());
  clientOperationHandlers.put(CLIENT_AUTHENTICATE.getValue(),new ClientAuthenticateHandler());
  clientOperationHandlers.put(CLIENT_ADD_INSTANCE_LISTENER.getValue(),new ClientAddInstanceListenerHandler());
  clientOperationHandlers.put(CLIENT_GET_PARTITIONS.getValue(),new GetPartitionsHandler());
  clientOperationHandlers.put(ATOMIC_NUMBER_ADD_AND_GET.getValue(),new AtomicLongAddAndGetHandler());
  clientOperationHandlers.put(ATOMIC_NUMBER_COMPARE_AND_SET.getValue(),new AtomicLongCompareAndSetHandler());
  clientOperationHandlers.put(ATOMIC_NUMBER_GET_AND_SET.getValue(),new AtomicLongGetAndSetHandler());
  clientOperationHandlers.put(ATOMIC_NUMBER_GET_AND_ADD.getValue(),new AtomicLongGetAndAddHandler());
  clientOperationHandlers.put(COUNT_DOWN_LATCH_AWAIT.getValue(),new CountDownLatchAwaitHandler());
  clientOperationHandlers.put(COUNT_DOWN_LATCH_COUNT_DOWN.getValue(),new CountDownLatchCountDownHandler());
  clientOperationHandlers.put(COUNT_DOWN_LATCH_GET_COUNT.getValue(),new CountDownLatchGetCountHandler());
  clientOperationHandlers.put(COUNT_DOWN_LATCH_GET_OWNER.getValue(),new CountDownLatchGetOwnerHandler());
  clientOperationHandlers.put(COUNT_DOWN_LATCH_SET_COUNT.getValue(),new CountDownLatchSetCountHandler());
  clientOperationHandlers.put(SEMAPHORE_ATTACH_DETACH_PERMITS.getValue(),new SemaphoreAttachDetachHandler());
  clientOperationHandlers.put(SEMAPHORE_CANCEL_ACQUIRE.getValue(),new SemaphoreCancelAcquireHandler());
  clientOperationHandlers.put(SEMAPHORE_DRAIN_PERMITS.getValue(),new SemaphoreDrainHandler());
  clientOperationHandlers.put(SEMAPHORE_GET_ATTACHED_PERMITS.getValue(),new SemaphoreGetAttachedHandler());
  clientOperationHandlers.put(SEMAPHORE_GET_AVAILABLE_PERMITS.getValue(),new SemaphoreGetAvailableHandler());
  clientOperationHandlers.put(SEMAPHORE_REDUCE_PERMITS.getValue(),new SemaphoreReduceHandler());
  clientOperationHandlers.put(SEMAPHORE_RELEASE.getValue(),new SemaphoreReleaseHandler());
  clientOperationHandlers.put(SEMAPHORE_TRY_ACQUIRE.getValue(),new SemaphoreTryAcquireHandler());
  clientOperationHandlers.put(LOCK_LOCK.getValue(),new LockOperationHandler());
  clientOperationHandlers.put(LOCK_UNLOCK.getValue(),new UnlockOperationHandler());
  clientOperationHandlers.put(LOCK_FORCE_UNLOCK.getValue(),new UnlockOperationHandler());
  node.connectionManager.addConnectionListener(this);
  this.THREAD_COUNT=node.getGroupProperties().EXECUTOR_CLIENT_THREAD_COUNT.getInteger();
  workers=new Worker[THREAD_COUNT];
  for (int i=0; i < THREAD_COUNT; i++) {
    workers[i]=new Worker();
  }
  this.factory=node.factory;
}
