{
  final AtomicInteger counter=new AtomicInteger();
  final List<Object> results=new CopyOnWriteArrayList<Object>();
  final CountDownLatch latch=new CountDownLatch(10);
  final String key=createRandomKey();
  Runnable run=new Runnable(){
    @Override public void run(){
      try {
        Integer value=cache.get(key,new Callable<Integer>(){
          @Override public Integer call(){
            sleepMillis(50);
            return counter.incrementAndGet();
          }
        }
);
        results.add(value);
      }
  finally {
        latch.countDown();
      }
    }
  }
;
  for (int i=0; i < 10; i++) {
    new Thread(run).start();
  }
  latch.await();
  assertEquals(10,results.size());
  for (  Object result : results) {
    assertThat((Integer)result,is(1));
  }
}
