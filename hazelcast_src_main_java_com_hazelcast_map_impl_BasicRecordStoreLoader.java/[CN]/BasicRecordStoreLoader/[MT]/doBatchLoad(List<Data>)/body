{
  final Queue<List<Data>> batchChunks=createBatchChunks(keys);
  final int size=batchChunks.size();
  final AtomicInteger finishedBatchCounter=new AtomicInteger(size);
  List<Future> futures=new ArrayList<Future>();
  while (!batchChunks.isEmpty()) {
    final List<Data> chunk=batchChunks.poll();
    final List<Data> keyValueSequence=loadAndGet(chunk);
    if (keyValueSequence.isEmpty()) {
      if (finishedBatchCounter.decrementAndGet() == 0) {
        loaded.set(true);
      }
      continue;
    }
    futures.add(sendOperation(keyValueSequence,finishedBatchCounter));
  }
  return futures;
}
