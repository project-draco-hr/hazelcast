{
  final SerializationConfig serializationConfig=clientConfig.getSerializationConfig();
  assertEquals(3,serializationConfig.getPortableVersion());
  final Map<Integer,String> dsClasses=serializationConfig.getDataSerializableFactoryClasses();
  assertEquals(1,dsClasses.size());
  assertEquals("com.hazelcast.examples.DataSerializableFactory",dsClasses.get(1));
  final Map<Integer,String> pfClasses=serializationConfig.getPortableFactoryClasses();
  assertEquals(1,pfClasses.size());
  assertEquals("com.hazelcast.examples.PortableFactory",pfClasses.get(2));
  final Collection<SerializerConfig> serializerConfigs=serializationConfig.getSerializerConfigs();
  assertEquals(1,serializerConfigs.size());
  final SerializerConfig serializerConfig=serializerConfigs.iterator().next();
  assertEquals("com.hazelcast.examples.DummyType",serializerConfig.getTypeClassName());
  assertEquals("com.hazelcast.examples.SerializerFactory",serializerConfig.getClassName());
  final GlobalSerializerConfig globalSerializerConfig=serializationConfig.getGlobalSerializerConfig();
  assertEquals("com.hazelcast.examples.GlobalSerializerFactory",globalSerializerConfig.getClassName());
  assertEquals(ByteOrder.BIG_ENDIAN,serializationConfig.getByteOrder());
  assertEquals(true,serializationConfig.isCheckClassDefErrors());
  assertEquals(false,serializationConfig.isAllowUnsafe());
  assertEquals(false,serializationConfig.isEnableCompression());
  assertEquals(true,serializationConfig.isEnableSharedObject());
  assertEquals(true,serializationConfig.isUseNativeByteOrder());
}
