{
  CacheEvictionConfig cacheEvictionConfig1=new CacheEvictionConfig(1000,EvictionConfig.MaxSizePolicy.ENTRY_COUNT,EvictionPolicy.LFU);
  assertEquals(1000,cacheEvictionConfig1.getSize());
  assertEquals(EvictionConfig.MaxSizePolicy.ENTRY_COUNT,cacheEvictionConfig1.getMaximumSizePolicy());
  assertEquals(EvictionPolicy.LFU,cacheEvictionConfig1.getEvictionPolicy());
  assertNotNull(cacheEvictionConfig1.toString());
  CacheEvictionConfig cacheEvictionConfig2=new CacheEvictionConfig(1000,CacheEvictionConfig.CacheMaxSizePolicy.ENTRY_COUNT,EvictionPolicy.LFU);
  assertEquals(1000,cacheEvictionConfig2.getSize());
  assertEquals(CacheEvictionConfig.CacheMaxSizePolicy.ENTRY_COUNT,cacheEvictionConfig2.getMaxSizePolicy());
  assertEquals(EvictionPolicy.LFU,cacheEvictionConfig2.getEvictionPolicy());
  assertNotNull(cacheEvictionConfig2.toString());
  CacheEvictionConfig cacheEvictionConfig3=new CacheEvictionConfig(1000,EvictionConfig.MaxSizePolicy.ENTRY_COUNT,"myComparator");
  assertEquals(1000,cacheEvictionConfig3.getSize());
  assertEquals(EvictionConfig.MaxSizePolicy.ENTRY_COUNT,cacheEvictionConfig3.getMaximumSizePolicy());
  assertEquals("myComparator",cacheEvictionConfig3.getComparatorClassName());
  assertNotNull(cacheEvictionConfig3.toString());
  CacheEvictionConfig cacheEvictionConfig4=new CacheEvictionConfig(1000,CacheEvictionConfig.CacheMaxSizePolicy.ENTRY_COUNT,"myComparator");
  assertEquals(1000,cacheEvictionConfig4.getSize());
  assertEquals(CacheEvictionConfig.CacheMaxSizePolicy.ENTRY_COUNT,cacheEvictionConfig4.getMaxSizePolicy());
  assertEquals("myComparator",cacheEvictionConfig4.getComparatorClassName());
  assertNotNull(cacheEvictionConfig4.toString());
  EvictionPolicyComparator comparator=new EvictionPolicyComparator(){
    @Override public int compare(    EvictableEntryView e1,    EvictableEntryView e2){
      return 0;
    }
  }
;
  CacheEvictionConfig cacheEvictionConfig5=new CacheEvictionConfig(1000,EvictionConfig.MaxSizePolicy.ENTRY_COUNT,comparator);
  assertEquals(1000,cacheEvictionConfig5.getSize());
  assertEquals(EvictionConfig.MaxSizePolicy.ENTRY_COUNT,cacheEvictionConfig5.getMaximumSizePolicy());
  assertEquals(comparator,cacheEvictionConfig5.getComparator());
  assertNotNull(cacheEvictionConfig5.toString());
  CacheEvictionConfig cacheEvictionConfig6=new CacheEvictionConfig(1000,CacheEvictionConfig.CacheMaxSizePolicy.ENTRY_COUNT,comparator);
  assertEquals(1000,cacheEvictionConfig6.getSize());
  assertEquals(CacheEvictionConfig.CacheMaxSizePolicy.ENTRY_COUNT,cacheEvictionConfig6.getMaxSizePolicy());
  assertEquals(comparator,cacheEvictionConfig6.getComparator());
  assertNotNull(cacheEvictionConfig6.toString());
}
