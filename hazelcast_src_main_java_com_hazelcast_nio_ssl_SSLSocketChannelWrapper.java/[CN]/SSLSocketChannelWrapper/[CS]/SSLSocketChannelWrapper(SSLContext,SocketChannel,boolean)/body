{
  super(sc);
  sslEngine=sslContext.createSSLEngine();
  sslEngine.setUseClientMode(client);
  sslEngine.setEnableSessionCreation(true);
  SSLSession session=sslEngine.getSession();
  in=ByteBuffer.allocate(64 * 1024);
  int appBufferMax=session.getApplicationBufferSize();
  int netBufferMax=session.getPacketBufferSize();
  out=ByteBuffer.allocate(appBufferMax);
  cTOs=ByteBuffer.allocate(netBufferMax);
  sTOc=ByteBuffer.allocate(netBufferMax);
  write(out);
  while (sslEngineResult.getHandshakeStatus() != SSLEngineResult.HandshakeStatus.FINISHED) {
    if (sslEngineResult.getHandshakeStatus() == SSLEngineResult.HandshakeStatus.NEED_UNWRAP) {
      sTOc.clear();
      while (socketChannel.read(sTOc) < 1) {
        Thread.sleep(50);
      }
      sTOc.flip();
      unwrap(sTOc);
      if (sslEngineResult.getHandshakeStatus() != SSLEngineResult.HandshakeStatus.FINISHED) {
        out.clear();
        write(out);
      }
    }
 else     if (sslEngineResult.getHandshakeStatus() == SSLEngineResult.HandshakeStatus.NEED_WRAP) {
      out.clear();
      write(out);
    }
 else {
      Thread.sleep(500);
    }
  }
  in.clear();
  in.flip();
}
