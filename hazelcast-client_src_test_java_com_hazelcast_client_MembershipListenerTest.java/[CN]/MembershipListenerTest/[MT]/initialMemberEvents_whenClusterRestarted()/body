{
  HazelcastInstance instance1=hazelcastFactory.newHazelcastInstance();
  HazelcastInstance instance2=hazelcastFactory.newHazelcastInstance();
  ClientConfig clientConfig=new ClientConfig();
  clientConfig.getNetworkConfig().setConnectionAttemptLimit(Integer.MAX_VALUE);
  final InitialMemberShipEventLogger listener=new InitialMemberShipEventLogger();
  clientConfig.addListenerConfig(new ListenerConfig().setImplementation(listener));
  hazelcastFactory.newHazelcastClient(clientConfig);
  EventObject eventObject=listener.events.poll(ASSERT_TRUE_EVENTUALLY_TIMEOUT,TimeUnit.SECONDS);
  assertInstanceOf(InitialMembershipEvent.class,eventObject);
  instance1.getLifecycleService().terminate();
  eventObject=listener.events.poll(ASSERT_TRUE_EVENTUALLY_TIMEOUT,TimeUnit.SECONDS);
  assertInstanceOf(MembershipEvent.class,eventObject);
  assertEquals(MembershipEvent.MEMBER_REMOVED,((MembershipEvent)eventObject).getEventType());
  instance2.getLifecycleService().terminate();
  hazelcastFactory.newHazelcastInstance();
  eventObject=listener.events.poll(ASSERT_TRUE_EVENTUALLY_TIMEOUT,TimeUnit.SECONDS);
  assertInstanceOf(MembershipEvent.class,eventObject);
  assertEquals(MembershipEvent.MEMBER_REMOVED,((MembershipEvent)eventObject).getEventType());
  eventObject=listener.events.poll(ASSERT_TRUE_EVENTUALLY_TIMEOUT,TimeUnit.SECONDS);
  assertInstanceOf(MembershipEvent.class,eventObject);
  assertEquals(MembershipEvent.MEMBER_ADDED,((MembershipEvent)eventObject).getEventType());
}
