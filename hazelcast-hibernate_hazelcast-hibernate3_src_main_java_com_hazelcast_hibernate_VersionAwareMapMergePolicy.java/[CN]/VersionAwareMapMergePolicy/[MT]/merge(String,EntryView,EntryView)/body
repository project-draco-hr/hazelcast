{
  final Object existingValue=existingEntry != null ? existingEntry.getValue() : null;
  final Object mergingValue=mergingEntry.getValue();
  if (existingValue != null && existingValue instanceof CacheEntry && mergingValue != null && mergingValue instanceof CacheEntry) {
    final CacheEntry existingCacheEntry=(CacheEntry)existingValue;
    final CacheEntry mergingCacheEntry=(CacheEntry)mergingValue;
    final Object mergingVersionObject=mergingCacheEntry.getVersion();
    final Object existingVersionObject=existingCacheEntry.getVersion();
    if (mergingVersionObject != null && existingVersionObject != null && mergingVersionObject instanceof Comparable && existingVersionObject instanceof Comparable) {
      final Comparable mergingVersion=(Comparable)mergingVersionObject;
      final Comparable existingVersion=(Comparable)existingVersionObject;
      if (mergingVersion.compareTo(existingVersion) > 0) {
        return mergingValue;
      }
 else {
        return existingValue;
      }
    }
  }
  return mergingValue;
}
