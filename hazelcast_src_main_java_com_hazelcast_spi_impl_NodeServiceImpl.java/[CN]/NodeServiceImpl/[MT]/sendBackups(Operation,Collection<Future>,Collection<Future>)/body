{
  final BackupAwareOperation backupAwareOp=(BackupAwareOperation)op;
  final int maxBackups=getClusterService().getSize() - 1;
  final int syncBackupCount=backupAwareOp.getSyncBackupCount() > 0 ? Math.min(maxBackups,backupAwareOp.getSyncBackupCount()) : 0;
  final int asyncBackupCount=(backupAwareOp.getAsyncBackupCount() > 0 && maxBackups > syncBackupCount) ? Math.min(maxBackups - syncBackupCount,backupAwareOp.getAsyncBackupCount()) : 0;
  if (syncBackupCount + asyncBackupCount > 0) {
    Operation backupResponse=null;
    final Operation backupOp=backupAwareOp.getBackupOperation();
    if (backupOp == null) {
      throw new NullPointerException();
    }
    final String serviceName=op.getServiceName();
    final int partitionId=op.getPartitionId();
    final PartitionInfo partitionInfo=getPartitionInfo(partitionId);
    for (int replicaIndex=1; replicaIndex <= syncBackupCount; replicaIndex++) {
      final Address target=partitionInfo.getReplicaAddress(replicaIndex);
      if (target != null) {
        if (target.equals(getThisAddress())) {
          throw new IllegalStateException("Normally shouldn't happen!!");
        }
 else {
          if (op.returnsResponse() && target.equals(op.getCaller())) {
            backupOp.setServiceName(serviceName).setReplicaIndex(replicaIndex).setPartitionId(partitionId);
            backupResponse=backupOp;
          }
 else {
            syncBackups.add(createInvocationBuilder(serviceName,backupOp,partitionId).setReplicaIndex(replicaIndex).build().invoke());
          }
        }
      }
    }
    for (int replicaIndex=syncBackupCount + 1; replicaIndex <= asyncBackupCount; replicaIndex++) {
      final Address target=partitionInfo.getReplicaAddress(replicaIndex);
      if (target != null) {
        if (target.equals(getThisAddress())) {
          throw new IllegalStateException("Normally shouldn't happen!!");
        }
 else {
          asyncBackups.add(createInvocationBuilder(serviceName,backupOp,partitionId).setReplicaIndex(replicaIndex).build().invoke());
        }
      }
    }
    return op.returnsResponse() ? (backupResponse == null ? op.getResponse() : new MultiResponse(backupResponse,op.getResponse())) : null;
  }
 else {
    return op.returnsResponse() ? op.getResponse() : null;
  }
}
