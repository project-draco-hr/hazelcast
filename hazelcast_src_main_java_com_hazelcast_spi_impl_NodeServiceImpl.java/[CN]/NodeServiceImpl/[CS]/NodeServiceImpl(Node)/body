{
  this.node=node;
  logger=node.getLogger(NodeService.class.getName());
  final ClassLoader classLoader=node.getConfig().getClassLoader();
  executorService=new ThreadPoolExecutor(3,Integer.MAX_VALUE,60L,TimeUnit.SECONDS,new SynchronousQueue(),new ExecutorThreadFactory(node.threadGroup,node.hazelcastInstance,node.getThreadPoolNamePrefix("cached"),classLoader));
  eventExecutorService=Executors.newSingleThreadExecutor(new ExecutorThreadFactory(node.threadGroup,node.hazelcastInstance,node.getThreadPoolNamePrefix("event"),node.getConfig().getClassLoader()));
  scheduledExecutorService=Executors.newScheduledThreadPool(2,new ExecutorThreadFactory(node.threadGroup,node.hazelcastInstance,node.getThreadPoolNamePrefix("scheduled"),classLoader));
  partitionThreadGroup=new ThreadGroup(node.threadGroup,"partitionThreads");
  workers=new Workers(partitionThreadGroup,"workers",2);
  partitionCount=node.groupProperties.PARTITION_COUNT.getInteger();
  serviceManager=new ServiceManager(this);
}
