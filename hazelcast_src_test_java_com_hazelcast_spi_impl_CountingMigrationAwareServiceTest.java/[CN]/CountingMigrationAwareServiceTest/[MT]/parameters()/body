{
  PartitionMigrationEvent promotionEvent=mock(PartitionMigrationEvent.class);
  when(promotionEvent.getNewReplicaIndex()).thenReturn(PRIMARY_REPLICA_INDEX);
  when(promotionEvent.getCurrentReplicaIndex()).thenReturn(1);
  when(promotionEvent.toString()).thenReturn("1 > 0");
  PartitionMigrationEvent demotionEvent=mock(PartitionMigrationEvent.class);
  when(demotionEvent.getNewReplicaIndex()).thenReturn(1);
  when(demotionEvent.getCurrentReplicaIndex()).thenReturn(PRIMARY_REPLICA_INDEX);
  when(demotionEvent.toString()).thenReturn("0 > 1");
  PartitionMigrationEvent backupsEvent=mock(PartitionMigrationEvent.class);
  when(backupsEvent.getNewReplicaIndex()).thenReturn(1);
  when(backupsEvent.getCurrentReplicaIndex()).thenReturn(2);
  when(backupsEvent.toString()).thenReturn("2 > 1");
  return Arrays.asList(new Object[]{new Object[]{new NoOpMigrationAwareService(),promotionEvent},new Object[]{new NoOpMigrationAwareService(),demotionEvent},new Object[]{new NoOpMigrationAwareService(),backupsEvent},new Object[]{new ExceptionThrowingMigrationAwareService(),promotionEvent},new Object[]{new ExceptionThrowingMigrationAwareService(),demotionEvent},new Object[]{new ExceptionThrowingMigrationAwareService(),backupsEvent}});
}
