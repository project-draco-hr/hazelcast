{
  ConcurrentLinkedQueue priorityQueue=this.priorityQueue;
  for (; ; ) {
    Object priorityItem=priorityQueue.poll();
    if (priorityItem != null) {
      return priorityItem;
    }
    if (pendingNormalItem != null) {
      Object tmp=pendingNormalItem;
      pendingNormalItem=null;
      return tmp;
    }
    Object normalItem=normalQueue.take();
    if (normalItem == TRIGGER_TASK) {
      continue;
    }
    priorityItem=priorityQueue.poll();
    if (priorityItem != null) {
      pendingNormalItem=normalItem;
      return priorityItem;
    }
    return normalItem;
  }
}
