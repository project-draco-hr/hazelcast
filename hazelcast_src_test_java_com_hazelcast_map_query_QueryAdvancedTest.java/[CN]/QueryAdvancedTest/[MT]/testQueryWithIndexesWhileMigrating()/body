{
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(4);
  HazelcastInstance h1=nodeFactory.newHazelcastInstance();
  IMap imap=h1.getMap("employees");
  imap.addIndex("name",false);
  imap.addIndex("age",true);
  imap.addIndex("active",false);
  for (int i=0; i < 500; i++) {
    Map temp=new HashMap(100);
    for (int j=0; j < 100; j++) {
      String key=String.valueOf((i * 100000) + j);
      temp.put(key,new Employee("name" + key,i % 60,((i & 1) == 1),(double)i));
    }
    imap.putAll(temp);
  }
  assertEquals(50000,imap.size());
  Set<Map.Entry> entries=imap.entrySet(new SqlPredicate("active=true and age>44"));
  assertEquals(6400,entries.size());
  HazelcastInstance h2=nodeFactory.newHazelcastInstance();
  HazelcastInstance h3=nodeFactory.newHazelcastInstance();
  HazelcastInstance h4=nodeFactory.newHazelcastInstance();
  long startNow=Clock.currentTimeMillis();
  while ((Clock.currentTimeMillis() - startNow) < 10000) {
    entries=imap.entrySet(new SqlPredicate("active=true and age>44"));
    assertEquals(6400,entries.size());
  }
}
