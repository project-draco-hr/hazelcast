{
  Config cfg=new Config();
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(4);
  final HazelcastInstance h1=nodeFactory.newHazelcastInstance(cfg);
  IMap imap=h1.getMap("employees");
  imap.addIndex("name",false);
  imap.addIndex("age",true);
  imap.addIndex("active",false);
  int size=500;
  for (int i=0; i < size; i++) {
    imap.put(String.valueOf(i),new Employee("joe" + i,i % 60,((i & 1) == 1),(double)i));
  }
  HazelcastInstance h2=nodeFactory.newHazelcastInstance(cfg);
  HazelcastInstance h3=nodeFactory.newHazelcastInstance(cfg);
  HazelcastInstance h4=nodeFactory.newHazelcastInstance(cfg);
  final IMap employees=h1.getMap("employees");
  assertTrueAllTheTime(new AssertTask(){
    @Override public void run() throws Exception {
      Collection<Employee> values=employees.values(new SqlPredicate("active and name LIKE 'joe15%'"));
      for (      Employee employee : values) {
        assertTrue(employee.isActive());
      }
      assertEquals(6,values.size());
    }
  }
,3);
}
