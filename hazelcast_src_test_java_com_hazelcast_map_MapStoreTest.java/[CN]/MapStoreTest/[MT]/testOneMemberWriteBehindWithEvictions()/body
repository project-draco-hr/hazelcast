{
  TestEventBasedMapStore testMapStore=new TestEventBasedMapStore();
  Config config=newConfig(testMapStore,2);
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(3);
  HazelcastInstance h1=nodeFactory.newHazelcastInstance(config);
  IMap map=h1.getMap("default");
  assertEquals(TestEventBasedMapStore.STORE_EVENTS.LOAD_ALL_KEYS,testMapStore.waitForEvent(20));
  for (int i=0; i < 100; i++) {
    map.put(i,"value" + i);
    assertEquals(TestEventBasedMapStore.STORE_EVENTS.LOAD,testMapStore.waitForEvent(10));
  }
  assertEquals(TestEventBasedMapStore.STORE_EVENTS.STORE_ALL,testMapStore.waitForEvent(20));
  assertEquals(100,testMapStore.getStore().size());
  for (int i=0; i < 100; i++) {
    map.evict(i);
  }
  assertEquals(null,testMapStore.waitForEvent(10));
  assertEquals(100,testMapStore.getStore().size());
  for (int i=0; i < 100; i++) {
    map.put(i,"value" + i);
    assertEquals(TestEventBasedMapStore.STORE_EVENTS.LOAD,testMapStore.waitForEvent(10));
  }
  for (int i=0; i < 100; i++) {
    map.evict(i);
    assertEquals(TestEventBasedMapStore.STORE_EVENTS.STORE,testMapStore.waitForEvent(3));
  }
  assertEquals(null,testMapStore.waitForEvent(2));
  assertEquals(100,testMapStore.getStore().size());
  assertEquals(0,map.size());
  for (int i=0; i < 100; i++) {
    map.put(i,"value" + i);
    assertEquals(TestEventBasedMapStore.STORE_EVENTS.LOAD,testMapStore.waitForEvent(10));
  }
  for (int i=0; i < 100; i++) {
    map.remove(i);
  }
  assertEquals(TestEventBasedMapStore.STORE_EVENTS.STORE_ALL,testMapStore.waitForEvent(10));
  assertEquals(TestEventBasedMapStore.STORE_EVENTS.DELETE_ALL,testMapStore.waitForEvent(10));
  assertEquals(0,testMapStore.getStore().size());
  assertEquals(0,map.size());
  assertEquals(null,testMapStore.waitForEvent(10));
}
