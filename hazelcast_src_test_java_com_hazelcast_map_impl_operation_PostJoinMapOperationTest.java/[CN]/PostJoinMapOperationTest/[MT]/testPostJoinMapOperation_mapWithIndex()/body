{
  TestHazelcastInstanceFactory hzFactory=createHazelcastInstanceFactory(2);
  HazelcastInstance hz1=hzFactory.newHazelcastInstance();
  IMap<String,Person> map=hz1.getMap("map");
  map.put("foo",new Person("foo",32));
  map.put("bar",new Person("bar",70));
  map.addIndex("age",true);
  HazelcastInstance hz2=hzFactory.newHazelcastInstance();
  waitAllForSafeState(hz1,hz2);
  hzFactory.terminate(hz1);
  waitAllForSafeState(hz1,hz2);
  IMap<String,Person> mapOnNode2=hz2.getMap("map");
  MapService mapService=getNodeEngineImpl(hz2).getService(MapService.SERVICE_NAME);
  while (true) {
    Thread.sleep(100);
    if (mapService.getOwnerMigrationsInFlight() == 0) {
      break;
    }
  }
  final AtomicInteger invocationCounter=new AtomicInteger(0);
  Collection<Person> personsWithAgePredicate=mapOnNode2.values(new AgePredicate(invocationCounter));
  assertEquals("isIndexed should have located an index",1,invocationCounter.get());
  assertEquals("index should return 1 match",1,personsWithAgePredicate.size());
  hzFactory.terminate(hz2);
}
