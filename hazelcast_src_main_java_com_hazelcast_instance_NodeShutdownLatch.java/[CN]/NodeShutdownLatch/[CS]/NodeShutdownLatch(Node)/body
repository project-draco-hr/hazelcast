{
  localMember=node.localMember;
  Collection<MemberImpl> memberList=node.clusterService.getMemberImpls();
  registrations=new HashMap<String,HazelcastInstanceImpl>(3);
  Set<MemberImpl> members=new HashSet<MemberImpl>(memberList);
  members.remove(localMember);
  if (!members.isEmpty()) {
    final Map<MemberImpl,HazelcastInstanceImpl> map=HazelcastInstanceFactory.getInstanceImplMap();
    for (    Map.Entry<MemberImpl,HazelcastInstanceImpl> entry : map.entrySet()) {
      final MemberImpl member=entry.getKey();
      if (members.contains(member)) {
        HazelcastInstanceImpl instance=entry.getValue();
        if (instance.node.isActive()) {
          try {
            ClusterServiceImpl clusterService=instance.node.clusterService;
            final String id=clusterService.addMembershipListener(new ShutdownMembershipListener());
            registrations.put(id,instance);
          }
 catch (          Throwable ignored) {
          }
        }
      }
    }
  }
  latch=new Semaphore(0);
}
