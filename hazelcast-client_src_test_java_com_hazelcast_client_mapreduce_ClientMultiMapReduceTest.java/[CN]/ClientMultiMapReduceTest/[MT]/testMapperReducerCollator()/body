{
  Config config=buildConfig();
  HazelcastInstance h1=hazelcastFactory.newHazelcastInstance(config);
  HazelcastInstance h2=hazelcastFactory.newHazelcastInstance(config);
  HazelcastInstance h3=hazelcastFactory.newHazelcastInstance(config);
  assertClusterSizeEventually(3,h1);
  assertClusterSizeEventually(3,h2);
  assertClusterSizeEventually(3,h3);
  HazelcastInstance client=hazelcastFactory.newHazelcastClient();
  MultiMap<Integer,Integer> m1=client.getMultiMap(randomString());
  for (int i=0; i < 100; i++) {
    m1.put(i / 2,i);
  }
  JobTracker tracker=client.getJobTracker("default");
  Job<Integer,Integer> job=tracker.newJob(integerKvSource(m1));
  ICompletableFuture<Integer> future=job.mapper(new GroupingTestMapper()).reducer(new TestReducerFactory()).submit(new TestCollator());
  int result=future.get();
  int expectedResult=0;
  for (int i=0; i < 100; i++) {
    expectedResult+=i;
  }
  for (int i=0; i < 4; i++) {
    assertEquals(expectedResult,result);
  }
}
