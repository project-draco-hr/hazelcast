{
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  HazelcastInstance instance1=factory.newHazelcastInstance(getConfig());
  HazelcastInstance instance2=factory.newHazelcastInstance(getConfig());
  IMap<Object,Object> map=instance1.getMap("dummy-wan-entryprocessor-test-map");
  for (int i=0; i < 10; i++) {
    map.put(i,i);
  }
  DummyWanReplication impl1=getWanReplicationImpl(instance1);
  DummyWanReplication impl2=getWanReplicationImpl(instance2);
  assertEquals(10,impl1.eventQueue.size() + impl2.eventQueue.size());
  impl1.eventQueue.clear();
  impl2.eventQueue.clear();
  Set keySet=new HashSet();
  for (int i=0; i < 10; i++) {
    keySet.add(getSerializationService(instance1).toData(i));
  }
  OperationFactory operationFactory=getOperationProvider(map).createMultipleEntryOperationFactory(map.getName(),keySet,new UpdatingEntryProcessor());
  InternalOperationService operationService=getOperationService(instance1);
  operationService.invokeOnAllPartitions(MapService.SERVICE_NAME,operationFactory);
  assertEquals(10,impl1.eventQueue.size() + impl2.eventQueue.size());
  OperationFactory deletingOperationFactory=getOperationProvider(map).createMultipleEntryOperationFactory(map.getName(),keySet,new DeletingEntryProcessor());
  operationService.invokeOnAllPartitions(MapService.SERVICE_NAME,deletingOperationFactory);
  assertEquals(20,impl1.eventQueue.size() + impl2.eventQueue.size());
}
