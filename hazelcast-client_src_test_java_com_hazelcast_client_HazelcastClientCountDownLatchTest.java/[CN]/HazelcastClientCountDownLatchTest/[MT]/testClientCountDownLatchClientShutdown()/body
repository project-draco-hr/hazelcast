{
  HazelcastInstance instance=Hazelcast.newHazelcastInstance(null);
  HazelcastClient client1=newHazelcastClient(instance);
  HazelcastClient client2=newHazelcastClient(instance);
  final ICountDownLatch cdl1=client1.getCountDownLatch("test");
  final ICountDownLatch cdl2=client2.getCountDownLatch("test");
  final Member c1Member=clientToMember(client1);
  final AtomicInteger result=new AtomicInteger();
  cdl1.setCount(1);
  assertEquals(1,((CountDownLatchClientProxy)cdl2).getCount());
  assertEquals(c1Member,((CountDownLatchClientProxy)cdl2).getOwner());
  Thread thread=new Thread(){
    @Override public void run(){
      try {
        cdl1.await(1000,TimeUnit.MILLISECONDS);
      }
 catch (      IllegalStateException e) {
        result.incrementAndGet();
        return;
      }
catch (      Throwable e) {
        e.printStackTrace();
      }
      fail();
    }
  }
;
  thread.start();
  Thread.sleep(20);
  client1.shutdown();
  thread.join();
  assertEquals(1,result.get());
}
