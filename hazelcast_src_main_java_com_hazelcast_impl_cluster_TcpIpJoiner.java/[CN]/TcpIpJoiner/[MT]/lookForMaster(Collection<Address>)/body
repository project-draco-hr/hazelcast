{
  int tryCount=0;
  claimingMaster=false;
  while (!node.joined() && tryCount++ < 20 && (node.getMasterAddress() == null)) {
    connectAndSendJoinRequest(colPossibleAddresses);
    Thread.sleep(1000L);
  }
  int requestCount=0;
  colPossibleAddresses.removeAll(node.getFailedConnections());
  if (colPossibleAddresses.size() == 0) {
    node.setAsMaster();
    logger.log(Level.FINEST,node.getThisAddress() + " Setting myself as master! group " + node.getConfig().getGroupConfig().getName()+ " no possible addresses without failed connection");
    return;
  }
  logger.log(Level.FINEST,node.getThisAddress() + " joining to master " + node.getMasterAddress()+ ", group "+ node.getConfig().getGroupConfig().getName());
  while (node.isActive() && !node.joined()) {
    Thread.sleep(1000L);
    final Address master=node.getMasterAddress();
    if (master != null) {
      node.clusterService.sendJoinRequest(master,true);
      if (requestCount++ > node.getGroupProperties().MAX_WAIT_SECONDS_BEFORE_JOIN.getInteger() + 10) {
        logger.log(Level.WARNING,"Couldn't join to the master : " + master);
        return;
      }
    }
 else {
      logger.log(Level.FINEST,node.getThisAddress() + " couldn't find a master! but there was connections available: " + colPossibleAddresses);
      return;
    }
  }
}
