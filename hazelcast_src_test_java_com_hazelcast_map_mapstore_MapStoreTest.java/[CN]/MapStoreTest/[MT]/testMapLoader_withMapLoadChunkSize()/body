{
  final int chunkSize=5;
  final int numberOfEntriesToLoad=100;
  final String mapName=randomString();
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);
  ChunkedLoader chunkedLoader=new ChunkedLoader(numberOfEntriesToLoad,false);
  Config config=createChunkedMapLoaderConfig(mapName,chunkSize,chunkedLoader);
  HazelcastInstance node=nodeFactory.newHazelcastInstance(config);
  IMap map=node.getMap(mapName);
  final CountDownLatch latch=new CountDownLatch(numberOfEntriesToLoad);
  map.addEntryListener(new EntryAdapter(){
    @Override public void entryAdded(    EntryEvent event){
      latch.countDown();
    }
  }
,true);
  for (int i=0; i < numberOfEntriesToLoad; i++) {
    map.get(i);
  }
  assertOpenEventually(latch,240);
  final int expectedChunkCount=numberOfEntriesToLoad / chunkSize;
  final int actualChunkCount=chunkedLoader.numberOfChunks.get();
  assertEquals(expectedChunkCount,actualChunkCount);
  assertEquals(numberOfEntriesToLoad,map.size());
}
