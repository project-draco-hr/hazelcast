{
  Indexes indexes=new Indexes(ss);
  indexes.addOrGetIndex("name",false);
  indexes.addOrGetIndex("age",true);
  indexes.addOrGetIndex("salary",true);
  for (int i=0; i < 20000; i++) {
    Employee employee=new Employee(i + "Name",i % 80,(i % 2 == 0),100 + (i % 1000));
    indexes.saveEntryIndex(new QueryEntry(ss,toData(i),employee),null);
  }
  int count=1000;
  Set<String> ages=new HashSet<String>(count);
  for (int i=0; i < count; i++) {
    ages.add(String.valueOf(i));
  }
  final EntryObject entryObject=new PredicateBuilder().getEntryObject();
  final PredicateBuilder predicate=entryObject.get("name").equal("140Name").and(entryObject.get("age").in(ages.toArray(new String[0])));
  long total=Runtime.getRuntime().totalMemory();
  long free=Runtime.getRuntime().freeMemory();
  long start=Clock.currentTimeMillis();
  for (int i=0; i < 10000; i++) {
    Set<QueryableEntry> results=indexes.query(predicate);
    assertEquals(1,results.size());
  }
}
