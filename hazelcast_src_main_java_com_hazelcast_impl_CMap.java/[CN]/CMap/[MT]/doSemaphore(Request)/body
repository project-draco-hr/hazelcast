{
  Record record=getRecord(request);
  if (record == null) {
    SemaphoreConfig semaphoreConfig=node.getConfig().getSemaphoreConfig(request.name);
    record=createNewRecord(request.key,null);
    record.setValue(new DistributedSemaphore(semaphoreConfig.getSize()));
    mapRecords.put(request.key,record);
  }
  Integer total=(Integer)toObject(request.value);
  DistributedSemaphore semaphore=(DistributedSemaphore)record.getValue();
  Integer available=semaphore.getPermits();
  if (request.operation == SEMAPHORE_ACQUIRE) {
    while (total > 0) {
      available=semaphore.getPermits();
      while (available <= 0) {
        available=semaphore.getPermits();
        if (total > 0 && available == 0) {
          request.response=total;
          return;
        }
      }
      if (semaphore.acquire(request.lockAddress)) {
        total--;
        request.response=0;
      }
 else {
      }
    }
  }
 else   if (request.operation == SEMAPHORE_RELEASE) {
    while (total > 0) {
      if (semaphore.release(request.lockAddress)) {
        available=semaphore.getPermits();
        total--;
      }
    }
    request.response=available;
  }
 else   if (request.operation == SEMAPHORE_AVAILABLE_PERIMITS) {
    request.response=available;
  }
 else   if (request.operation == SEMAPHORE_DRAIN_PERIMITS) {
    while (available > 0) {
      if (semaphore.acquire(request.lockAddress)) {
        available=semaphore.getPermits();
      }
    }
    request.response=Boolean.TRUE;
  }
 else   if (request.operation == SEMAPHORE_REDUCE_PERIMITS) {
    semaphore.reducePermits(total);
    request.response=Boolean.TRUE;
  }
}
