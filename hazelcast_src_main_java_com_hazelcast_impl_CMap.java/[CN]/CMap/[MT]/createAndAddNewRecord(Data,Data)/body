{
  if (key == null || key.size() == 0) {
    throw new HazelcastException("Cannot create record from a 0 size key: " + key);
  }
  final Data actualValue=isMultiMap() ? null : value;
  final int blockId=concurrentMapManager.getPartitionId(key);
  final Record record=concurrentMapManager.recordFactory.createNewRecord(this,blockId,key,actualValue,ttl,maxIdle,concurrentMapManager.newRecordId());
  final Record oldRecord=mapRecords.put(key,record);
  if (oldRecord != null && oldRecord.getLock() != null) {
    final List<ScheduledAction> scheduledActions=oldRecord.getScheduledActions();
    if (scheduledActions != null && !scheduledActions.isEmpty()) {
      logger.log(Level.WARNING,"Replacing a record which is locked and has scheduled actions! " + oldRecord + " -> "+ oldRecord.getLock());
      if (logger.isLoggable(Level.FINEST)) {
        logger.log(Level.FINEST,"Stack trace:",new Throwable());
      }
    }
  }
  return record;
}
