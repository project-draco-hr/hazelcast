{
  Record record=mapRecords.get(req.key);
  if (record == null) {
    req.clearForResponse();
    return;
  }
  if (req.txnId != -1) {
    concurrentMapManager.unlock(record);
  }
  if (!record.isValid()) {
    if (record.isEvictable()) {
      scheduleForEviction(record);
      return;
    }
  }
  if (req.value != null) {
    if (record.getValue() != null) {
      if (!record.getValue().equals(req.value)) {
        return;
      }
    }
  }
  Data oldValue=record.getValue();
  if (oldValue == null && record.getMultiValues() != null && record.getMultiValues().size() > 0) {
    Values values=new Values(record.getMultiValues());
    oldValue=toData(values);
    record.setMultiValues(null);
  }
  if (oldValue != null) {
    if (mapNearCache != null && mapNearCache.shouldInvalidateOnChange()) {
      sendInvalidation(record);
    }
    concurrentMapManager.fireMapEvent(mapListeners,getName(),EntryEvent.TYPE_REMOVED,record.getKey(),oldValue,record.getMapListeners());
    record.incrementVersion();
    record.setValue(null);
    record.setMultiValues(null);
  }
  if (req.txnId != -1) {
    concurrentMapManager.unlock(record);
  }
  if (record.isRemovable()) {
    markAsRemoved(record);
  }
  req.clearForResponse();
  req.version=record.getVersion();
  req.longValue=record.getCopyCount();
  if (oldValue != null) {
    req.key=null;
  }
  req.response=oldValue;
}
