{
  QueryResultSet result=new QueryResultSet(null,iterationType,true);
  try {
    Predicate predicate=getPredicate();
    Collection<Member> members=getClientEngine().getClusterService().getMembers();
    List<Future> futures=new ArrayList<Future>();
    createInvocations(members,futures,predicate);
    int partitionCount=getClientEngine().getPartitionService().getPartitionCount();
    Set<Integer> finishedPartitions=new HashSet<Integer>(partitionCount);
    collectResults(result,futures,finishedPartitions);
    if (hasMissingPartitions(finishedPartitions,partitionCount)) {
      List<Integer> missingList=findMissingPartitions(finishedPartitions,partitionCount);
      List<Future> missingFutures=new ArrayList<Future>(missingList.size());
      createInvocationsForMissingPartitions(missingList,missingFutures,predicate);
      collectResultsFromMissingPartitions(result,missingFutures);
    }
  }
 catch (  Throwable t) {
    throw ExceptionUtil.rethrow(t);
  }
  getEndpoint().sendResponse(result,getCallId());
}
