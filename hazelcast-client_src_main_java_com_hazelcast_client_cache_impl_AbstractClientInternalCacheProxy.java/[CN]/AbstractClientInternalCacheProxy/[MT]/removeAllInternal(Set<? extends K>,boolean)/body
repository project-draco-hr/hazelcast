{
  final Set<Data> keysData;
  if (keys != null) {
    keysData=new HashSet<Data>();
    for (    K key : keys) {
      keysData.add(toData(key));
    }
  }
 else {
    keysData=null;
  }
  final int partitionCount=clientContext.getPartitionService().getPartitionCount();
  final Integer completionId=registerCompletionLatch(partitionCount);
  InMemoryFormat inMemoryFormat=cacheConfig.getInMemoryFormat();
  CacheClearRequest request=new CacheClearRequest(nameWithPrefix,keysData,isRemoveAll,completionId,inMemoryFormat);
  try {
    final Map<Integer,Object> results=invoke(request);
    int completionCount=0;
    for (    Object result : results.values()) {
      if (result != null && result instanceof CacheClearResponse) {
        final Object response=((CacheClearResponse)result).getResponse();
        if (response instanceof Boolean) {
          completionCount++;
        }
        if (response instanceof Throwable) {
          throw (Throwable)response;
        }
      }
    }
    waitCompletionLatch(completionId,partitionCount - completionCount);
  }
 catch (  Throwable t) {
    deregisterCompletionLatch(completionId);
    throw ExceptionUtil.rethrowAllowedTypeFirst(t,CacheException.class);
  }
}
