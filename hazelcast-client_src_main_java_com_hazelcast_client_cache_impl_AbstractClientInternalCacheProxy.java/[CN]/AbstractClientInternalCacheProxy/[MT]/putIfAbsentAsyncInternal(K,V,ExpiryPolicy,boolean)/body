{
  ensureOpen();
  validateNotNull(key,value);
  CacheProxyUtil.validateConfiguredTypes(cacheConfig,key,value);
  final Data keyData=toData(key);
  final Data valueData=toData(value);
  CachePutIfAbsentRequest request=new CachePutIfAbsentRequest(nameWithPrefix,keyData,valueData,expiryPolicy);
  ICompletableFuture<Boolean> future;
  try {
    future=invoke(request,keyData,withCompletionEvent);
    if (cacheOnUpdate) {
      storeInNearCache(keyData,valueData,value);
    }
 else {
      invalidateNearCache(keyData);
    }
  }
 catch (  Exception e) {
    throw ExceptionUtil.rethrow(e);
  }
  return new DelegatingFuture<Boolean>(future,clientContext.getSerializationService());
}
