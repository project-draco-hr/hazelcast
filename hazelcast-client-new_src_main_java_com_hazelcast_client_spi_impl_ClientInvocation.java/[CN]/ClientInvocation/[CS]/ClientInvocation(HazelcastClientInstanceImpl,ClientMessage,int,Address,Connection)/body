{
  this.lifecycleService=client.getLifecycleService();
  this.invocationService=client.getInvocationService();
  this.executionService=client.getClientExecutionService();
  this.clientMessage=clientMessage;
  this.partitionId=partitionId;
  this.address=address;
  this.connection=connection;
  final ClientProperties clientProperties=client.getClientProperties();
  int waitTime=clientProperties.getInvocationTimeoutSeconds().getInteger();
  long retryTimeoutInSeconds=waitTime > 0 ? waitTime : Integer.parseInt(ClientProperties.PROP_INVOCATION_TIMEOUT_SECONDS_DEFAULT);
  clientInvocationFuture=new ClientInvocationFuture(this,client,clientMessage);
  this.retryTimeoutPointInMillis=System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(retryTimeoutInSeconds);
  int interval=clientProperties.getHeartbeatInterval().getInteger();
  this.heartBeatInterval=interval > 0 ? interval : Integer.parseInt(PROP_HEARTBEAT_INTERVAL_DEFAULT);
}
