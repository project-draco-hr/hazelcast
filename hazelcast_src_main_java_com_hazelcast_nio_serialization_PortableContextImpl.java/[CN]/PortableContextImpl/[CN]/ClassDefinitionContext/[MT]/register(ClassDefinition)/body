{
  if (cd == null) {
    return null;
  }
  if (cd instanceof ClassDefinitionImpl) {
    final ClassDefinitionImpl cdImpl=(ClassDefinitionImpl)cd;
    if (cdImpl.getVersion() < 0) {
      cdImpl.version=getVersion();
    }
    if (cdImpl.getBinary() == null) {
      final BufferObjectDataOutput out=serializationService.pop();
      try {
        cdImpl.writeData(out);
        final byte[] binary=out.toByteArray();
        out.clear();
        compress(binary,out);
        cdImpl.setBinary(out.toByteArray());
      }
 catch (      IOException e) {
        throw new HazelcastSerializationException(e);
      }
 finally {
        serializationService.push(out);
      }
    }
    registerNestedDefinitions(cdImpl);
  }
  final long versionedClassId=combineToLong(cd.getClassId(),cd.getVersion());
  final ClassDefinition currentCd=versionedDefinitions.putIfAbsent(versionedClassId,cd);
  if (currentCd == null) {
    return cd;
  }
  if (currentCd instanceof ClassDefinitionImpl) {
    return currentCd;
  }
  versionedDefinitions.put(versionedClassId,cd);
  return cd;
}
