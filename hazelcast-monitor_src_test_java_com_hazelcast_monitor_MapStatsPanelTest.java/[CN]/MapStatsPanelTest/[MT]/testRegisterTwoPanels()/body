{
  AsyncCallback<ChangeEvent> mockCallBack=mock(AsyncCallback.class);
  String name="myMap";
  HazelcastServiceAsync mockHazelcastServiceAsync=mock(HazelcastServiceAsync.class);
  ServicesFactory servicesFactory=mock(ServicesFactory.class);
  when(servicesFactory.getHazelcastService()).thenReturn(mockHazelcastServiceAsync);
  MonitoringPanel monitoringPanel1=new MapTimesPanel(name,mockCallBack,servicesFactory);
  HazelcastMonitor hazelcastMonitor=mock(HazelcastMonitor.class);
  ClusterView clusterView=new ClusterView();
  clusterView.setId(1);
  ClusterWidgets clusterWidgets=new ClusterWidgets(hazelcastMonitor,clusterView);
  monitoringPanel1.register(clusterWidgets);
  List<MonitoringPanel> list=clusterWidgets.getPanels().get(ChangeEventType.MAP_STATISTICS);
  assertTrue(list.size() == 1);
  assertTrue(list.contains(monitoringPanel1));
  verify(mockHazelcastServiceAsync,times(1)).registerEvent(ChangeEventType.MAP_STATISTICS,1,name,mockCallBack);
  MonitoringPanel monitoringPanel2=new MapTimesPanel(name,mockCallBack,servicesFactory);
  monitoringPanel2.register(clusterWidgets);
  assertTrue(list.size() == 2);
  assertTrue(list.contains(monitoringPanel2));
  verify(mockHazelcastServiceAsync,times(1)).registerEvent(ChangeEventType.MAP_STATISTICS,1,name,mockCallBack);
}
