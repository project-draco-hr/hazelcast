{
  this.activeMigrations=activeMigrations != null ? activeMigrations : Collections.<MigrationInfo>emptySet();
  lockInfos=new LinkedList<LockInfo>();
  connectionInfos=new LinkedList<ConnectionInfo>();
  Map<Address,Integer> addressIndexes=new HashMap<Address,Integer>(members.size());
  int memberIndex=0;
  for (  Member member : members) {
    MemberImpl memberImpl=(MemberImpl)member;
    MemberInfo memberInfo=new MemberInfo(memberImpl.getAddress(),member.getUuid(),member.getAttributes());
    addMemberInfo(memberInfo,addressIndexes,memberIndex);
    if (!member.localMember()) {
      Connection conn=connections.get(memberImpl.getAddress());
      ConnectionInfo connectionInfo;
      if (conn != null) {
        connectionInfo=new ConnectionInfo(memberIndex,conn.live(),conn.lastReadTime(),conn.lastWriteTime());
      }
 else {
        connectionInfo=new ConnectionInfo(memberIndex,false,0L,0L);
      }
      connectionInfos.add(connectionInfo);
    }
 else {
      localMemberIndex=memberIndex;
    }
    memberIndex++;
  }
  setPartitions(partitions,addressIndexes);
  setLocks(locks,addressIndexes,members);
}
