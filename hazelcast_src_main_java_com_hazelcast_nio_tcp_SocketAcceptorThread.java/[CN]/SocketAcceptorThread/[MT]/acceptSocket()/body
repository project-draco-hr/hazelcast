{
  SocketChannelWrapper socketChannelWrapper=null;
  try {
    final SocketChannel socketChannel=serverSocketChannel.accept();
    if (socketChannel != null) {
      socketChannelWrapper=connectionManager.wrapSocketChannel(socketChannel,false);
    }
  }
 catch (  Exception e) {
    exceptionCount.inc();
    if (e instanceof ClosedChannelException && !connectionManager.isLive()) {
      logger.finest("Terminating socket acceptor thread...",e);
    }
 else {
      logger.severe("Unexpected error while accepting connection! " + e.getClass().getName() + ": "+ e.getMessage());
      try {
        serverSocketChannel.close();
      }
 catch (      Exception ex) {
        logger.finest("Closing server socket failed",ex);
      }
      ioService.onFatalError(e);
    }
  }
  if (socketChannelWrapper != null) {
    final SocketChannelWrapper socketChannel=socketChannelWrapper;
    logger.info("Accepting socket connection from " + socketChannel.socket().getRemoteSocketAddress());
    if (connectionManager.isSocketInterceptorEnabled()) {
      configureAndAssignSocket(socketChannel);
    }
 else {
      ioService.executeAsync(new Runnable(){
        @Override public void run(){
          configureAndAssignSocket(socketChannel);
        }
      }
);
    }
  }
}
