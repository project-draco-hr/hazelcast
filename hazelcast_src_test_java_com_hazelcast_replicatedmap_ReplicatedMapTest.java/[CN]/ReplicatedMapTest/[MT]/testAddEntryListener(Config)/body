{
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);
  HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);
  HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);
  final ReplicatedMap<String,String> map1=instance1.getReplicatedMap("default");
  final ReplicatedMap<String,String> map2=instance2.getReplicatedMap("default");
  final int operations=100;
  WatchedOperationExecutor executor=new WatchedOperationExecutor();
  executor.execute(new Runnable(){
    @Override public void run(){
      for (int i=0; i < operations; i++) {
        map1.put("foo-" + i,"bar");
      }
    }
  }
,60,EntryEventType.ADDED,operations,0.75,map1,map2);
  SimpleEntryListener listener=new SimpleEntryListener(1,0);
  map2.addEntryListener(listener,"foo-18");
  executor.execute(new Runnable(){
    @Override public void run(){
      map1.put("foo-18","barUpdated");
    }
  }
,60,EntryEventType.UPDATED,map1,map2);
  assertOpenEventually(listener.addLatch);
  assertEquals("barUpdated",map2.get("foo-18"));
}
