{
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);
  HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);
  HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);
  final ReplicatedMap<String,String> map1=instance1.getReplicatedMap("default");
  final ReplicatedMap<String,String> map2=instance2.getReplicatedMap("default");
  final int partitionCount=getPartitionService(instance1).getPartitionCount();
  final Set<String> keys=generateRandomKeys(instance1,partitionCount);
  final SimpleEntry<String,String>[] testValues=buildTestValues(keys);
  int half=testValues.length / 2;
  for (int i=0; i < testValues.length; i++) {
    final ReplicatedMap<String,String> map=i < half ? map1 : map2;
    final SimpleEntry<String,String> entry=testValues[i];
    map.put(entry.getKey(),entry.getValue());
  }
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      assertEquals(keys.size(),map1.size());
      assertEquals(keys.size(),map2.size());
    }
  }
);
}
