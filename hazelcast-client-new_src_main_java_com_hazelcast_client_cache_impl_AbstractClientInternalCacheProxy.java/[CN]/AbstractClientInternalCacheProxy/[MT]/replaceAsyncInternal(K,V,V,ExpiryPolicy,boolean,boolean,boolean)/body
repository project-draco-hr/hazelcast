{
  ensureOpen();
  if (hasOldValue) {
    validateNotNull(key,oldValue,newValue);
    CacheProxyUtil.validateConfiguredTypes(cacheConfig,key,oldValue,newValue);
  }
 else {
    validateNotNull(key,newValue);
    CacheProxyUtil.validateConfiguredTypes(cacheConfig,key,newValue);
  }
  final Data keyData=toData(key);
  final Data oldValueData=oldValue != null ? toData(oldValue) : DefaultData.NULL_DATA;
  final Data newValueData=newValue != null ? toData(newValue) : DefaultData.NULL_DATA;
  final Data expiryPolicyData=expiryPolicy != null ? toData(expiryPolicy) : DefaultData.NULL_DATA;
  final int completionId=withCompletionEvent ? nextCompletionId() : -1;
  ClientMessage request;
  if (isGet) {
    request=CacheGetAndReplaceCodec.encodeRequest(nameWithPrefix,keyData,newValueData,expiryPolicyData);
  }
 else {
    request=CacheReplaceCodec.encodeRequest(nameWithPrefix,keyData,oldValueData,newValueData,expiryPolicyData);
  }
  ICompletableFuture future;
  try {
    future=invoke(request,keyData,completionId);
    invalidateNearCache(keyData);
  }
 catch (  Exception e) {
    throw ExceptionUtil.rethrow(e);
  }
  return future;
}
