{
  final boolean complete=message.readFrom(buffer);
  if (!complete) {
    return;
  }
  if (message.isFlagSet(BEGIN_AND_END_FLAGS)) {
    handleMessage(message);
    message=ClientMessage.create();
  }
 else {
    if (message.isFlagSet(BEGIN_FLAG)) {
      final BufferBuilder builder=builderBySessionIdMap.getOrDefault(message.getCorrelationId(),new Int2ObjectHashMap.Supplier<BufferBuilder>(){
        @Override public BufferBuilder get(){
          return new BufferBuilder();
        }
      }
);
      builder.reset().append(message.buffer(),0,message.getFrameLength());
    }
 else {
      final BufferBuilder builder=builderBySessionIdMap.get(message.getCorrelationId());
      if (null != builder && builder.limit() != 0) {
        builder.append(message.buffer(),message.getDataOffset(),message.getFrameLength() - message.getDataOffset());
        if (message.isFlagSet(END_FLAG)) {
          final int msgLength=builder.limit();
          ClientMessage cm=ClientMessage.createForDecode(ByteBuffer.wrap(builder.buffer().byteArray()),0);
          cm.setFrameLength(msgLength);
          handleMessage(cm);
          builder.reset().compact();
        }
      }
    }
  }
}
