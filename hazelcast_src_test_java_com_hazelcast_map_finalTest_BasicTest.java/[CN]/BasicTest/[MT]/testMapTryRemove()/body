{
  final IMap<Object,Object> map=getInstance().getMap("testMapTryRemove");
  map.put("key1","value1");
  map.lock("key1");
  final CountDownLatch latch1=new CountDownLatch(1);
  final CountDownLatch latch2=new CountDownLatch(1);
  final CountDownLatch latch3=new CountDownLatch(1);
  final AtomicReference firstObject=new AtomicReference();
  final AtomicReference secondObject=new AtomicReference();
  Thread thread=new Thread(new Runnable(){
    public void run(){
      try {
        firstObject.set(map.tryRemove("key1",1,TimeUnit.SECONDS));
        latch2.countDown();
        latch1.await();
        secondObject.set(map.tryRemove("key1",1,TimeUnit.SECONDS));
        latch3.countDown();
      }
 catch (      Exception e) {
        e.printStackTrace();
        fail(e.getMessage());
      }
    }
  }
);
  thread.start();
  latch2.await();
  map.unlock("key1");
  latch1.countDown();
  latch3.await();
  assertNull(firstObject.get());
  assertEquals("value1",secondObject.get());
  thread.join();
}
