{
  final List<PartitionLostEvent> failedPartitions=listener.getEvents();
  assertFalse(survivingPartitions.isEmpty());
  Map<Integer,Integer> memorizedPartitionFailures=new HashMap<Integer,Integer>();
  for (  PartitionLostEvent event : failedPartitions) {
    final int failedPartitionId=event.getPartitionId();
    final int lostReplicaIndex=event.getLostBackupCount();
    final int survivingReplicaIndex=survivingPartitions.get(failedPartitionId);
    final String message=log + ", PartitionId: " + failedPartitionId+ " LostReplicaIndex: "+ lostReplicaIndex+ " SurvivingReplicaIndex: "+ survivingReplicaIndex+ " Event Source: "+ event.getEventSource();
    assertTrue(message,survivingReplicaIndex > 0);
    assertTrue(message,lostReplicaIndex >= 0);
    assertTrue(message,lostReplicaIndex <= survivingReplicaIndex - 1);
    final Integer previouslyLostReplicaIndex=memorizedPartitionFailures.get(failedPartitionId);
    if (previouslyLostReplicaIndex != null) {
      assertTrue(message + " PreviouslyLostReplicaIndex: " + previouslyLostReplicaIndex,previouslyLostReplicaIndex < lostReplicaIndex);
    }
    memorizedPartitionFailures.put(failedPartitionId,lostReplicaIndex);
  }
}
