{
  List<HazelcastInstance> instances=getCreatedInstancesShuffledAfterWarmedUp();
  List<HazelcastInstance> survivingInstances=new ArrayList<HazelcastInstance>(instances);
  List<HazelcastInstance> terminatingInstances=survivingInstances.subList(0,numberOfNodesToCrash);
  survivingInstances=survivingInstances.subList(numberOfNodesToCrash,instances.size());
  if (withData) {
    populateMaps(survivingInstances.get(0));
  }
  final String log="Surviving: " + survivingInstances + " Terminating: "+ terminatingInstances;
  final EventCollectingPartitionLostListener listener=registerPartitionLostListener(survivingInstances.get(0));
  final Map<Integer,Integer> survivingPartitions=getMinReplicaIndicesByPartitionId(survivingInstances);
  final Map<Integer,List<Address>> partitionTables=TestPartitionUtils.getAllReplicaAddresses(survivingInstances);
  terminateInstances(terminatingInstances);
  waitAllForSafeStateAndDumpPartitionServiceOnFailure(survivingInstances,300);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      assertLostPartitions(log,listener,survivingPartitions,partitionTables);
    }
  }
);
}
