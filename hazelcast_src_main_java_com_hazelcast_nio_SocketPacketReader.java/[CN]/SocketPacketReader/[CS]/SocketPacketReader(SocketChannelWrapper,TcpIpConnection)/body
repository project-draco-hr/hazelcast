{
  this.connection=connection;
  this.ioService=connection.getConnectionManager().ioService;
  this.socketChannel=socketChannel;
  this.logger=ioService.getLogger(SocketPacketReader.class.getName());
  boolean symmetricEncryptionEnabled=CipherHelper.isSymmetricEncryptionEnabled(ioService);
  boolean asymmetricEncryptionEnabled=CipherHelper.isAsymmetricEncryptionEnabled(ioService);
  if (asymmetricEncryptionEnabled || symmetricEncryptionEnabled) {
    if (asymmetricEncryptionEnabled && symmetricEncryptionEnabled) {
      logger.log(Level.INFO,"Incorrect encryption configuration.");
      logger.log(Level.INFO,"You can enable either SymmetricEncryption or AsymmetricEncryption.");
      throw new RuntimeException();
    }
 else     if (symmetricEncryptionEnabled) {
      packetReader=new SymmetricCipherPacketReader();
      logger.log(Level.INFO,"Reader started with SymmetricEncryption");
    }
 else {
      packetReader=new AsymmetricCipherPacketReader();
      logger.log(Level.INFO,"Reader started with AsymmetricEncryption");
    }
  }
 else {
    packetReader=new DefaultPacketReader();
  }
}
