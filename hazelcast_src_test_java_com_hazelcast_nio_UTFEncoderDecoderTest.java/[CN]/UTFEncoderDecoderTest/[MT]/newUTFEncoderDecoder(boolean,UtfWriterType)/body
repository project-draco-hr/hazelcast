{
  UTFEncoderDecoder.UtfWriter utfWriter;
switch (utfWriterType) {
case UNSAFE:
    UnsafeBasedCharArrayUtfWriter unsafeBasedWriter=new UnsafeBasedCharArrayUtfWriter();
  if (!unsafeBasedWriter.isAvailable()) {
    return null;
  }
utfWriter=unsafeBasedWriter;
break;
case REFLECTION:
ReflectionBasedCharArrayUtfWriter reflectionBasedWriter=new ReflectionBasedCharArrayUtfWriter();
if (!reflectionBasedWriter.isAvailable()) {
return null;
}
utfWriter=reflectionBasedWriter;
break;
default :
utfWriter=new UTFEncoderDecoder.StringBasedUtfWriter();
}
UTFEncoderDecoder.StringCreator stringCreator=UTFEncoderDecoder.createStringCreator(fastStringEnabled);
if (fastStringEnabled) {
assertContains(stringCreator.getClass().toString(),"FastStringCreator");
}
return new UTFEncoderDecoder(stringCreator,utfWriter);
}
