{
  final CountDownLatch migrationStartLatch=new CountDownLatch(1);
  final Config config1=createConfig();
  config1.setLiteMember(true);
  final HazelcastInstance hz1=factory.newHazelcastInstance(config1);
  final Config config2=createConfig();
  final CollectMigrationTaskOnCommit sourceListener=new CollectMigrationTaskOnCommit();
  config2.addListenerConfig(new ListenerConfig(sourceListener));
  final HazelcastInstance hz2=factory.newHazelcastInstance(config2);
  warmUpPartitions(hz1,hz2);
  waitAllForSafeState(hz1,hz2);
  final Config config3=createConfig();
  final TerminateOtherMemberOnMigrationCommit destinationListener=new TerminateOtherMemberOnMigrationCommit(migrationStartLatch);
  destinationListener.other=hz1;
  config3.addListenerConfig(new ListenerConfig(destinationListener));
  final HazelcastInstance hz3=factory.newHazelcastInstance(config3);
  migrationStartLatch.countDown();
  waitAllForSafeState(hz2,hz3);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      assertTrue(sourceListener.commit);
    }
  }
);
  final InternalPartition hz2Partition=getOwnedPartition(hz2);
  final InternalPartition hz3Partition=getOwnedPartition(hz3);
  assertNotNull(hz2Partition);
  assertNotNull(hz3Partition);
  assertNotEquals(hz2Partition,hz3Partition);
  assertFalse(hz2Partition.isMigrating());
  assertFalse(hz3Partition.isMigrating());
}
