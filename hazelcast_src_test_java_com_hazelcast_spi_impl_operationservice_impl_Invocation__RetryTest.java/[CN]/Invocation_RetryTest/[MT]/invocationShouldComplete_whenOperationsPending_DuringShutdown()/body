{
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory();
  HazelcastInstance hz=factory.newHazelcastInstance();
  NodeEngineImpl nodeEngine=getNodeEngineImpl(hz);
  InternalOperationService operationService=nodeEngine.getOperationService();
  operationService.invokeOnPartition(new SleepingOperation(Long.MAX_VALUE).setPartitionId(0));
  sleepSeconds(1);
  Future[] futures=new Future[NUMBER_OF_INVOCATIONS];
  for (int i=0; i < NUMBER_OF_INVOCATIONS; i++) {
    futures[i]=operationService.createInvocationBuilder(null,new RetryingOperation(),0).setTryCount(Integer.MAX_VALUE).setCallTimeout(Long.MAX_VALUE).invoke();
  }
  hz.getLifecycleService().terminate();
  for (  Future future : futures) {
    try {
      future.get(2,TimeUnit.MINUTES);
    }
 catch (    ExecutionException ignored) {
    }
catch (    TimeoutException e) {
      fail(e.getMessage());
    }
  }
}
