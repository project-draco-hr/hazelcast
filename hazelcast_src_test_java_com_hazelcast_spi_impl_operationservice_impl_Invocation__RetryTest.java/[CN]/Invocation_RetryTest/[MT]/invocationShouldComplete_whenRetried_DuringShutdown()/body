{
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory();
  HazelcastInstance hz1=factory.newHazelcastInstance();
  HazelcastInstance hz2=factory.newHazelcastInstance();
  HazelcastInstance hz3=factory.newHazelcastInstance();
  waitAllForSafeState(hz1,hz2,hz3);
  InternalOperationService operationService=getNodeEngineImpl(hz1).getOperationService();
  Future[] futures=new Future[NUMBER_OF_INVOCATIONS];
  for (int i=0; i < NUMBER_OF_INVOCATIONS; i++) {
    int partitionId=getRandomPartitionId(hz2);
    futures[i]=operationService.createInvocationBuilder(null,new RetryingOperation(),partitionId).setTryCount(Integer.MAX_VALUE).setCallTimeout(Long.MAX_VALUE).invoke();
  }
  hz3.getLifecycleService().terminate();
  hz1.getLifecycleService().terminate();
  for (  Future future : futures) {
    try {
      future.get(2,TimeUnit.MINUTES);
    }
 catch (    ExecutionException ignored) {
    }
catch (    TimeoutException e) {
      fail(e.getMessage());
    }
  }
}
