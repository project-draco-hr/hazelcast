{
  final String name=randomString();
  final ILock lock=client.getLock(name);
  final ICondition condition=lock.newCondition(randomString());
  final AtomicInteger count=new AtomicInteger(0);
  final CountDownLatch threadGetTheLock=new CountDownLatch(1);
  Thread t=new Thread(new Runnable(){
    public void run(){
      lock.lock();
      threadGetTheLock.countDown();
      try {
        if (lock.isLockedByCurrentThread()) {
          count.incrementAndGet();
        }
        condition.await();
        if (lock.isLockedByCurrentThread()) {
          count.incrementAndGet();
        }
      }
 catch (      InterruptedException ignored) {
      }
 finally {
        lock.unlock();
      }
    }
  }
);
  t.start();
  assertOpenEventually(threadGetTheLock);
  lock.lock();
  assertEquals(true,lock.isLocked());
  condition.signal();
  lock.unlock();
  t.join();
  assertEquals(2,count.get());
}
