{
  String mapName=randomMapName();
  Config config=newConfig(PassThroughMergePolicy.class.getName(),mapName);
  HazelcastInstance h1=Hazelcast.newHazelcastInstance(config);
  HazelcastInstance h2=Hazelcast.newHazelcastInstance(config);
  TestMemberShipListener memberShipListener=new TestMemberShipListener(1);
  h2.getCluster().addMembershipListener(memberShipListener);
  TestLifeCycleListener lifeCycleListener=new TestLifeCycleListener(1);
  h2.getLifecycleService().addLifecycleListener(lifeCycleListener);
  closeConnectionBetween(h1,h2);
  assertOpenEventually(memberShipListener.latch);
  assertClusterSizeEventually(1,h1);
  assertClusterSizeEventually(1,h2);
  IMap<Object,Object> map1=h1.getMap(mapName);
  String key=generateKeyOwnedBy(h1);
  map1.put(key,"value");
  IMap<Object,Object> map2=h2.getMap(mapName);
  map2.put(key,"passThroughValue");
  assertOpenEventually(lifeCycleListener.latch);
  assertClusterSizeEventually(2,h1);
  assertClusterSizeEventually(2,h2);
  IMap<Object,Object> mapTest=h2.getMap(mapName);
  assertEquals("passThroughValue",mapTest.get(key));
}
