{
  IndexImpl index=new IndexImpl(QueryConstants.THIS_ATTRIBUTE_NAME,ordered,ss);
  assertEquals(0,index.getRecords(0L).size());
  assertEquals(0,index.getSubRecordsBetween(0L,1000L).size());
  QueryRecord record5=newRecord(5L,55L);
  index.saveEntryIndex(record5,null);
  assertEquals(Collections.<QueryableEntry>singleton(record5),index.getRecords(55L));
  QueryRecord record6=newRecord(6L,66L);
  index.saveEntryIndex(record6,null);
  assertEquals(Collections.<QueryableEntry>singleton(record6),index.getRecords(66L));
  QueryRecord newRecord5=newRecord(5L,555L);
  index.saveEntryIndex(newRecord5,record5.getValue());
  record5=newRecord5;
  assertEquals(0,index.getRecords(55L).size());
  assertEquals(Collections.<QueryableEntry>singleton(record5),index.getRecords(555L));
  assertEquals(1,index.getRecords(555L).size());
  assertEquals(2,index.getSubRecordsBetween(55L,555L).size());
  assertEquals(2,index.getSubRecordsBetween(66L,555L).size());
  assertEquals(1,index.getSubRecordsBetween(555L,555L).size());
  QueryRecord record50=newRecord(50L,555L);
  index.saveEntryIndex(record50,null);
  assertEquals(new HashSet(asList(record5,record50)),index.getRecords(555L));
  ConcurrentMap<Data,QueryableEntry> records=index.getRecordMap(555L);
  assertNotNull(records);
  assertEquals(2,records.size());
  assertEquals(record5,records.get(record5.getIndexKey()));
  assertEquals(record50,records.get(record50.getIndexKey()));
  assertEquals(2,index.getRecords(555L).size());
  assertEquals(3,index.getSubRecordsBetween(55L,555L).size());
  assertEquals(3,index.getSubRecordsBetween(66L,555L).size());
  assertEquals(2,index.getSubRecordsBetween(555L,555L).size());
  assertEquals(0,index.getSubRecords(ComparisonType.LESSER,66L).size());
  assertEquals(1,index.getSubRecords(ComparisonType.LESSER_EQUAL,66L).size());
  assertEquals(1,index.getSubRecords(ComparisonType.LESSER_EQUAL,67L).size());
  assertEquals(2,index.getSubRecords(ComparisonType.GREATER,66L).size());
  assertEquals(3,index.getSubRecords(ComparisonType.GREATER_EQUAL,66L).size());
  assertEquals(3,index.getSubRecords(ComparisonType.GREATER_EQUAL,61L).size());
  assertEquals(3,index.getSubRecords(ComparisonType.NOT_EQUAL,61L).size());
  assertEquals(2,index.getSubRecords(ComparisonType.NOT_EQUAL,66L).size());
  assertEquals(1,index.getSubRecords(ComparisonType.NOT_EQUAL,555L).size());
  assertEquals(3,index.getRecords(new Comparable[]{66L,555L,34234L}).size());
  assertEquals(2,index.getRecords(new Comparable[]{555L,34234L}).size());
  index.removeEntryIndex(record5.toRecord());
  assertEquals(Collections.<QueryableEntry>singleton(record50),index.getRecords(555L));
  records=index.getRecordMap(555L);
  assertNotNull(records);
  assertEquals(null,records.get(5L));
  assertEquals(record50,records.get(toData(50L)));
  assertEquals(1,index.getRecords(555L).size());
  assertEquals(2,index.getSubRecordsBetween(55L,555L).size());
  assertEquals(2,index.getSubRecordsBetween(66L,555L).size());
  assertEquals(1,index.getSubRecordsBetween(555L,555L).size());
  assertEquals(0,index.getSubRecords(ComparisonType.LESSER,66L).size());
  assertEquals(1,index.getSubRecords(ComparisonType.LESSER_EQUAL,66L).size());
  assertEquals(1,index.getSubRecords(ComparisonType.LESSER_EQUAL,67L).size());
  assertEquals(1,index.getSubRecords(ComparisonType.GREATER,66L).size());
  assertEquals(2,index.getSubRecords(ComparisonType.GREATER_EQUAL,66L).size());
  assertEquals(2,index.getSubRecords(ComparisonType.GREATER_EQUAL,61L).size());
  index.removeEntryIndex(record50.toRecord());
  assertEquals(0,index.getRecords(555L).size());
  records=index.getRecordMap(555L);
  assertNull(records);
  assertEquals(0,index.getRecords(555L).size());
  assertEquals(1,index.getSubRecordsBetween(55L,555L).size());
  assertEquals(1,index.getSubRecordsBetween(66L,555L).size());
  assertEquals(0,index.getSubRecordsBetween(555L,555L).size());
  index.removeEntryIndex(record6.toRecord());
  assertEquals(0,index.getRecords(66L).size());
  assertNull(index.getRecordMap(66L));
  assertEquals(0,index.getRecords(555L).size());
  assertEquals(0,index.getSubRecordsBetween(55L,555L).size());
  assertEquals(0,index.getSubRecordsBetween(66L,555L).size());
  assertEquals(0,index.getSubRecordsBetween(555L,555L).size());
}
