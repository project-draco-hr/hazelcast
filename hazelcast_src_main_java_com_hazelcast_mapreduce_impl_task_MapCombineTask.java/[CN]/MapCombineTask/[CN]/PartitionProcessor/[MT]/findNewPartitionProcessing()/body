{
  List<Integer> localPartitions=mapReduceService.getLocalPartitions();
  JobProcessInformationImpl processInformation=supervisor.getJobProcessInformation();
  JobPartitionState[] oldPartitionStates=processInformation.getPartitionStates();
  for (int i=0; i < oldPartitionStates.length; i++) {
    try {
      JobPartitionState partitionState=oldPartitionStates[i];
      if (partitionState == null || partitionState.getState() == JobPartitionState.State.WAITING) {
        if (localPartitions.contains(i)) {
          RequestPartitionResult result=mapReduceService.processRequest(supervisor.getJobOwner(),new RequestPartitionMapping(name,jobId));
          if (result.getState() == RequestPartitionResult.State.NO_SUPERVISOR) {
            System.out.println("MapCombineTask::jobDone?");
            return null;
          }
 else           if (result.getState() == RequestPartitionResult.State.CHECK_STATE_FAILED) {
            return -1;
          }
 else {
            return result.getPartitionId();
          }
        }
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
  return null;
}
