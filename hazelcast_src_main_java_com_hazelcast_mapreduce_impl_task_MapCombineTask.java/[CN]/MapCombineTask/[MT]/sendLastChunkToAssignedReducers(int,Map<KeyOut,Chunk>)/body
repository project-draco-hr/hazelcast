{
  Address sender=mapReduceService.getLocalAddress();
  Map<Address,Map<KeyOut,Chunk>> mapping=mapResultToMember(supervisor,chunkMap);
  supervisor.registerReducerEventInterests(partitionId,mapping.keySet());
  for (  Map.Entry<Address,Map<KeyOut,Chunk>> entry : mapping.entrySet()) {
    Address receiver=entry.getKey();
    Map<KeyOut,Chunk> chunk=entry.getValue();
    mapReduceService.sendNotification(receiver,new LastChunkNotification(receiver,name,jobId,sender,partitionId,chunk));
  }
  Set<Address> addresses=mapping.keySet();
  Collection<Address> reducerInterests=supervisor.getReducerEventInterests(partitionId);
  if (reducerInterests != null) {
    for (    Address address : reducerInterests) {
      if (!addresses.contains(address)) {
        mapReduceService.sendNotification(address,new LastChunkNotification(address,name,jobId,sender,partitionId,Collections.emptyMap()));
      }
    }
  }
}
