{
  if (supervisor.getConfiguration().getReducerFactory() != null) {
    if (context.getCollected() == chunkSize) {
      Map<KeyOut,Chunk> chunkMap=context.requestChunk();
      Map<Address,Map<KeyOut,Chunk>> mapping=mapResultToMember(mapReduceService,chunkMap);
      supervisor.registerReducerEventInterests(partitionId,mapping.keySet());
      for (      Map.Entry<Address,Map<KeyOut,Chunk>> entry : mapping.entrySet()) {
        mapReduceService.sendNotification(entry.getKey(),new IntermediateChunkNotification(entry.getKey(),name,jobId,entry.getValue(),partitionId));
      }
    }
  }
}
