{
  if (transaction.getState() != Transaction.State.ACTIVE) {
    throw new TransactionNotActiveException("No transaction is found while accessing " + "transactional object -> " + serviceName + "["+ name+ "]!");
  }
  TransactionalObjectKey key=new TransactionalObjectKey(serviceName,name);
  TransactionalObject obj=txnObjectMap.get(key);
  if (obj != null) {
    return obj;
  }
  final Object service=nodeEngine.getService(serviceName);
  if (service instanceof TransactionalService) {
    nodeEngine.getProxyService().initializeDistributedObject(serviceName,name);
    obj=((TransactionalService)service).createTransactionalObject(name,transaction);
    txnObjectMap.put(key,obj);
  }
 else {
    throw new IllegalArgumentException("Service[" + serviceName + "] is not transactional!");
  }
  return obj;
}
