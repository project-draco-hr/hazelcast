{
  final Config config1=new Config();
  config1.setProperty(GroupProperty.PARTITION_COUNT.getName(),String.valueOf(PARTITION_COUNT));
  final TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  final HazelcastInstance hz1=factory.newHazelcastInstance(config1);
  warmUpPartitions(hz1);
  final InternalMigrationListenerImpl listener=new InternalMigrationListenerImpl();
  final Config config2=new Config();
  config2.setProperty(GroupProperty.PARTITION_COUNT.getName(),String.valueOf(PARTITION_COUNT));
  config2.addListenerConfig(new ListenerConfig(listener));
  final HazelcastInstance hz2=factory.newHazelcastInstance(config2);
  waitAllForSafeState(hz1,hz2);
  final List<Integer> hz2PartitionIds=getNodeEngineImpl(hz2).getPartitionService().getMemberPartitions(getAddress(hz2));
  assertEquals(1,hz2PartitionIds.size());
  final int hz2PartitionId=hz2PartitionIds.get(0);
  final List<MigrationProgressNotification> notifications=listener.getNotifications();
  int partition0Events=0, partition1Events=0;
  assertEquals(6,notifications.size());
  for (  MigrationProgressNotification n : notifications) {
    if (n.migrationInfo.getPartitionId() == 0) {
      partition0Events++;
    }
 else {
      partition1Events++;
    }
  }
  assertEquals(3,partition0Events);
  assertEquals(3,partition1Events);
}
