{
  return retryCall(new RetryTask<DelayedEntry>(){
    private List<DelayedEntry> failedDelayedEntries=Collections.emptyList();
    @Override public boolean run() throws Exception {
      callBeforeStoreListeners(entry);
      final Object key=toObject(entry.getKey());
      final Object value=toObject(entry.getValue());
      boolean result=operationType.processSingle(key,value,mapStore);
      callAfterStoreListeners(entry);
      return result;
    }
    /** 
 * Call when store failed.
 */
    @Override public List<DelayedEntry> failedList(){
      failedDelayedEntries=Collections.singletonList(entry);
      return failedDelayedEntries;
    }
  }
);
}
