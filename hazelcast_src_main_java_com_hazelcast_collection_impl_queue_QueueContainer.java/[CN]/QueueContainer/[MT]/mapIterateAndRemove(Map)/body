{
  if (map.size() <= 0) {
    return;
  }
  if (store.isEnabled()) {
    try {
      store.deleteAll(map.keySet());
    }
 catch (    Exception e) {
      throw new HazelcastException(e);
    }
  }
  Iterator<QueueItem> iter=getItemQueue().iterator();
  while (iter.hasNext()) {
    QueueItem item=iter.next();
    if (map.containsKey(item.getItemId())) {
      iter.remove();
      age(item,Clock.currentTimeMillis());
    }
  }
  scheduleEvictionIfEmpty();
}
