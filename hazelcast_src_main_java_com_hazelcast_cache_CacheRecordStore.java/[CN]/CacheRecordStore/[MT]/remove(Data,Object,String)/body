{
  final ExpiryPolicy localExpiryPolicy=defaultExpiryPolicy;
  final long now=Clock.currentTimeMillis();
  final long start=isStatisticsEnabled() ? System.nanoTime() : 0;
  CacheRecord record=records.get(key);
  boolean isExpired=record != null && record.isExpiredAt(now);
  int hitCount=0;
  if (record == null || isExpired) {
    if (isStatisticsEnabled()) {
      statistics.increaseCacheMisses(1);
    }
    return false;
  }
 else {
    hitCount++;
    if (compare(record.getValue(),value)) {
      deleteCacheEntry(key);
      deleteRecord(key);
    }
 else {
      long et=-1L;
      try {
        Duration expiryDuration=localExpiryPolicy.getExpiryForAccess();
        if (expiryDuration != null) {
          et=expiryDuration.getAdjustedTime(now);
          record.setExpirationTime(et);
        }
      }
 catch (      Throwable t) {
      }
      if (isExpiredAt(et,now)) {
        processExpiredEntry(key,record);
      }
      return false;
    }
  }
  if (isStatisticsEnabled()) {
    statistics.increaseCacheRemovals(1);
    statistics.addRemoveTimeNano(System.nanoTime() - start);
    if (hitCount == 1) {
      statistics.increaseCacheHits(hitCount);
    }
 else {
      statistics.increaseCacheMisses(1);
    }
  }
  return true;
}
