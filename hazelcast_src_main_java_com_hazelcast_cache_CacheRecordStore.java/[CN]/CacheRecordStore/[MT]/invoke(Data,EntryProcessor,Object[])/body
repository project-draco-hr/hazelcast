{
  final long now=Clock.currentTimeMillis();
  final long start=isStatisticsEnabled ? System.nanoTime() : 0;
  Record record=records.get(key);
  boolean isExpired=record != null && isExpiredAt(record.getStatistics().getExpirationTime(),now);
  if (isExpired) {
    processExpiredEntry(key,record);
    record=null;
  }
  if (record == null || isExpired) {
    if (isStatisticsEnabled) {
      statistics.increaseCacheMisses(1);
    }
 else {
      statistics.increaseCacheHits(1);
    }
  }
  if (isStatisticsEnabled) {
    statistics.addGetTimeNano(System.nanoTime() - start);
  }
  CacheEntryProcessorEntry entry=new CacheEntryProcessorEntry(key,record,this,now);
  final Object process=entryProcessor.process(entry,arguments);
  entry.applyChanges();
  return process;
}
