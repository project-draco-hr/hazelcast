{
  if (!isStatusSet(stHeader)) {
    if (!source.hasRemaining()) {
      return false;
    }
    header=source.get();
    setStatus(stHeader);
  }
  if (value == null) {
    value=new Data();
  }
  if (!isStatusSet(stType)) {
    if (source.remaining() < 4) {
      return false;
    }
    value.type=source.getInt();
    setStatus(stType);
  }
  if (!isStatusSet(stClassId)) {
    if (source.remaining() < 4) {
      return false;
    }
    classId=source.getInt();
    setStatus(stClassId);
    if (classId == Data.NO_CLASS_ID) {
      setStatus(stVersion);
      setStatus(stClassDefSize);
      setStatus(stClassDef);
    }
  }
  if (!isStatusSet(stVersion)) {
    if (source.remaining() < 4) {
      return false;
    }
    version=source.getInt();
    setStatus(stVersion);
  }
  if (!isStatusSet(stClassDef)) {
    ClassDefinition cd;
    if ((cd=context.lookup(classId,version)) != null) {
      value.cd=cd;
      setStatus(stClassDefSize);
      setStatus(stClassDef);
    }
 else {
      if (!isStatusSet(stClassDefSize)) {
        if (source.remaining() < 4) {
          return false;
        }
        classDefSize=source.getInt();
        setStatus(stClassDefSize);
      }
      if (!isStatusSet(stClassDef)) {
        if (source.remaining() < classDefSize) {
          return false;
        }
        final byte[] binary=new byte[classDefSize];
        source.get(binary);
        value.cd=new ClassDefinitionBinaryProxy(classId,version,binary);
        setStatus(stClassDef);
      }
    }
  }
  if (!isStatusSet(stSize)) {
    if (source.remaining() < 4) {
      return false;
    }
    final int size=source.getInt();
    buffer=ByteBuffer.allocate(size);
    setStatus(stSize);
  }
  if (!isStatusSet(stValue)) {
    IOUtil.copyToHeapBuffer(source,buffer);
    if (buffer.hasRemaining()) {
      return false;
    }
    buffer.flip();
    value.buffer=buffer.array();
    setStatus(stValue);
  }
  if (!isStatusSet(stHash)) {
    if (source.remaining() < 4) {
      return false;
    }
    value.setPartitionHash(source.getInt());
    setStatus(stHash);
  }
  return true;
}
