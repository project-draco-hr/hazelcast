{
  bbSizes.clear();
  bbHeader.clear();
  if (key != null && key.size > 0) {
    key=new Data(ByteBuffer.wrap(key.buffer.array()));
  }
  if (value != null && value.size > 0) {
    value=new Data(ByteBuffer.wrap(value.buffer.array()));
  }
  bbHeader.putInt(operation.getValue());
  bbHeader.putInt(blockId);
  bbHeader.putInt(threadId);
  bbHeader.putInt(lockCount);
  bbHeader.putLong(timeout);
  bbHeader.putLong(txnId);
  bbHeader.putLong(longValue);
  bbHeader.putLong(version);
  bbHeader.putLong(callId);
  bbHeader.put((byte)(client ? 1 : 0));
  bbHeader.put(responseType);
  putString(bbHeader,name);
  boolean lockAddressNull=(lockAddress == null);
  writeBoolean(bbHeader,lockAddressNull);
  if (!lockAddressNull) {
    lockAddress.writeObject(bbHeader);
  }
  bbHeader.put(indexCount);
  for (int i=0; i < indexCount; i++) {
    bbHeader.putLong(indexes[i]);
    bbHeader.put(indexTypes[i]);
  }
  bbHeader.flip();
  bbSizes.putInt(bbHeader.limit());
  bbSizes.putInt(key == null ? 0 : key.size);
  bbSizes.putInt(value == null ? 0 : value.size);
  bbSizes.flip();
  totalSize=0;
  totalSize+=bbSizes.limit();
  totalSize+=bbHeader.limit();
  totalSize+=key == null ? 0 : key.size;
  totalSize+=value == null ? 0 : value.size;
}
