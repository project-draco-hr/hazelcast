{
  ExecutorService executor=createSingleNodeExecutorService("testInvokeAll");
  assertFalse(executor.isShutdown());
  ArrayList<Callable<Boolean>> tasks=new ArrayList<Callable<Boolean>>();
  tasks.add(new SleepingTask(0));
  List<Future<Boolean>> futures=executor.invokeAll(tasks,5,TimeUnit.SECONDS);
  assertEquals(futures.size(),1);
  assertEquals(futures.get(0).get(),Boolean.TRUE);
  tasks.clear();
  for (int i=0; i < TASK_COUNT; i++) {
    tasks.add(new SleepingTask(i < 2 ? 0 : 20));
  }
  futures=executor.invokeAll(tasks,5,TimeUnit.SECONDS);
  assertEquals(futures.size(),TASK_COUNT);
  for (int i=0; i < TASK_COUNT; i++) {
    if (i < 2) {
      assertEquals(futures.get(i).get(),Boolean.TRUE);
    }
 else {
      boolean excepted=false;
      try {
        futures.get(i).get();
      }
 catch (      CancellationException e) {
        excepted=true;
      }
      assertTrue(excepted);
    }
  }
}
