{
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(NODE_COUNT);
  final HazelcastInstance[] instances=factory.newInstances(new Config());
  final AtomicInteger nullResponseCount=new AtomicInteger(0);
  final CountDownLatch responseLatch=new CountDownLatch(NODE_COUNT * NODE_COUNT);
  final MultiExecutionCallback callback=new MultiExecutionCallback(){
    public void onResponse(    Member member,    Object value){
      if (value == null) {
        nullResponseCount.incrementAndGet();
      }
      responseLatch.countDown();
    }
    public void onComplete(    Map<Member,Object> values){
    }
  }
;
  for (int i=0; i < NODE_COUNT; i++) {
    final IExecutorService service=instances[i].getExecutorService("testSubmitToAllMembersRunnable");
    service.submitToAllMembers(new IncrementAtomicLongRunnable("testSubmitToAllMembersRunnable"),callback);
  }
  assertTrue(responseLatch.await(30,TimeUnit.SECONDS));
  final IAtomicLong result=instances[0].getAtomicLong("testSubmitToAllMembersRunnable");
  assertEquals(NODE_COUNT * NODE_COUNT,result.get());
  assertEquals(NODE_COUNT * NODE_COUNT,nullResponseCount.get());
}
