{
  final ExecutionService es=getExecutionService(createHazelcastInstance());
  final CountDownLatch callableLatch=new CountDownLatch(1);
  final CountDownLatch callbackLatch=new CountDownLatch(2);
  final ExecutorService executorService=Executors.newSingleThreadExecutor();
  try {
    final Future<String> future=executorService.submit(new CountDownLatchAwaitingCallable(callableLatch));
    final CountingDownExecutionCallback<String> callback1=new CountingDownExecutionCallback<String>(callbackLatch);
    final CountingDownExecutionCallback<String> callback2=new CountingDownExecutionCallback<String>(callbackLatch);
    final ICompletableFuture<String> completableFuture=es.asCompletableFuture(future);
    completableFuture.andThen(callback1);
    completableFuture.andThen(callback2);
    callableLatch.countDown();
    assertOpenEventually(callbackLatch);
    assertEquals(CountDownLatchAwaitingCallable.RESULT,callback1.getResult());
    assertEquals(CountDownLatchAwaitingCallable.RESULT,callback2.getResult());
  }
  finally {
    executorService.shutdown();
  }
}
