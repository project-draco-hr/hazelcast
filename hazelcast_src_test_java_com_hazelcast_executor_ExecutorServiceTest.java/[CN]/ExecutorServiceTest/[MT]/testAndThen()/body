{
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  HazelcastInstance instance1=factory.newHazelcastInstance();
  HazelcastInstance instance2=factory.newHazelcastInstance();
  String name=randomString();
  IExecutorService executorService=instance2.getExecutorService(name);
  BasicTestTask task=new BasicTestTask();
  String key=generateKeyOwnedBy(instance1);
  ICompletableFuture<String> future=(ICompletableFuture<String>)executorService.submitToKeyOwner(task,key);
  final CountDownLatch latch=new CountDownLatch(1);
  future.andThen(new ExecutionCallback<String>(){
    @Override public void onResponse(    String response){
      latch.countDown();
    }
    @Override public void onFailure(    Throwable t){
    }
  }
);
  future.get();
  assertOpenEventually(latch,10);
}
