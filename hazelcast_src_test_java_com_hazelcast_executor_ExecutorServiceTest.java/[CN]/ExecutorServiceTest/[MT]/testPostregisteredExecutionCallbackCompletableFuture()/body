{
  final ExecutionService es=getExecutionService(createHazelcastInstance());
  final CountDownLatch callableLatch=new CountDownLatch(1);
  final ExecutorService executorService=Executors.newSingleThreadExecutor();
  try {
    final Future<String> future=executorService.submit(new CountDownLatchAwaitingCallable(callableLatch));
    final ICompletableFuture<String> completableFuture=es.asCompletableFuture(future);
    callableLatch.countDown();
    future.get();
    final CountingDownExecutionCallback<String> callback=new CountingDownExecutionCallback<String>(1);
    completableFuture.andThen(callback);
    try {
      assertOpenEventually(callback.getLatch());
      assertEquals(CountDownLatchAwaitingCallable.RESULT,callback.getResult());
    }
 catch (    AssertionError error) {
      System.out.println(callback.getLatch().getCount());
      System.out.println(callback.getResult());
      throw error;
    }
  }
  finally {
    executorService.shutdown();
  }
}
