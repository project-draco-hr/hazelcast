{
  final Config config=new Config();
  final String name="testStatsIssue2039";
  config.addExecutorConfig(new ExecutorConfig(name).setQueueCapacity(1).setPoolSize(1));
  final HazelcastInstance instance=createHazelcastInstance(config);
  final IExecutorService executorService=instance.getExecutorService(name);
  final CountDownLatch startLatch=new CountDownLatch(1);
  final CountDownLatch sleepLatch=new CountDownLatch(1);
  executorService.execute(new Runnable(){
    @Override public void run(){
      startLatch.countDown();
      assertOpenEventually(sleepLatch);
    }
  }
);
  assertTrue(startLatch.await(30,TimeUnit.SECONDS));
  final Future waitingInQueue=executorService.submit(new Runnable(){
    public void run(){
    }
  }
);
  final Future rejected=executorService.submit(new Runnable(){
    public void run(){
    }
  }
);
  try {
    rejected.get(1,TimeUnit.MINUTES);
  }
 catch (  Exception e) {
    boolean isRejected=e.getCause() instanceof RejectedExecutionException;
    if (!isRejected) {
      fail(e.toString());
    }
  }
 finally {
    sleepLatch.countDown();
  }
  waitingInQueue.get(1,TimeUnit.MINUTES);
  final LocalExecutorStats stats=executorService.getLocalExecutorStats();
  assertEquals(2,stats.getStartedTaskCount());
  assertEquals(0,stats.getPendingTaskCount());
}
