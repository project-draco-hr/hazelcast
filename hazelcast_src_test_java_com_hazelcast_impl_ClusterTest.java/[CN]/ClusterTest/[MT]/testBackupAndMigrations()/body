{
  HazelcastInstance h1=Hazelcast.newHazelcastInstance(null);
  TestMigrationListener listener1=new TestMigrationListener(5,5);
  h1.getPartitionService().addMigrationListener(listener1);
  int counter=5000;
  Map<Integer,String> map=new HashMap<Integer,String>();
  for (int i=0; i < counter; i++) {
    map.put(i,String.valueOf(i));
  }
  IMap map1=h1.getMap("testIfProperlyBackedUp");
  map1.putAll(map);
  HazelcastInstance h2=Hazelcast.newHazelcastInstance(null);
  TestMigrationListener listener2=new TestMigrationListener(5,5);
  h2.getPartitionService().addMigrationListener(listener2);
  IMap map2=h2.getMap("testIfProperlyBackedUp");
  Thread.sleep(1000);
  for (int i=0; i < 5; i++) {
    Thread.sleep(10000);
    LocalMapStats mapStats1=map1.getLocalMapStats();
    LocalMapStats mapStats2=map2.getLocalMapStats();
    if (mapStats1.getOwnedEntryCount() == counter) {
      Thread.sleep(1000);
    }
    Thread.sleep(1000);
    System.out.println(mapStats1);
    System.out.println(mapStats2);
    assertEquals(mapStats1.getOwnedEntryCount(),mapStats2.getBackupEntryCount());
    assertEquals("Migrated blocks are not backed up",mapStats2.getOwnedEntryCount(),mapStats1.getBackupEntryCount());
  }
  assertTrue(listener1.await(5));
  assertTrue(listener2.await(5));
}
