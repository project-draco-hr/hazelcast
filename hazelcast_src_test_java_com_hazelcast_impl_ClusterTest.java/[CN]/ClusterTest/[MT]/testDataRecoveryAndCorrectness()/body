{
  final int size=1000;
  HazelcastInstance h1=Hazelcast.newHazelcastInstance(null);
  TestMigrationListener migrationListener1=new TestMigrationListener(2,2);
  h1.getPartitionService().addMigrationListener(migrationListener1);
  assertEquals(1,h1.getCluster().getMembers().size());
  IMap map1=h1.getMap("default");
  for (int i=0; i < size; i++) {
    map1.put(i,"value" + i);
  }
  assertEquals(size,map1.size());
  HazelcastInstance h2=Hazelcast.newHazelcastInstance(null);
  TestMigrationListener migrationListener2=new TestMigrationListener(2,2);
  h2.getPartitionService().addMigrationListener(migrationListener2);
  IMap map2=h2.getMap("default");
  HazelcastInstance h3=Hazelcast.newHazelcastInstance(null);
  TestMigrationListener migrationListener3=new TestMigrationListener(2,2);
  h3.getPartitionService().addMigrationListener(migrationListener3);
  assertEquals(3,h3.getCluster().getMembers().size());
  IMap map3=h3.getMap("default");
  HazelcastInstance h4=Hazelcast.newHazelcastInstance(null);
  TestMigrationListener migrationListener4=new TestMigrationListener(2,2);
  h4.getPartitionService().addMigrationListener(migrationListener4);
  IMap map4=h4.getMap("default");
  for (int i=0; i < 20000; i++) {
    assertEquals(size,map1.size());
    assertEquals(size,map2.size());
    assertEquals(size,map3.size());
    assertEquals(size,map4.size());
  }
  migrationListener1.await(3);
  migrationListener2.await(3);
  migrationListener3.await(3);
  migrationListener4.await(3);
}
