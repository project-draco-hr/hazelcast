{
  final CountDownLatch latchAdded=new CountDownLatch(1);
  final CountDownLatch latchUpdated=new CountDownLatch(1);
  final CountDownLatch latchRemoved=new CountDownLatch(1);
  final CountDownLatch latchEvicted=new CountDownLatch(0);
  EntryListener listener=new EntryListener(){
    public void entryAdded(    EntryEvent entryEvent){
      latchAdded.countDown();
    }
    public void entryRemoved(    EntryEvent entryEvent){
      latchRemoved.countDown();
    }
    public void entryUpdated(    EntryEvent entryEvent){
      latchUpdated.countDown();
    }
    public void entryEvicted(    EntryEvent entryEvent){
      latchEvicted.countDown();
    }
  }
;
  HazelcastInstance h1=Hazelcast.newHazelcastInstance(null);
  HazelcastInstance h2=Hazelcast.newHazelcastInstance(null);
  IMap mapSource=h2.getMap("default");
  IMap map=h1.getMap("default");
  Object key="2133aa";
  map.addEntryListener(listener,key,true);
  assertNull(mapSource.put(key,"value5"));
  assertEquals("value5",mapSource.put(key,"value55"));
  assertFalse(mapSource.evict(key));
  assertEquals("value55",mapSource.put(key,"value5"));
  assertEquals("value5",mapSource.remove(key));
  map.removeEntryListener(listener,key);
  assertTrue(mapSource.evict(key));
  int waitSeconds=20;
  assertTrue(latchAdded.await(waitSeconds,TimeUnit.SECONDS));
  assertTrue(latchUpdated.await(waitSeconds,TimeUnit.SECONDS));
  assertTrue(latchRemoved.await(waitSeconds,TimeUnit.SECONDS));
  assertTrue(latchEvicted.await(waitSeconds,TimeUnit.SECONDS));
}
