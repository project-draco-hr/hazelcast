{
  IMap map1=h1.getMap("default");
  IMap map2=h2.getMap("default");
  assertEquals(2,h1.getCluster().getMembers().size());
  assertEquals(2,h2.getCluster().getMembers().size());
  assertEquals("value2",h2.getMap("default").get("1"));
  assertEquals("value2",h1.getMap("default").get("1"));
  assertEquals(1,h1.getMap("default").size());
  assertEquals(1,h2.getMap("default").size());
  assertFalse(map1.containsKey("2"));
  assertFalse(map2.containsKey("2"));
  assertFalse(map1.containsValue("value1"));
  assertFalse(map2.containsValue("value1"));
  assertTrue(map1.containsKey("1"));
  assertTrue(map2.containsKey("1"));
  assertTrue(map1.containsValue("value2"));
  assertTrue(map2.containsValue("value2"));
  map1.lock("1");
  assertFalse(map2.tryLock("1"));
  map1.unlock("1");
  assertTrue(map2.tryLock("1"));
  map2.unlock("1");
  assertEquals("value2",map1.putIfAbsent("1","value1"));
  assertEquals("value2",map2.putIfAbsent("1","value1"));
  assertEquals("value2",map1.get("1"));
  assertEquals("value2",map2.get("1"));
  assertNull(map1.putIfAbsent("3","value3"));
  assertEquals("value3",map1.get("3"));
  assertEquals("value3",map2.get("3"));
  assertEquals("value3",map2.remove("3"));
  assertNull(map1.get("3"));
  assertNull(map2.get("3"));
  assertNull(map2.putIfAbsent("3","value3"));
  assertEquals("value3",map1.get("3"));
  assertEquals("value3",map2.get("3"));
  assertEquals("value3",map1.remove("3"));
  assertNull(map1.get("3"));
  assertNull(map2.get("3"));
  assertEquals(1,map1.keySet().size());
  assertEquals(1,map1.values().size());
  assertEquals(1,map1.entrySet().size());
  assertEquals(1,map2.keySet().size());
  assertEquals(1,map2.values().size());
  assertEquals(1,map2.entrySet().size());
  Set<Map.Entry> entries=map1.entrySet();
  for (  Map.Entry entry : entries) {
    assertEquals("1",entry.getKey());
    assertEquals("value2",entry.getValue());
  }
  entries=map2.entrySet();
  for (  Map.Entry entry : entries) {
    assertEquals("1",entry.getKey());
    assertEquals("value2",entry.getValue());
  }
  allMapListenerTest(map2,"5",map1);
}
