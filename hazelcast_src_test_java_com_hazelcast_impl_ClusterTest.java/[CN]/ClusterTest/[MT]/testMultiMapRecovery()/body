{
  HazelcastInstance h=Hazelcast.newHazelcastInstance(new Config());
  MultiMap mm=h.getMultiMap("default");
  Collection<String> expectedValues=new HashSet<String>();
  expectedValues.add("value1");
  expectedValues.add("value2");
  mm.put("1","value1");
  mm.put("1","value2");
  assertEquals(2,mm.size());
  assertEquals(1,mm.keySet().size());
  Collection values=mm.get("1");
  for (  Object value : values) {
    assertTrue(expectedValues.contains(value));
  }
  HazelcastInstance h2=Hazelcast.newHazelcastInstance(new Config());
  MultiMap mm2=h2.getMultiMap("default");
  Thread.sleep(1000);
  getCMapForMultiMap(h,"default").startCleanup(true);
  getCMapForMultiMap(h2,"default").startCleanup(true);
  assertEquals(2,mm.size());
  assertEquals(1,mm.keySet().size());
  values=mm.get("1");
  for (  Object value : values) {
    assertTrue(expectedValues.contains(value));
  }
  assertEquals(2,mm2.size());
  assertEquals(1,mm2.keySet().size());
  values=mm2.get("1");
  for (  Object value : values) {
    assertTrue(expectedValues.contains(value));
  }
  h.getLifecycleService().shutdown();
  values=mm2.get("1");
  for (  Object value : values) {
    assertTrue(expectedValues.contains(value));
  }
  assertEquals(2,mm2.size());
  assertEquals(1,mm2.keySet().size());
}
