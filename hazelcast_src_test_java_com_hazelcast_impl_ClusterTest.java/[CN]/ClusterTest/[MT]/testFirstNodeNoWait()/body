{
  final Config config=new Config();
  final BlockingQueue<Integer> counts=new ArrayBlockingQueue<Integer>(2);
  for (int j=0; j < 2; j++) {
    new Thread(new Runnable(){
      public void run(){
        final HazelcastInstance h=Hazelcast.newHazelcastInstance(config);
        for (int i=0; i < 3000; i++) {
          h.getMap("default").put(i,"value");
        }
        counts.offer(getLocalPartitions(h).size());
      }
    }
).start();
  }
  int first=counts.take();
  int second=counts.take();
  System.out.println(first + " ** " + second);
  assertTrue(first == 0 || first == 271);
  assertTrue(second == 0 || second == 271);
  assertEquals(271,Math.abs(second - first));
}
