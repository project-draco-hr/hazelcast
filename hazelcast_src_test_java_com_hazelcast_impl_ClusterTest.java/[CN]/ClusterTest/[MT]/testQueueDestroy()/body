{
  HazelcastInstance h1=Hazelcast.newHazelcastInstance(new Config());
  HazelcastInstance h2=Hazelcast.newHazelcastInstance(new Config());
  final IQueue q1=h1.getQueue("default");
  final IQueue q2=h2.getQueue("default");
  for (int i=0; i < 999; i++) {
    q2.offer(i);
  }
  assertEquals(999,q1.size());
  assertEquals(999,q2.size());
  q1.destroy();
  Thread.sleep(1000);
  String queueLongName=Prefix.QUEUE + "default";
  String mapLongName=Prefix.MAP + Prefix.QUEUE + "default";
  assertFalse(TestUtil.getNode(h1).factory.proxies.containsKey(new FactoryImpl.ProxyKey(queueLongName,null)));
  assertFalse(TestUtil.getNode(h1).factory.proxiesByName.containsKey(queueLongName));
  assertFalse(TestUtil.getNode(h2).factory.proxies.containsKey(new FactoryImpl.ProxyKey(queueLongName,null)));
  assertFalse(TestUtil.getNode(h2).factory.proxiesByName.containsKey(queueLongName));
  assertFalse(TestUtil.getNode(h1).factory.proxies.containsKey(new FactoryImpl.ProxyKey(mapLongName,null)));
  assertFalse(TestUtil.getNode(h1).factory.proxiesByName.containsKey(mapLongName));
  assertFalse(TestUtil.getNode(h2).factory.proxies.containsKey(new FactoryImpl.ProxyKey(mapLongName,null)));
  assertFalse(TestUtil.getNode(h2).factory.proxiesByName.containsKey(mapLongName));
  assertNull(getCMap(h1,mapLongName));
  assertNull(getCMap(h2,mapLongName));
  assertEquals(0,q1.size());
  assertEquals(0,q2.size());
}
