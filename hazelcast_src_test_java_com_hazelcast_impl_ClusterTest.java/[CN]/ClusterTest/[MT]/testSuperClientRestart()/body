{
  Config configNormal=new Config();
  configNormal.setProperty(GroupProperties.PROP_CONNECTION_MONITOR_INTERVAL,"1");
  configNormal.setProperty(GroupProperties.PROP_CONNECTION_MONITOR_MAX_FAULTS,"1");
  Config configSuper=new Config();
  configSuper.setProperty(GroupProperties.PROP_CONNECTION_MONITOR_INTERVAL,"1");
  configSuper.setProperty(GroupProperties.PROP_CONNECTION_MONITOR_MAX_FAULTS,"1");
  configSuper.setLiteMember(true);
  HazelcastInstance h=Hazelcast.newHazelcastInstance(configNormal);
  HazelcastInstance s=Hazelcast.newHazelcastInstance(configSuper);
  assertEquals(2,h.getCluster().getMembers().size());
  assertEquals(2,s.getCluster().getMembers().size());
  assertFalse(h.getCluster().getLocalMember().isLiteMember());
  assertTrue(s.getCluster().getLocalMember().isLiteMember());
  IMap map=h.getMap("default");
  final IMap maps=s.getMap("default");
  assertNull(map.put("1","value1"));
  assertEquals("value1",map.get("1"));
  assertEquals("value1",maps.get("1"));
  assertEquals(1,map.size());
  assertEquals(1,maps.size());
  h.getLifecycleService().shutdown();
  sleep(500);
  assertEquals(1,s.getCluster().getMembers().size());
  final CountDownLatch latch=new CountDownLatch(1);
  new Thread(new Runnable(){
    public void run(){
      maps.size();
      assertNull(maps.get("1"));
      maps.put("1","value3");
      latch.countDown();
    }
  }
).start();
  h=Hazelcast.newHazelcastInstance(configNormal);
  assertTrue(latch.await(20,TimeUnit.SECONDS));
  assertEquals(2,h.getCluster().getMembers().size());
  assertEquals(2,s.getCluster().getMembers().size());
  assertFalse(h.getCluster().getLocalMember().isLiteMember());
  assertTrue(s.getCluster().getLocalMember().isLiteMember());
  map=h.getMap("default");
  assertEquals("value3",map.put("1","value2"));
  assertEquals("value2",map.get("1"));
  assertEquals(1,map.size());
  assertEquals(1,maps.size());
}
