{
  expiryPolicy=getExpiryPolicy(expiryPolicy);
  final long start=isStatisticsEnabled() ? System.nanoTime() : 0;
  long now=Clock.currentTimeMillis();
  Object value=null;
  R record=records.get(key);
  final boolean isExpired=processExpiredEntry(key,record,now);
  try {
    if (recordNotExistOrExpiredOrTombstone(record,isExpired)) {
      if (isStatisticsEnabled()) {
        statistics.increaseCacheMisses(1);
      }
      value=readThroughCache(key);
      if (value == null) {
        if (isStatisticsEnabled()) {
          statistics.addGetTimeNanos(System.nanoTime() - start);
        }
        return null;
      }
      record=createRecordWithExpiry(key,value,expiryPolicy,now,true,IGNORE_COMPLETION);
    }
 else {
      value=recordToValue(record);
      onRecordAccess(key,record,expiryPolicy,now);
      if (isStatisticsEnabled()) {
        statistics.increaseCacheHits(1);
      }
    }
    if (isStatisticsEnabled()) {
      statistics.addGetTimeNanos(System.nanoTime() - start);
    }
    onGet(key,expiryPolicy,value,record);
    return value;
  }
 catch (  Throwable error) {
    onGetError(key,expiryPolicy,value,record,error);
    throw ExceptionUtil.rethrow(error);
  }
}
