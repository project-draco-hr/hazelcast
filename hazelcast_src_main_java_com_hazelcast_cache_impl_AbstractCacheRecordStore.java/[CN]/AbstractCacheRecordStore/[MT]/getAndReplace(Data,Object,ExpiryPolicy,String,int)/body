{
  expiryPolicy=getExpiryPolicy(expiryPolicy);
  final long now=Clock.currentTimeMillis();
  final long start=isStatisticsEnabled() ? System.nanoTime() : 0;
  boolean replaced=false;
  R record=records.get(key);
  final boolean isExpired=record != null && record.isExpiredAt(now);
  try {
    Object obj=toValue(record);
    if (recordNotExistOrExpired(record,isExpired)) {
      obj=null;
      if (isEventsEnabled()) {
        publishEvent(createCacheCompleteEvent(toEventData(key),completionId));
      }
    }
 else {
      replaced=updateRecordWithExpiry(key,value,record,expiryPolicy,now,false,completionId,source);
    }
    onReplace(key,null,value,expiryPolicy,source,false,record,isExpired,replaced);
    if (isStatisticsEnabled()) {
      statistics.addGetTimeNanos(System.nanoTime() - start);
      if (obj != null) {
        statistics.increaseCacheHits(1);
        statistics.increaseCachePuts(1);
        statistics.addPutTimeNanos(System.nanoTime() - start);
      }
 else {
        statistics.increaseCacheMisses(1);
      }
    }
    return obj;
  }
 catch (  Throwable error) {
    onReplaceError(key,null,value,expiryPolicy,source,false,record,isExpired,replaced,error);
    throw ExceptionUtil.rethrow(error);
  }
}
