{
  final long now=Clock.currentTimeMillis();
  final long start=isStatisticsEnabled() ? System.nanoTime() : 0;
  deleteCacheEntry(key);
  R record=records.get(key);
  boolean isExpired=record != null && record.isExpiredAt(now);
  final Object obj;
  boolean result;
  if (record == null || isExpired) {
    obj=null;
    result=false;
  }
 else {
    obj=toValue(record);
    result=deleteRecord(key);
  }
  onRemove(key,null,caller,false,record,result);
  if (isStatisticsEnabled()) {
    statistics.addGetTimeNanos(System.nanoTime() - start);
    if (obj != null) {
      statistics.increaseCacheHits(1);
      statistics.increaseCacheRemovals(1);
      statistics.addRemoveTimeNanos(System.nanoTime() - start);
    }
 else {
      statistics.increaseCacheMisses(1);
    }
  }
  return obj;
}
