{
  expiryPolicy=getExpiryPolicy(expiryPolicy);
  final long now=Clock.currentTimeMillis();
  final long start=isStatisticsEnabled() ? System.nanoTime() : 0;
  boolean result;
  R record=records.get(key);
  boolean isExpired=record != null && record.isExpiredAt(now);
  onBeforeGetAndReplace(key,null,value,expiryPolicy,caller,false,record,isExpired);
  if (record == null || isExpired) {
    result=false;
  }
 else {
    result=updateRecordWithExpiry(key,value,record,expiryPolicy,now,false);
  }
  onAfterGetAndReplace(key,null,value,expiryPolicy,caller,false,record,isExpired,result);
  updateHasExpiringEntry(record);
  if (isStatisticsEnabled()) {
    statistics.addGetTimeNanos(System.nanoTime() - start);
    if (result) {
      statistics.increaseCachePuts(1);
      statistics.increaseCacheHits(1);
      statistics.addPutTimeNanos(System.nanoTime() - start);
    }
 else {
      statistics.increaseCacheMisses(1);
    }
  }
  return result;
}
