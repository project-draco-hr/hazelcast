{
  this.name=name;
  this.partitionId=partitionId;
  this.partitionCount=nodeEngine.getPartitionService().getPartitionCount();
  this.nodeEngine=nodeEngine;
  this.cacheService=cacheService;
  this.cacheConfig=cacheService.getCacheConfig(name);
  if (cacheConfig == null) {
    throw new CacheNotExistsException("Cache is already destroyed or not created yet, on " + nodeEngine.getLocalMember());
  }
  this.records=createRecordCacheMap();
  if (cacheConfig.getCacheLoaderFactory() != null) {
    final Factory<CacheLoader> cacheLoaderFactory=cacheConfig.getCacheLoaderFactory();
    cacheLoader=cacheLoaderFactory.create();
  }
  if (cacheConfig.getCacheWriterFactory() != null) {
    final Factory<CacheWriter> cacheWriterFactory=cacheConfig.getCacheWriterFactory();
    cacheWriter=cacheWriterFactory.create();
  }
  if (cacheConfig.isStatisticsEnabled()) {
    this.statistics=cacheService.createCacheStatIfAbsent(name);
  }
  final Factory<ExpiryPolicy> expiryPolicyFactory=cacheConfig.getExpiryPolicyFactory();
  this.defaultExpiryPolicy=expiryPolicyFactory.create();
  this.evictionPolicy=cacheConfig.getEvictionPolicy() != null ? cacheConfig.getEvictionPolicy() : EvictionPolicy.NONE;
  this.maxSizeConfig=cacheConfig.getMaxSizeConfig();
  this.evictionEnabled=evictionPolicy != EvictionPolicy.NONE;
  this.maxSizeChecker=createCacheMaxSizeChecker(maxSizeConfig);
  this.evictionPolicyEvaluator=creatEvictionPolicyEvaluator(evictionPolicy);
  this.evictionChecker=createEvictionChecker();
  this.evictionStrategy=creatEvictionStrategy();
  if (maxSizeConfig == null) {
    throw new IllegalStateException("Max-Size config must be configured");
  }
  if (evictionPolicy == null || evictionPolicy == EvictionPolicy.NONE) {
    throw new IllegalStateException("Eviction policy cannot be null or NONE");
  }
}
