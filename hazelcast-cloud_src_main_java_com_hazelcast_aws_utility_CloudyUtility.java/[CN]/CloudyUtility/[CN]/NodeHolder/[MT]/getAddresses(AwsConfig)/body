{
  final Map<String,String> privatePublicPairs=new LinkedHashMap<String,String>();
  if (node == null) {
    return privatePublicPairs;
  }
  for (  NodeHolder childHolder : getSubNodes("item")) {
    final String state=getState(childHolder);
    final String privateIp=getIp("privateipaddress",childHolder);
    final String publicIp=getIp("ipaddress",childHolder);
    final String instanceName=getInstanceName(childHolder);
    if (privateIp != null) {
      final Node child=childHolder.getNode();
      if (!acceptState(state)) {
        LOGGER.finest(format("Ignoring EC2 instance [%s][%s] reason:" + " the instance is not running but %s",instanceName,privateIp,state));
      }
 else       if (!acceptTag(awsConfig,child)) {
        LOGGER.finest(format("Ignoring EC2 instance [%s][%s] reason:" + " tag-key/tag-value don't match",instanceName,privateIp));
      }
 else       if (!acceptGroupName(awsConfig,child)) {
        LOGGER.finest(format("Ignoring EC2 instance [%s][%s] reason:" + " security-group-name doesn't match",instanceName,privateIp));
      }
 else {
        privatePublicPairs.put(privateIp,publicIp);
        LOGGER.finest(format("Accepting EC2 instance [%s][%s]",instanceName,privateIp));
      }
    }
  }
  return privatePublicPairs;
}
