{
  HazelcastInstance[] cluster=createHazelcastInstanceFactory(2).newInstances();
  HazelcastInstance local=cluster[0];
  HazelcastInstance remote=cluster[1];
  OperationService operationService=getOperationService(local);
  int outerPartitionId=getPartitionId(remote);
  int innerPartitionId=0;
  for (; innerPartitionId < remote.getPartitionService().getPartitions().size(); innerPartitionId++) {
    if (innerPartitionId == outerPartitionId) {
      continue;
    }
    if (!getPartitionService(remote).getPartition(innerPartitionId).isLocal()) {
      continue;
    }
    if (mappedToSameThread(operationService,outerPartitionId,innerPartitionId)) {
      break;
    }
  }
  InnerOperation innerOperation=new InnerOperation(response,innerPartitionId);
  OuterOperation outerOperation=new OuterOperation(innerOperation,outerPartitionId);
  InternalCompletableFuture f=operationService.invokeOnPartition(null,outerOperation,outerOperation.getPartitionId());
  assertEquals(response,f.getSafely());
}
