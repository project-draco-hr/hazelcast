{
  final HazelcastInstance hz=Hazelcast.getDefaultInstance();
  final IQueue q=hz.getQueue("issue99TestQueueTakeAndDuringRollback");
  q.offer(1L);
  Thread t1=new Thread(){
    public void run(){
      Transaction tx=Hazelcast.getTransaction();
      try {
        tx.begin();
        q.take();
        sleep(1000);
        throw new RuntimeException();
      }
 catch (      InterruptedException e) {
        fail(e.getMessage());
      }
catch (      Exception e) {
        tx.rollback();
      }
    }
  }
;
  final AtomicBoolean fail=new AtomicBoolean(false);
  Thread t2=new Thread(){
    public void run(){
      Transaction tx=Hazelcast.getTransaction();
      try {
        tx.begin();
        q.take();
        tx.commit();
        fail.set(false);
      }
 catch (      Exception e) {
        tx.rollback();
        e.printStackTrace();
        fail.set(true);
      }
    }
  }
;
  t1.start();
  t2.start();
  t2.join();
  assertFalse("Queue take failed after rollback!",fail.get());
}
