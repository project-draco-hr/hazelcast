{
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  final int total=10;
  final Collection<Integer> results=new ArrayList<Integer>(5);
  final HazelcastInstance hz1=factory.newHazelcastInstance(new Config());
  final CountDownLatch latchOffer=new CountDownLatch(1);
  final CountDownLatch latchTake=new CountDownLatch(1);
  new Thread(new Runnable(){
    public void run(){
      try {
        for (int i=0; i < total; i++) {
          results.add((Integer)hz1.getQueue("q").take());
        }
        latchTake.countDown();
      }
 catch (      InterruptedException e) {
        throw new RuntimeException(e);
      }
    }
  }
).start();
  final HazelcastInstance hz2=factory.newHazelcastInstance(new Config());
  new Thread(new Runnable(){
    public void run(){
      for (int i=0; i < total; i++) {
        hz2.getQueue("q").offer(i);
      }
      latchOffer.countDown();
    }
  }
).start();
  Assert.assertTrue(latchOffer.await(100,TimeUnit.SECONDS));
  Assert.assertTrue(latchTake.await(10,TimeUnit.SECONDS));
  Assert.assertTrue(hz1.getQueue("q").isEmpty());
  hz1.shutdown();
  Assert.assertTrue(hz2.getQueue("q").isEmpty());
  final Object[] objects=new Object[total];
  for (int i=0; i < total; i++) {
    objects[i]=i;
  }
  assertArrayEquals(objects,results.toArray());
}
