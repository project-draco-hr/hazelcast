{
  final Collection<MemberImpl> members=clientContext.getClusterService().getMemberList();
  final HazelcastClientInstanceImpl client=(HazelcastClientInstanceImpl)clientContext.getHazelcastInstance();
  final Collection<Future> futures=new ArrayList<Future>();
  for (  MemberImpl member : members) {
    try {
      final Address address=member.getAddress();
      Data configData=toData(cacheEntryListenerConfiguration);
      final ClientMessage request=CacheListenerRegistrationParameters.encode(nameWithPrefix,configData,isRegister,address.getHost(),address.getPort());
      final ClientInvocation invocation=new ClientInvocation(client,request,address);
      final Future<SerializableCollection> future=invocation.invoke();
      futures.add(future);
    }
 catch (    Exception e) {
      ExceptionUtil.sneakyThrow(e);
    }
  }
}
