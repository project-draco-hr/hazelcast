{
  final String mapName=randomMapName();
  final Config config=new Config();
  config.getMapConfig(mapName).setBackupCount(0);
  final HazelcastInstance instance1=hazelcastFactory.newHazelcastInstance(config);
  final HazelcastInstance instance2=hazelcastFactory.newHazelcastInstance(config);
  final ClientConfig clientConfig=new ClientConfig();
  clientConfig.getNetworkConfig().setSmartRouting(false);
  final HazelcastInstance client=hazelcastFactory.newHazelcastClient(clientConfig);
  warmUpPartitions(instance1,instance2,client);
  final HazelcastClientInstanceImpl clientInstanceImpl=getHazelcastClientInstanceImpl(client);
  final Address clientOwnerAddress=clientInstanceImpl.getClientClusterService().getOwnerConnectionAddress();
  final HazelcastInstance other=getAddress(instance1).equals(clientOwnerAddress) ? instance2 : instance1;
  final EventCollectingMapPartitionLostListener listener=new EventCollectingMapPartitionLostListener(0);
  client.getMap(mapName).addPartitionLostListener(listener);
  assertRegistrationsSizeEventually(instance1,mapName,1);
  assertRegistrationsSizeEventually(instance2,mapName,1);
  final MapService mapService=getNode(other).getNodeEngine().getService(SERVICE_NAME);
  final int partitionId=5;
  mapService.onPartitionLost(new InternalPartitionLostEvent(partitionId,0,null));
  assertMapPartitionLostEventEventually(listener,partitionId);
}
