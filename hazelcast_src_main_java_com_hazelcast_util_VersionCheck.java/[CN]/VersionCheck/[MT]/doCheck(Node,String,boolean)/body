{
  String downloadId="source";
  InputStream is=null;
  try {
    is=getClass().getClassLoader().getResourceAsStream("hazelcast-download.properties");
    if (is != null) {
      final Properties properties=new Properties();
      properties.load(is);
      downloadId=properties.getProperty("hazelcastDownloadId");
    }
  }
 catch (  IOException ignored) {
    EmptyStatement.ignore(ignored);
  }
 finally {
    IOUtil.closeResource(is);
  }
  NativeMemoryConfig memoryConfig=hazelcastNode.getConfig().getNativeMemoryConfig();
  final ClusterServiceImpl clusterService=hazelcastNode.getClusterService();
  long totalNativeMemorySize=clusterService.getSize(DATA_MEMBER_SELECTOR) * memoryConfig.getSize().bytes();
  String nativeMemoryParameter=(isEnterprise) ? Long.toString(MemoryUnit.BYTES.toGigaBytes(totalNativeMemorySize)) : "0";
  Map<ClientType,Integer> clusterClientStats=hazelcastNode.clientEngine.getConnectedClientStats();
  RuntimeMXBean runtimeMxBean=ManagementFactory.getRuntimeMXBean();
  Long clusterUpTime=clusterService.getClusterClock().getClusterUpTime();
  VersionCheckParameterCreator parameterCreator=new VersionCheckParameterCreator();
  parameterCreator.addParam("version",version);
  parameterCreator.addParam("m",hazelcastNode.getLocalMember().getUuid());
  parameterCreator.addParam("e",Boolean.toString(isEnterprise));
  parameterCreator.addParam("l",MD5Util.toMD5String(hazelcastNode.getConfig().getLicenseKey()));
  parameterCreator.addParam("p",downloadId);
  parameterCreator.addParam("c",clusterService.getClusterId());
  parameterCreator.addParam("crsz",convertToLetter(clusterService.getMembers().size()));
  parameterCreator.addParam("cssz",convertToLetter(hazelcastNode.clientEngine.getClientEndpointCount()));
  parameterCreator.addParam("hdgb",nativeMemoryParameter);
  parameterCreator.addParam("ccpp",Integer.toString(clusterClientStats.get(ClientType.CPP)));
  parameterCreator.addParam("cdn",Integer.toString(clusterClientStats.get(ClientType.CSHARP)));
  parameterCreator.addParam("cjv",Integer.toString(clusterClientStats.get(ClientType.JAVA)));
  parameterCreator.addParam("cuptm",Long.toString(clusterUpTime));
  parameterCreator.addParam("nuptm",Long.toString(runtimeMxBean.getUptime()));
  String urlStr=BASE_VERSION_CHECK_URL + parameterCreator.build();
  fetchWebService(urlStr);
  return parameterCreator.getParameters();
}
