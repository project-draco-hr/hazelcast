{
  Address thisAddress=node.getThisAddress();
  for (  InternalPartition partition : partitions) {
    if (partition.isLocal()) {
      int partitionId=partition.getPartitionId();
      long[] replicaVersions=getReplicaVersions(node,partitionId);
      for (int replica=1; replica <= actualBackupCount; replica++) {
        Address address=partition.getReplicaAddress(replica);
        assertNotNull("Replica: " + replica + " is not found in "+ partition,address);
        HazelcastInstance backupInstance=factory.getInstance(address);
        assertNotNull("Instance for " + address + " is not found! -> "+ partition,backupInstance);
        Node backupNode=getNode(backupInstance);
        assertNotNull(backupNode);
        long[] backupReplicaVersions=getReplicaVersions(backupNode,partitionId);
        assertNotNull("Versions null on " + backupNode.address + ", partitionId: "+ partitionId,backupReplicaVersions);
        for (int i=replica - 1; i < actualBackupCount; i++) {
          assertEquals("Replica version mismatch! Owner: " + thisAddress + ", Backup: "+ address+ ", Partition: "+ partition+ ", Replica: "+ (i + 1)+ " owner versions: "+ Arrays.toString(replicaVersions)+ " backup versions: "+ Arrays.toString(backupReplicaVersions),replicaVersions[i],backupReplicaVersions[i]);
        }
        TestMigrationAwareService backupService=getService(backupInstance);
        assertEquals("Wrong data! Partition: " + partitionId + ", replica: "+ replica+ " on "+ address+ " has stale value! "+ Arrays.toString(backupReplicaVersions),service.get(partitionId),backupService.get(partitionId));
      }
    }
  }
}
