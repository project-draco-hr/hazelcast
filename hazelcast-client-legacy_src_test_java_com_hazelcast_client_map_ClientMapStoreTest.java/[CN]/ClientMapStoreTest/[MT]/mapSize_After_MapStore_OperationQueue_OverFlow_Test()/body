{
  Config config=new Config();
  MapConfig mapConfig=new MapConfig();
  MapStoreConfig mapStoreConfig=new MapStoreConfig();
  MapStoreBackup store=new MapStoreBackup();
  int delaySeconds=Integer.MAX_VALUE;
  mapStoreConfig.setEnabled(true);
  mapStoreConfig.setImplementation(store);
  mapStoreConfig.setWriteDelaySeconds(delaySeconds);
  mapStoreConfig.setWriteCoalescing(false);
  mapConfig.setName(MAP_NAME);
  mapConfig.setMapStoreConfig(mapStoreConfig);
  config.addMapConfig(mapConfig);
  HazelcastInstance server=hazelcastFactory.newHazelcastInstance(config);
  HazelcastInstance client=hazelcastFactory.newHazelcastClient();
  IMap map=client.getMap(MAP_NAME);
  int maxCapacity=getMaxCapacity(server);
  List<Future> futures=new ArrayList<Future>(maxCapacity * 2);
  for (int i=0; i < maxCapacity * 2; i++) {
    Future future=map.putAsync(i,i);
    futures.add(future);
  }
  int success=0;
  for (  Future future : futures) {
    try {
      future.get();
      success++;
    }
 catch (    ExecutionException e) {
      assertInstanceOf(ReachedMaxSizeException.class,e);
    }
  }
  assertEquals(success,maxCapacity);
  assertEquals(map.size(),maxCapacity);
}
