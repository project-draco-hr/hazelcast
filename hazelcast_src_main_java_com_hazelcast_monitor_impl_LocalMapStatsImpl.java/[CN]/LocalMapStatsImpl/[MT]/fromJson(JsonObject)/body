{
  getCount=getLong(json,"getCount",-1L);
  putCount=getLong(json,"putCount",-1L);
  removeCount=getLong(json,"removeCount",-1L);
  numberOfOtherOperations=getLong(json,"numberOfOtherOperations",-1L);
  numberOfEvents=getLong(json,"numberOfEvents",-1L);
  lastAccessTime=getLong(json,"lastAccessTime",-1L);
  lastUpdateTime=getLong(json,"lastUpdateTime",-1L);
  totalGetLatencies=getLong(json,"totalGetLatencies",-1L);
  totalPutLatencies=getLong(json,"totalPutLatencies",-1L);
  totalRemoveLatencies=getLong(json,"totalRemoveLatencies",-1L);
  maxGetLatency=getLong(json,"maxGetLatency",-1L);
  maxPutLatency=getLong(json,"maxPutLatency",-1L);
  maxRemoveLatency=getLong(json,"maxRemoveLatency",-1L);
  hits=getLong(json,"hits",-1L);
  ownedEntryCount=getLong(json,"ownedEntryCount",-1L);
  backupEntryCount=getLong(json,"backupEntryCount",-1L);
  backupCount=getInt(json,"backupCount",-1);
  ownedEntryMemoryCost=getLong(json,"ownedEntryMemoryCost",-1L);
  backupEntryMemoryCost=getLong(json,"backupEntryMemoryCost",-1L);
  creationTime=getLong(json,"creationTime",-1L);
  lockedEntryCount=getLong(json,"lockedEntryCount",-1L);
  dirtyEntryCount=getLong(json,"dirtyEntryCount",-1L);
  heapCost=getLong(json,"heapCost",-1L);
  JsonValue jsonNearCacheStats=json.get("nearCacheStats");
  if (jsonNearCacheStats != null) {
    nearCacheStats=new NearCacheStatsImpl();
    nearCacheStats.fromJson(jsonNearCacheStats.asObject());
  }
}
