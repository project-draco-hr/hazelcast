{
  Config config=buildConfig();
  CountingManagedContext context=(CountingManagedContext)config.getManagedContext();
  HazelcastInstance h1=Hazelcast.newHazelcastInstance(config);
  HazelcastInstance h2=Hazelcast.newHazelcastInstance(config);
  HazelcastInstance h3=Hazelcast.newHazelcastInstance(config);
  HazelcastInstance client=HazelcastClient.newHazelcastClient(null);
  IMap<Integer,Integer> m1=client.getMap(MAP_NAME);
  for (int i=0; i < 100; i++) {
    m1.put(i,i);
  }
  JobTracker tracker=client.getJobTracker("default");
  Job<Integer,Integer> job=tracker.newJob(KeyValueSource.fromMap(m1));
  CompletableFuture<Integer> future=job.mapper(new GroupingTestMapper()).reducer(new TestReducerFactory(client,context)).submit(new TestCollator());
  int result=future.get();
  int expectedResult=0;
  for (int i=0; i < 100; i++) {
    expectedResult+=i;
  }
  for (int i=0; i < 4; i++) {
    assertEquals(expectedResult,result);
  }
  Set<String> hazelcastNames=context.getHazelcastNames();
  assertEquals(1,hazelcastNames.size());
}
