{
  Config config=buildConfig();
  CountingManagedContext context=(CountingManagedContext)config.getManagedContext();
  HazelcastInstance h1=Hazelcast.newHazelcastInstance(config);
  HazelcastInstance h2=Hazelcast.newHazelcastInstance(config);
  HazelcastInstance h3=Hazelcast.newHazelcastInstance(config);
  HazelcastInstance client=HazelcastClient.newHazelcastClient(null);
  IMap<Integer,Integer> m1=client.getMap(MAP_NAME);
  for (int i=0; i < 10000; i++) {
    m1.put(i,i);
  }
  JobTracker tracker=client.getJobTracker("default");
  Job<Integer,Integer> job=tracker.newJob(KeyValueSource.fromMap(m1));
  CompletableFuture<Integer> future=job.keyPredicate(new KeyPredicate<Integer>(){
    @Override public boolean evaluate(    Integer key){
      return key == 50;
    }
  }
).mapper(new TestMapper()).submit(new GroupingTestCollator());
  int result=future.get();
  assertEquals(50,result);
  Set<String> hazelcastNames=context.getHazelcastNames();
  assertEquals(0,hazelcastNames.size());
}
