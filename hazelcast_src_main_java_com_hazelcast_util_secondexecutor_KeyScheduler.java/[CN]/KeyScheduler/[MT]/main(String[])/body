{
  SecondExecutorFactory secondExecutorFactory=new SecondExecutorFactory(){
    public SecondExecutor newSecondExecutor(){
      return new SecondBulkExecutor(){
        public void executeAll(        ConcurrentMap<Object,Object> entries){
          for (          Object o : entries.values()) {
            System.out.println(o);
          }
        }
        public void endSecond(){
        }
      }
;
    }
  }
;
  final ScheduledExecutorService ses=Executors.newScheduledThreadPool(10);
  final KeyScheduler keyScheduler=new KeyScheduler(ses,secondExecutorFactory);
  new Thread(){
    @Override public synchronized void run(){
      while (true) {
        System.out.println(keyScheduler);
        try {
          Thread.sleep(1000);
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
      }
    }
  }
.start();
  while (true) {
    for (int i=0; i < 10; i++) {
      schedule(true,keyScheduler,i,100);
    }
  }
}
