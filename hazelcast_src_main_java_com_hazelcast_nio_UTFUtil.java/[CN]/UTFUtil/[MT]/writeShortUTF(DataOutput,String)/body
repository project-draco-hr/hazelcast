{
  final int stringLen=str.length();
  int utfLength=0;
  int c, count=0;
  for (int i=0; i < stringLen; i++) {
    c=str.charAt(i);
    if ((c >= 0x0001) && (c <= 0x007F)) {
      utfLength++;
    }
 else     if (c > 0x07FF) {
      utfLength+=3;
    }
 else {
      utfLength+=2;
    }
  }
  if (utfLength > 65535) {
    throw new UTFDataFormatException("encoded string too long:" + utfLength + " bytes");
  }
  out.writeShort(utfLength);
  int i;
  final byte[] byteArray=new byte[utfLength];
  for (i=0; i < stringLen; i++) {
    c=str.charAt(i);
    if (!((c >= 0x0001) && (c <= 0x007F)))     break;
    byteArray[count++]=(byte)c;
  }
  for (; i < stringLen; i++) {
    c=str.charAt(i);
    if ((c >= 0x0001) && (c <= 0x007F)) {
      byteArray[count++]=(byte)c;
    }
 else     if (c > 0x07FF) {
      byteArray[count++]=(byte)(0xE0 | ((c >> 12) & 0x0F));
      byteArray[count++]=(byte)(0x80 | ((c >> 6) & 0x3F));
      byteArray[count++]=(byte)(0x80 | ((c) & 0x3F));
    }
 else {
      byteArray[count++]=(byte)(0xC0 | ((c >> 6) & 0x1F));
      byteArray[count++]=(byte)(0x80 | ((c) & 0x3F));
    }
  }
  out.write(byteArray,0,utfLength);
}
