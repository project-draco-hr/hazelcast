{
  if (source == null) {
    this.source=nodeEngine.getHazelcastInstance().getDistributedObject(CacheService.SERVICE_NAME,cacheName);
  }
  final CacheEntryEventImpl<K,V> event=new CacheEntryEventImpl<K,V>(source,eventType,key,newValue,oldValue);
switch (eventType) {
case CREATED:
    if (this.cacheEntryCreatedListener != null) {
      this.cacheEntryCreatedListener.onCreated(createEventWrapper(event));
    }
  break;
case UPDATED:
if (this.cacheEntryUpdatedListener != null) {
  this.cacheEntryUpdatedListener.onUpdated(createEventWrapper(event));
}
break;
case REMOVED:
if (this.cacheEntryRemovedListener != null) {
this.cacheEntryRemovedListener.onRemoved(createEventWrapper(event));
}
break;
case EXPIRED:
if (this.cacheEntryExpiredListener != null) {
this.cacheEntryExpiredListener.onExpired(createEventWrapper(event));
}
break;
default :
throw new IllegalArgumentException("Invalid event type: " + eventType.name());
}
}
