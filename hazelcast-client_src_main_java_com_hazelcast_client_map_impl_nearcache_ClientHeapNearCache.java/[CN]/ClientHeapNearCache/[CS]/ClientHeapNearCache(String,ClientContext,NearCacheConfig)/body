{
  this.cache=new ConcurrentHashMap<K,NearCacheRecord>();
  this.mapName=mapName;
  this.executionService=(ClientExecutionServiceImpl)context.getExecutionService();
  this.serializationService=context.getSerializationService();
  this.inMemoryFormat=nearCacheConfig.getInMemoryFormat();
  if (inMemoryFormat != InMemoryFormat.BINARY && inMemoryFormat != InMemoryFormat.OBJECT) {
    throw new IllegalArgumentException("Illegal in-memory-format: " + inMemoryFormat);
  }
  EvictionConfig evictionConfig=initDefaultMaxSize(nearCacheConfig.getEvictionConfig());
  this.maxSize=evictionConfig.getSize();
  this.maxIdleMillis=TimeUnit.SECONDS.toMillis(nearCacheConfig.getMaxIdleSeconds());
  this.timeToLiveMillis=TimeUnit.SECONDS.toMillis(nearCacheConfig.getTimeToLiveSeconds());
  this.invalidateOnChange=nearCacheConfig.isInvalidateOnChange();
  this.evictionPolicy=evictionConfig.getEvictionPolicy();
  this.canExpire=new AtomicBoolean(true);
  this.canEvict=new AtomicBoolean(true);
  this.stats=new NearCacheStatsImpl();
  this.selectedComparator=NearCacheRecord.getComparator(evictionPolicy);
  this.lastExpiration=Clock.currentTimeMillis();
}
