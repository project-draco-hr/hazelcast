{
  Address deadAddress=deadMember.getAddress();
  Address thisAddress=concurrentMapManager.getThisAddress();
  if (deadAddress == null || deadAddress.equals(thisAddress)) {
    return;
  }
  if (!hasStorageMember()) {
    reset();
  }
  concurrentMapManager.partitionServiceImpl.reset();
  checkMigratingPartitionForDead(deadAddress);
  int[] indexesOfDead=new int[partitions.length];
  for (  PartitionInfo partition : partitions) {
    indexesOfDead[partition.getPartitionId()]=partition.getReplicaIndexOf(deadAddress);
  }
  if (!deadMember.isLiteMember()) {
    clearTaskQueues();
    for (    PartitionInfo partition : partitions) {
      while (partition.onDeadAddress(deadAddress))       ;
    }
  }
  fixCMapsForDead(deadAddress);
  fixReplicasAndPartitionsForDead(deadMember,indexesOfDead);
}
