{
  partitionServiceImpl.clearRealPartitions();
  Address deadAddress=deadMember.getAddress();
  if (deadAddress == null || deadAddress.equals(thisAddress)) {
    return;
  }
  Set<Integer> blocksOwnedAfterDead=new HashSet<Integer>();
  for (  Block block : blocks) {
    if (block != null) {
      syncForDead(deadMember,block);
      if (thisAddress.equals(block.getOwner())) {
        blocksOwnedAfterDead.add(block.getBlockId());
      }
    }
  }
  Collection<CMap> cmaps=concurrentMapManager.maps.values();
  for (  CMap cmap : cmaps) {
    Object[] records=cmap.mapRecords.values().toArray();
    for (    Object recordObject : records) {
      if (recordObject != null) {
        Record record=(Record)recordObject;
        cmap.onDisconnect(record,deadAddress);
        if (record.isActive() && blocksOwnedAfterDead.contains(record.getBlockId())) {
          cmap.markAsDirty(record);
          cmap.updateIndexes(record);
        }
      }
    }
  }
  onMembershipChange(false);
}
