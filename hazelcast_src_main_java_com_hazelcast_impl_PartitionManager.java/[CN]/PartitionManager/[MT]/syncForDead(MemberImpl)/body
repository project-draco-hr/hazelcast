{
  Address deadAddress=deadMember.getAddress();
  for (  PartitionInfo partition : partitions) {
    partition.onDeadAddress(deadAddress);
  }
  Address thisAddress=concurrentMapManager.getThisAddress();
  if (deadAddress == null || deadAddress.equals(thisAddress)) {
    return;
  }
  Collection<CMap> cmaps=concurrentMapManager.maps.values();
  for (  CMap cmap : cmaps) {
    cmap.onDisconnect(deadAddress);
    Object[] records=cmap.mapRecords.values().toArray();
    for (    Object recordObject : records) {
      if (recordObject != null) {
        Record record=(Record)recordObject;
        if (record.isLocked() && cmap.isMapForQueue()) {
          if (deadAddress.equals(record.getLock().getLockAddress())) {
            cmap.sendKeyToMaster(record.getKeyData());
          }
        }
        cmap.onDisconnect(record,deadAddress);
        if (record.isActive() && thisAddress.equals(partitions[record.getBlockId()].getOwner())) {
          cmap.markAsDirty(record);
          cmap.updateIndexes(record);
        }
      }
    }
  }
  if (concurrentMapManager.isMaster()) {
    System.out.println("-====== NOW ====");
    System.out.println(this);
    sendClusterRuntimeState();
    initRepartitioning();
  }
}
