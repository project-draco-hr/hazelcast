{
  if (!initialized)   return false;
  if (concurrentMapManager.isLiteMember())   return false;
  int maxBackupCount=getMaxBackupCount();
  if (maxBackupCount == 0)   return false;
  Set<MemberImpl> members=new HashSet<MemberImpl>();
  for (  Member member : concurrentMapManager.node.getClusterImpl().getMembers()) {
    members.add((MemberImpl)member);
  }
  MemberGroupFactory mgf=memberGroupFactory;
  final Collection<MemberGroup> memberGroups=mgf.createMemberGroups(members);
  if (memberGroups.size() < 2)   return false;
  int groups=0;
  for (  MemberGroup memberGroup : memberGroups) {
    if (memberGroup.size() > 0) {
      groups++;
    }
  }
  if (groups < 2)   return false;
  final int size=immediateTasksQueue.size();
  if (size == 0) {
    for (    PartitionInfo partition : partitions) {
      if (partition.getReplicaAddress(1) == null) {
        logger.log(Level.WARNING,"Waiting for safe-backup of partition: " + partition.getPartitionId());
        return true;
      }
    }
  }
 else {
    logger.log(Level.WARNING,"Waiting for ongoing immediate migration tasks: " + size);
    return true;
  }
  return false;
}
