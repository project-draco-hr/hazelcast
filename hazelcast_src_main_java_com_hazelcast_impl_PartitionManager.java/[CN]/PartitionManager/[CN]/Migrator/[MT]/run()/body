{
  try {
    if (!concurrentMapManager.node.isActive())     return;
    if (migrationRequestTask.isMigration() && migrationRequestTask.getReplicaIndex() == 0) {
      concurrentMapManager.enqueueAndWait(new Processable(){
        public void process(){
          concurrentMapManager.sendMigrationEvent(true,migrationRequestTask);
        }
      }
,100);
    }
    System.out.println("Migrating " + migrationRequestTask);
    Object result=null;
    MemberImpl fromMember=null;
    if (migrationRequestTask.isMigration()) {
      fromMember=getMember(migrationRequestTask.getFromAddress());
    }
 else {
      fromMember=getMember(partitions[migrationRequestTask.getPartitionId()].getOwner());
    }
    result=Boolean.FALSE;
    if (fromMember != null) {
      migrationRequestTask.setFromAddress(fromMember.getAddress());
      DistributedTask task=new DistributedTask(migrationRequestTask,fromMember);
      Future future=concurrentMapManager.node.factory.getExecutorService().submit(task);
      try {
        result=future.get(600,TimeUnit.SECONDS);
      }
 catch (      Throwable e) {
        logger.log(Level.WARNING,"Failed migrating to " + fromMember);
      }
    }
 else {
      result=Boolean.TRUE;
    }
    if (Boolean.TRUE.equals(result)) {
      concurrentMapManager.enqueueAndWait(new Processable(){
        public void process(){
          int partitionId=migrationRequestTask.getPartitionId();
          int replicaIndex=migrationRequestTask.getReplicaIndex();
          PartitionInfo partition=partitions[partitionId];
          if (PartitionInfo.MAX_REPLICA_COUNT < replicaIndex) {
            String msg="Migrated [" + partitionId + ":"+ replicaIndex+ "] but cannot assign. Length:"+ PartitionInfo.MAX_REPLICA_COUNT;
            logger.log(Level.WARNING,msg);
          }
 else {
            Address newOwner=migrationRequestTask.getToAddress();
            partition.setReplicaAddress(replicaIndex,newOwner);
            if (replicaIndex == 0) {
              MemberImpl ownerMember=concurrentMapManager.getMember(newOwner);
              if (ownerMember != null) {
                concurrentMapManager.partitionServiceImpl.setOwner(partition.getPartitionId(),ownerMember);
              }
              concurrentMapManager.sendMigrationEvent(false,migrationRequestTask);
            }
            checkCurrentMigrations(partition);
            sendClusterRuntimeState();
          }
        }
      }
,10000);
    }
  }
 catch (  Throwable ignored) {
  }
}
