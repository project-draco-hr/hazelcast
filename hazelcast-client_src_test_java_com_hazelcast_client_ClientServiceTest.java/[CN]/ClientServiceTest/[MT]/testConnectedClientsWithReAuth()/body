{
  final ClientConfig clientConfig=new ClientConfig();
  clientConfig.getNetworkConfig().setConnectionAttemptPeriod(1000 * 10);
  final CountDownLatch countDownLatch=new CountDownLatch(2);
  ;
  clientConfig.addListenerConfig(new ListenerConfig(new LifecycleListener(){
    @Override public void stateChanged(    LifecycleEvent event){
      if (event.getState() == LifecycleEvent.LifecycleState.CLIENT_CONNECTED) {
        countDownLatch.countDown();
      }
    }
  }
));
  HazelcastInstance instance=Hazelcast.newHazelcastInstance();
  final HazelcastInstance client=HazelcastClient.newHazelcastClient(clientConfig);
  instance.shutdown();
  Thread.sleep(1000);
  final HazelcastInstance restartedInstance=Hazelcast.newHazelcastInstance();
  client.getMap(randomMapName()).size();
  assertOpenEventually(countDownLatch);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      assertEquals(1,restartedInstance.getClientService().getConnectedClients().size());
    }
  }
);
}
