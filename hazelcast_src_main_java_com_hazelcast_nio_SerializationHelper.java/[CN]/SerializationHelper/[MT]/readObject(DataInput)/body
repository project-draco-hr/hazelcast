{
  byte type=in.readByte();
  if (type == 0) {
    return null;
  }
 else   if (type == 1) {
    return in.readInt();
  }
 else   if (type == 2) {
    return in.readInt();
  }
 else   if (type == 3) {
    return in.readUTF();
  }
 else   if (type == 4) {
    return in.readDouble();
  }
 else   if (type == 5) {
    return in.readFloat();
  }
 else   if (type == 6) {
    return in.readBoolean();
  }
 else   if (type == 7) {
    return new Date(in.readLong());
  }
 else   if (type == 8) {
    DataSerializable ds=null;
    try {
      ds=(DataSerializable)Class.forName(in.readUTF()).newInstance();
    }
 catch (    Throwable e) {
      throw new IOException(e.getMessage());
    }
    ds.readData(in);
    return ds;
  }
 else   if (type == 9) {
    int len=in.readInt();
    byte[] buf=new byte[len];
    in.readFully(buf);
    ObjectInputStream oin=new ObjectInputStream(new ByteArrayInputStream(buf));
    try {
      return oin.readObject();
    }
 catch (    ClassNotFoundException e) {
      e.printStackTrace();
    }
    oin.close();
  }
 else {
    throw new IOException("Unknown object type=" + type);
  }
  return null;
}
