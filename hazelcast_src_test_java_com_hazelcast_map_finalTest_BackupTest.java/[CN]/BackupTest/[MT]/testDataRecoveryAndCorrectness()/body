{
  StaticNodeFactory nodeFactory=new StaticNodeFactory(4);
  final int size=10000;
  HazelcastInstance h1=nodeFactory.newHazelcastInstance(new Config());
  assertEquals(1,h1.getCluster().getMembers().size());
  IMap map1=h1.getMap("default");
  for (int i=0; i < size; i++) {
    map1.put(i,"value" + i);
  }
  assertEquals(size,map1.size());
  HazelcastInstance h2=nodeFactory.newHazelcastInstance(new Config());
  IMap map2=h2.getMap("default");
  for (int i=0; i < 100; i++) {
    assertEquals(size,map1.size());
    assertEquals(size,map2.size());
  }
  HazelcastInstance h3=nodeFactory.newHazelcastInstance(new Config());
  IMap map3=h3.getMap("default");
  for (int i=0; i < 100; i++) {
    assertEquals(size,map1.size());
    assertEquals(size,map2.size());
    assertEquals(size,map3.size());
  }
  assertEquals(3,h3.getCluster().getMembers().size());
  HazelcastInstance h4=nodeFactory.newHazelcastInstance(new Config());
  IMap map4=h4.getMap("default");
  for (int i=0; i < 100; i++) {
    assertEquals(size,map1.size());
    assertEquals(size,map2.size());
    assertEquals(size,map3.size());
    assertEquals(size,map4.size());
  }
  h4.getLifecycleService().shutdown();
  for (int i=0; i < 100; i++) {
    assertEquals(size,map1.size());
    assertEquals(size,map2.size());
    assertEquals(size,map3.size());
  }
  h1.getLifecycleService().shutdown();
  for (int i=0; i < 100; i++) {
    assertEquals(size,map2.size());
    assertEquals(size,map3.size());
  }
  h2.getLifecycleService().shutdown();
  for (int i=0; i < 100; i++) {
    assertEquals(size,map3.size());
  }
}
