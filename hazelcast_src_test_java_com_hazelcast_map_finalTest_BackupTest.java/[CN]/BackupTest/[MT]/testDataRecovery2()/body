{
  StaticNodeFactory nodeFactory=new StaticNodeFactory(3);
  final int size=1000;
  HazelcastInstance h1=nodeFactory.newHazelcastInstance(new Config());
  IMap map1=h1.getMap("default");
  for (int i=0; i < size; i++) {
    map1.put(i,"value" + i);
  }
  assertEquals(size,map1.size());
  HazelcastInstance h2=nodeFactory.newHazelcastInstance(new Config());
  sleep(3000);
  IMap map2=h2.getMap("default");
  assertEquals(size,map1.size());
  assertEquals(size,map2.size());
  assertEquals(size,getTotalOwnedEntryCount(map1,map2));
  assertEquals(size,getTotalBackupEntryCount(map1,map2));
  HazelcastInstance h3=nodeFactory.newHazelcastInstance(new Config());
  IMap map3=h3.getMap("default");
  sleep(3000);
  assertEquals(size,map1.size());
  assertEquals(size,map2.size());
  assertEquals(size,map3.size());
  assertEquals(size,getTotalOwnedEntryCount(map1,map2,map3));
  assertEquals(size,getTotalBackupEntryCount(map1,map2,map3));
  MemberImpl member2=(MemberImpl)h2.getCluster().getLocalMember();
  h2.getLifecycleService().shutdown();
  sleep(5000);
  assertEquals(size,map1.size());
  assertEquals(size,map3.size());
  assertEquals(size,getTotalOwnedEntryCount(map1,map3));
  assertEquals(size,getTotalBackupEntryCount(map1,map3));
  MemberImpl member1=(MemberImpl)h1.getCluster().getLocalMember();
  h1.getLifecycleService().shutdown();
  assertEquals(size,map3.size());
}
