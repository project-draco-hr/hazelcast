{
  for (  Node queryCacheNode : childElements(n)) {
    if ("query-cache".equals(cleanNodeName(queryCacheNode))) {
      NamedNodeMap attrs=queryCacheNode.getAttributes();
      String cacheName=getTextContent(attrs.getNamedItem("name"));
      QueryCacheConfig queryCacheConfig=new QueryCacheConfig(cacheName);
      for (      Node childNode : childElements(queryCacheNode)) {
        String nodeName=cleanNodeName(childNode);
        if ("entry-listeners".equals(nodeName)) {
          for (          Node listenerNode : childElements(childNode)) {
            if ("entry-listener".equals(cleanNodeName(listenerNode))) {
              NamedNodeMap listenerNodeAttributes=listenerNode.getAttributes();
              boolean incValue=getBooleanValue(getTextContent(listenerNodeAttributes.getNamedItem("include-value")));
              boolean local=getBooleanValue(getTextContent(listenerNodeAttributes.getNamedItem("local")));
              String listenerClass=getTextContent(listenerNode);
              queryCacheConfig.addEntryListenerConfig(new EntryListenerConfig(listenerClass,local,incValue));
            }
          }
        }
 else {
          String textContent=getTextContent(childNode);
          if ("include-value".equals(nodeName)) {
            boolean includeValue=getBooleanValue(textContent);
            queryCacheConfig.setIncludeValue(includeValue);
          }
 else           if ("batch-size".equals(nodeName)) {
            int batchSize=getIntegerValue("batch-size",textContent.trim(),QueryCacheConfig.DEFAULT_BATCH_SIZE);
            queryCacheConfig.setBatchSize(batchSize);
          }
 else           if ("buffer-size".equals(nodeName)) {
            int bufferSize=getIntegerValue("buffer-size",textContent.trim(),QueryCacheConfig.DEFAULT_BUFFER_SIZE);
            queryCacheConfig.setBufferSize(bufferSize);
          }
 else           if ("delay-seconds".equals(nodeName)) {
            int delaySeconds=getIntegerValue("delay-seconds",textContent.trim(),QueryCacheConfig.DEFAULT_DELAY_SECONDS);
            queryCacheConfig.setDelaySeconds(delaySeconds);
          }
 else           if ("in-memory-format".equals(nodeName)) {
            String value=textContent.trim();
            queryCacheConfig.setInMemoryFormat(InMemoryFormat.valueOf(upperCaseInternal(value)));
          }
 else           if ("coalesce".equals(nodeName)) {
            boolean coalesce=getBooleanValue(textContent);
            queryCacheConfig.setCoalesce(coalesce);
          }
 else           if ("populate".equals(nodeName)) {
            boolean populate=getBooleanValue(textContent);
            queryCacheConfig.setPopulate(populate);
          }
 else           if ("indexes".equals(nodeName)) {
            queryCacheIndexesHandle(childNode,queryCacheConfig);
          }
 else           if ("predicate".equals(nodeName)) {
            queryCachePredicateHandler(childNode,queryCacheConfig);
          }
 else           if ("eviction".equals(nodeName)) {
            queryCacheConfig.setEvictionConfig(getEvictionConfig(childNode));
          }
        }
      }
      mapConfig.addQueryCacheConfig(queryCacheConfig);
    }
  }
}
