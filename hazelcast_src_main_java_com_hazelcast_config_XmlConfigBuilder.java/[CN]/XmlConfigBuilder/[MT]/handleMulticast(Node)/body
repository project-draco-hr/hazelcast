{
  final JoinConfig join=config.getNetworkConfig().getJoin();
  final NamedNodeMap atts=node.getAttributes();
  final MulticastConfig multicastConfig=join.getMulticastConfig();
  for (int a=0; a < atts.getLength(); a++) {
    final Node att=atts.item(a);
    final String value=getTextContent(att).trim();
    if ("enabled".equals(lowerCaseInternal(att.getNodeName()))) {
      multicastConfig.setEnabled(getBooleanValue(value));
    }
 else     if ("loopbackmodeenabled".equals(lowerCaseInternal(att.getNodeName()))) {
      multicastConfig.setLoopbackModeEnabled(getBooleanValue(value));
    }
  }
  for (  Node n : childElements(node)) {
    final String value=getTextContent(n).trim();
    if ("multicast-group".equals(cleanNodeName(n))) {
      multicastConfig.setMulticastGroup(value);
    }
 else     if ("multicast-port".equals(cleanNodeName(n))) {
      multicastConfig.setMulticastPort(parseInt(value));
    }
 else     if ("multicast-timeout-seconds".equals(cleanNodeName(n))) {
      multicastConfig.setMulticastTimeoutSeconds(parseInt(value));
    }
 else     if ("multicast-time-to-live-seconds".equals(cleanNodeName(n))) {
      multicastConfig.setMulticastTimeToLive(parseInt(value));
    }
 else     if ("multicast-time-to-live".equals(cleanNodeName(n))) {
      multicastConfig.setMulticastTimeToLive(parseInt(value));
    }
 else     if ("trusted-interfaces".equals(cleanNodeName(n))) {
      for (      Node child : childElements(n)) {
        if ("interface".equals(lowerCaseInternal(cleanNodeName(child)))) {
          multicastConfig.addTrustedInterface(getTextContent(child).trim());
        }
      }
    }
  }
}
