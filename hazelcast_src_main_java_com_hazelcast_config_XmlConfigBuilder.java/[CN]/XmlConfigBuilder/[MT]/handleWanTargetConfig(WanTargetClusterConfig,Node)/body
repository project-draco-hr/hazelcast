{
  final String targetChildName=cleanNodeName(targetChild);
  if ("replication-impl".equals(targetChildName)) {
    wanTarget.setReplicationImpl(getTextContent(targetChild));
  }
 else   if ("end-points".equals(targetChildName)) {
    for (    Node address : childElements(targetChild)) {
      final String addressNodeName=cleanNodeName(address);
      if ("address".equals(addressNodeName)) {
        String addressStr=getTextContent(address);
        wanTarget.addEndpoint(addressStr);
      }
    }
  }
 else   if ("acknowledge-type".equals(targetChildName)) {
    String acknowledgeType=getTextContent(targetChild);
    wanTarget.setAcknowledgeType(WanAcknowledgeType.valueOf(upperCaseInternal(acknowledgeType)));
  }
 else   if ("queue-full-behavior".equals(targetChildName)) {
    String queueFullBehavior=getTextContent(targetChild);
    wanTarget.setQueueFullBehavior(WANQueueFullBehavior.valueOf(upperCaseInternal(queueFullBehavior)));
  }
 else   if ("batch-size".equals(targetChildName)) {
    int batchSize=getIntegerValue("batch-size",getTextContent(targetChild));
    wanTarget.setBatchSize(batchSize);
  }
 else   if ("batch-max-delay-millis".equals(targetChildName)) {
    long batchMaxDelayMillis=getLongValue("batch-max-delay-millis",getTextContent(targetChild));
    wanTarget.setBatchMaxDelayMillis(batchMaxDelayMillis);
  }
 else   if ("queue-capacity".equals(targetChildName)) {
    int queueCapacity=getIntegerValue("queue-capacity",getTextContent(targetChild));
    wanTarget.setQueueCapacity(queueCapacity);
  }
 else   if ("response-timeout-millis".equals(targetChildName)) {
    long responseTimeoutMillis=getLongValue("response-timeout-millis",getTextContent(targetChild));
    wanTarget.setResponseTimeoutMillis(responseTimeoutMillis);
  }
}
