{
  String configFile=System.getProperty("hazelcast.config");
  try {
    if (configFile != null) {
      configurationFile=new File(configFile);
      logger.log(Level.INFO,"Using configuration file at " + configurationFile.getAbsolutePath());
      if (!configurationFile.exists()) {
        String msg="Config file at '" + configurationFile.getAbsolutePath() + "' doesn't exist.";
        msg+="\nHazelcast will try to use the hazelcast.xml config file in the working directory.";
        logger.log(Level.WARNING,msg);
        configurationFile=null;
      }
    }
    if (configurationFile == null) {
      configFile="hazelcast.xml";
      configurationFile=new File("hazelcast.xml");
      if (!configurationFile.exists()) {
        configurationFile=null;
      }
    }
    if (configurationFile != null) {
      logger.log(Level.INFO,"Using configuration file at " + configurationFile.getAbsolutePath());
      try {
        in=new FileInputStream(configurationFile);
        configurationUrl=configurationFile.toURI().toURL();
        usingSystemConfig=true;
      }
 catch (      final Exception e) {
        String msg="Having problem reading config file at '" + configFile + "'.";
        msg+="\nException message: " + e.getMessage();
        msg+="\nHazelcast will try to use the hazelcast.xml config file in classpath.";
        logger.log(Level.WARNING,msg);
        in=null;
      }
    }
    if (in == null) {
      logger.log(Level.INFO,"Looking for hazelcast.xml config file in classpath.");
      configurationUrl=Config.class.getClassLoader().getResource("hazelcast.xml");
      if (configurationUrl == null) {
        configurationUrl=Config.class.getClassLoader().getResource("hazelcast-default.xml");
        logger.log(Level.WARNING,"Could not find hazelcast.xml in classpath.\nHazelcast will use hazelcast-default.xml config file in jar.");
        if (configurationUrl == null) {
          logger.log(Level.WARNING,"Could not find hazelcast-default.xml in the classpath!" + "\nThis may be due to a wrong-packaged or corrupted jar file.");
          return;
        }
      }
      logger.log(Level.INFO,"Using configuration file " + configurationUrl.getFile() + " in the classpath.");
      in=configurationUrl.openStream();
      if (in == null) {
        String msg="Having problem reading config file hazelcast-default.xml in the classpath.";
        msg+="\nHazelcast will start with default configuration.";
        logger.log(Level.WARNING,msg);
      }
    }
  }
 catch (  final Exception e) {
    logger.log(Level.SEVERE,"Error while creating configuration",e);
    e.printStackTrace();
  }
}
