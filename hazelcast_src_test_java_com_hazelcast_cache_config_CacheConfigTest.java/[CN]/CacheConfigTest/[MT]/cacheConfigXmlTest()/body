{
  Config config1=new XmlConfigBuilder(configUrl1).build();
  assertEquals("test-group1",config1.getGroupConfig().getName());
  assertEquals("test-pass1",config1.getGroupConfig().getPassword());
  CacheSimpleConfig cacheConfig1=config1.getCacheConfig("cache1");
  assertEquals("com.hazelcast.cache.config.CacheConfigTest$MyCacheLoaderFactory",cacheConfig1.getCacheLoaderFactory());
  assertEquals("com.hazelcast.cache.config.CacheConfigTest$MyCacheWriterFactory",cacheConfig1.getCacheWriterFactory());
  assertEquals("com.hazelcast.cache.config.CacheConfigTest$MyExpirePolicyFactory",cacheConfig1.getExpiryPolicyFactoryConfig().getClassName());
  assertTrue(cacheConfig1.isReadThrough());
  assertTrue(cacheConfig1.isWriteThrough());
  assertTrue(cacheConfig1.isStatisticsEnabled());
  assertTrue(cacheConfig1.isManagementEnabled());
  EvictionConfig evictionConfig=cacheConfig1.getEvictionConfig();
  assertNotNull(evictionConfig);
  assertEquals(EvictionPolicy.LFU,evictionConfig.getEvictionPolicy());
  assertEquals(50,evictionConfig.getSize());
  assertEquals(EvictionConfig.MaxSizePolicy.ENTRY_COUNT,evictionConfig.getMaximumSizePolicy());
  List<CacheSimpleEntryListenerConfig> cacheEntryListeners=cacheConfig1.getCacheEntryListeners();
  assertEquals(2,cacheEntryListeners.size());
  CacheSimpleEntryListenerConfig listenerConfig0=cacheEntryListeners.get(0);
  assertFalse(listenerConfig0.isSynchronous());
  assertFalse(listenerConfig0.isOldValueRequired());
  assertEquals("com.hazelcast.cache.config.CacheConfigTest$MyEntryListenerFactory",listenerConfig0.getCacheEntryListenerFactory());
  assertEquals("com.hazelcast.cache.config.CacheConfigTest$MyEntryEventFilterFactory",listenerConfig0.getCacheEntryEventFilterFactory());
  CacheSimpleEntryListenerConfig listenerConfig1=cacheEntryListeners.get(1);
  assertTrue(listenerConfig1.isSynchronous());
  assertTrue(listenerConfig1.isOldValueRequired());
  assertEquals("com.hazelcast.cache.config.CacheConfigTest$MySyncEntryListenerFactory",listenerConfig1.getCacheEntryListenerFactory());
  assertEquals("com.hazelcast.cache.config.CacheConfigTest$MySyncEntryEventFilterFactory",listenerConfig1.getCacheEntryEventFilterFactory());
  WanReplicationRef wanRefCacheConfig=config1.getCacheConfig("wanRefTestCache").getWanReplicationRef();
  assertEquals("testWanRef",wanRefCacheConfig.getName());
  assertEquals("TestMergePolicy",wanRefCacheConfig.getMergePolicy());
  assertTrue(wanRefCacheConfig.isRepublishingEnabled());
  WanReplicationRef wanRefDisabledRepublishingTestCache=config1.getCacheConfig("wanRefDisabledRepublishingTestCache").getWanReplicationRef();
  assertFalse(wanRefDisabledRepublishingTestCache.isRepublishingEnabled());
  assertTrue(cacheConfig1.isDisablePerEntryInvalidationEvents());
}
