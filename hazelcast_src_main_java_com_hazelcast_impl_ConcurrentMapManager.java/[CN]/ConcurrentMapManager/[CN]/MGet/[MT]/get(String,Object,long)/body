{
  this.keyObject=key;
  final ThreadContext tc=ThreadContext.get();
  TransactionImpl txn=tc.getCallContext().getTransaction();
  if (txn != null && txn.getStatus() == Transaction.TXN_STATUS_ACTIVE) {
    if (txn.has(name,key)) {
      Data value=txn.get(name,key);
      return tc.isClient() ? value : toObject(value);
    }
 else {
      MLock mlock=new MLock();
      boolean locked=mlock.lockAndGetValue(name,key,DEFAULT_TXN_TIMEOUT);
      if (!locked) {
        throwTxTimeoutException(key);
      }
      Object oldObject=null;
      Data oldValue=mlock.oldValue;
      if (oldValue != null) {
        oldObject=tc.isClient() ? oldValue : tc.toObject(oldValue);
        txn.attachPutOp(name,key,oldValue,false);
      }
 else {
        txn.attachPutOp(name,key,null,false);
      }
      return oldObject;
    }
  }
  final CMap cMap=maps.get(name);
  Data dataKey=null;
  if (cMap != null) {
    cMap.incrementGetCount();
    NearCache nearCache=cMap.nearCache;
    if (nearCache != null) {
      Object value=nearCache.get(key);
      if (value != null) {
        return value;
      }
    }
    dataKey=toData(key);
    Record ownedRecord=cMap.getOwnedRecord(dataKey);
    if (ownedRecord != null && ownedRecord.isActive() && ownedRecord.isValid()) {
      long version=ownedRecord.getVersion();
      Object result=null;
      if (tc.isClient()) {
        final Data valueData=ownedRecord.getValueData();
        if (valueData != null && valueData.size() > 0) {
          result=valueData;
        }
      }
 else {
        final Object value=ownedRecord.getValue();
        if (value != null) {
          result=value;
        }
      }
      if (result != null && ownedRecord.getVersion() == version) {
        ownedRecord.setLastAccessed();
        return result;
      }
    }
    if (cMap.isReadBackupData()) {
      final Record record=cMap.mapRecords.get(dataKey);
      if (record != null && record.isActive() && record.isValid()) {
        final Data valueData=record.getValueData();
        if (valueData != null && valueData.size() > 0) {
          return tc.isClient() ? valueData : toObject(valueData);
        }
      }
    }
  }
  if (dataKey == null) {
    dataKey=toData(key);
  }
  Object value=objectCall(CONCURRENT_MAP_GET,name,dataKey,null,timeout,-1);
  if (value instanceof AddressAwareException) {
    rethrowException(request.operation,(AddressAwareException)value);
  }
  return value;
}
