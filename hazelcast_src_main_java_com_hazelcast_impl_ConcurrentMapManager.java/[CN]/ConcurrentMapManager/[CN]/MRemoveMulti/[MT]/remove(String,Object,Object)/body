{
  ThreadContext threadContext=ThreadContext.get();
  TransactionImpl txn=threadContext.getCallContext().getTransaction();
  if (txn != null && txn.getStatus() == Transaction.TXN_STATUS_ACTIVE) {
    if (!txn.has(name,key)) {
      MLock mlock=new MLock();
      boolean locked=mlock.lockAndGetValue(name,key,value,DEFAULT_TXN_TIMEOUT);
      if (!locked)       throwTxTimeoutException(key);
      Data oldValue=mlock.oldValue;
      boolean existingRecord=(oldValue != null);
      txn.attachRemoveOp(name,key,toData(value),!existingRecord);
      return existingRecord;
    }
 else {
      MContainsKey mContainsKey=new MContainsKey();
      boolean containsEntry=mContainsKey.containsEntry(name,key,value);
      txn.attachRemoveOp(name,key,toData(value),!containsEntry);
      return containsEntry;
    }
  }
 else {
    boolean result=booleanCall(CONCURRENT_MAP_REMOVE_MULTI,name,key,value,-1,-1);
    if (result) {
      backup(CONCURRENT_MAP_BACKUP_REMOVE_MULTI);
    }
    return result;
  }
}
