{
  Pairs pairs=new Pairs();
  if (colRecords != null) {
    long now=currentTimeMillis();
    for (    MapEntry mapEntry : colRecords) {
      Record record=(Record)mapEntry;
      if (record.isActive() && record.isValid(now)) {
        if (record.getKeyData() == null || record.getKeyData().size() == 0) {
          throw new RuntimeException("Key cannot be null or zero-size: " + record.getKeyData());
        }
        boolean match=(!evaluateEntries) || predicate.apply(record);
        if (match) {
          boolean onlyKeys=(request.operation == CONCURRENT_MAP_ITERATE_KEYS_ALL || request.operation == CONCURRENT_MAP_ITERATE_KEYS);
          Data key=record.getKeyData();
          if (record.getValueData() != null) {
            Data value=(onlyKeys) ? null : record.getValueData();
            pairs.addKeyValue(new KeyValue(key,value));
          }
 else           if (record.getMultiValues() != null) {
            int size=record.getMultiValues().size();
            if (size > 0) {
              if (request.operation == CONCURRENT_MAP_ITERATE_KEYS) {
                pairs.addKeyValue(new KeyValue(key,null));
              }
 else {
                Set<Data> values=record.getMultiValues();
                for (                Data value : values) {
                  pairs.addKeyValue(new KeyValue(key,value));
                }
              }
            }
          }
        }
      }
    }
  }
  if (!request.local) {
    request.value=null;
  }
  request.response=(pairs.size() > 0) ? ((request.local) ? pairs : toData(pairs)) : null;
}
