{
  int totalSize=0;
  Set<Member> members=node.getClusterImpl().getMembers();
  List<Future<Integer>> lsFutures=new ArrayList<Future<Integer>>();
  int expectedPartitionVersion=partitionManager.getVersion();
  for (  Member member : members) {
    if (!member.isLiteMember()) {
      MapSizeCallable callable=new MapSizeCallable(name,expectedPartitionVersion);
      DistributedTask<Integer> dt=new DistributedTask<Integer>(callable,member);
      lsFutures.add(dt);
      node.factory.getExecutorService(BATCH_OPS_EXECUTOR_NAME).execute(dt);
    }
  }
  for (  Future<Integer> future : lsFutures) {
    Integer partialSize=future.get();
    if (partialSize != null) {
      if (partialSize == -1) {
        throw new IllegalStateException("Unexpected partition version!");
      }
      totalSize+=partialSize;
    }
  }
  return totalSize;
}
