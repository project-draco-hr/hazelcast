{
  boolean lock=(request.operation == ClusterOperation.CONCURRENT_MAP_LOCK || request.operation == ClusterOperation.CONCURRENT_MAP_LOCK_RETURN_OLD);
  if (!lock) {
    boolean unlocked=true;
    Record record=recordExist(request);
    if (DEBUG) {
      log(request.operation + " unlocking " + record);
    }
    if (record != null) {
      unlocked=record.unlock(request.lockThreadId,request.lockAddress);
      if (unlocked) {
        request.lockCount=record.lockCount;
      }
    }
    if (request.local) {
      if (unlocked)       request.response=Boolean.TRUE;
 else       request.response=Boolean.FALSE;
    }
  }
 else   if (!testLock(request)) {
    if (request.hasEnoughTimeToSchedule()) {
      final Record record=ensureRecord(request);
      final Request reqScheduled=(request.local) ? request : request.hardCopy();
      if (request.operation == ClusterOperation.CONCURRENT_MAP_LOCK_RETURN_OLD) {
        reqScheduled.value=doHardCopy(record.getValue());
      }
      if (DEBUG) {
        log("scheduling lock");
      }
      record.addScheduledAction(new ScheduledLockAction(reqScheduled,record));
      request.scheduled=true;
    }
 else {
      request.response=Boolean.FALSE;
    }
  }
 else {
    if (DEBUG) {
      log("Locking...");
    }
    Record rec=ensureRecord(request);
    if (request.operation == ClusterOperation.CONCURRENT_MAP_LOCK_RETURN_OLD) {
      request.value=doHardCopy(rec.getValue());
      System.out.println("reqLock value " + request.value);
    }
    rec.lock(request.lockThreadId,request.lockAddress);
    request.lockCount=rec.lockCount;
    request.response=Boolean.TRUE;
  }
}
