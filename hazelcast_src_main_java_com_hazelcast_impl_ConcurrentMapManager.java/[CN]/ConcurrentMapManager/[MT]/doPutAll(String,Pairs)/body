{
  final Map<Member,Pairs> targetMembers=new HashMap<Member,Pairs>(10);
  for (  KeyValue keyValue : pairs.getKeyValues()) {
    Member owner=partitionServiceImpl.getPartition(keyValue.getKeyData()).getOwner();
    if (owner == null) {
      owner=thisMember;
    }
    Pairs targetPairs=targetMembers.get(owner);
    if (targetPairs == null) {
      targetPairs=new Pairs();
      targetMembers.put(owner,targetPairs);
    }
    targetPairs.addKeyValue(keyValue);
  }
  List<Future<Boolean>> lsFutures=new ArrayList<Future<Boolean>>(targetMembers.size());
  for (  Member member : targetMembers.keySet()) {
    Pairs targetPairs=targetMembers.get(member);
    if (targetPairs != null && targetMembers.size() > 0) {
      PutAllCallable callable=new PutAllCallable(name,targetPairs);
      DistributedTask<Boolean> dt=new DistributedTask<Boolean>(callable,member);
      lsFutures.add(dt);
      node.factory.getExecutorService(BATCH_OPS_EXECUTOR_NAME).execute(dt);
    }
  }
  for (  Future<Boolean> future : lsFutures) {
    future.get();
  }
}
