{
  if (canEvict.compareAndSet(true,false)) {
    try {
      final ClientExecutionServiceImpl executionService=(ClientExecutionServiceImpl)context.getExecutionService();
      executionService.executeInternal(new Runnable(){
        public void run(){
          try {
            TreeSet<NearCacheRecord> records=new TreeSet<NearCacheRecord>(selectedComparator);
            records.addAll(cache.values());
            int evictSize=(int)(cache.size() * EVICTION_FACTOR);
            int i=0;
            for (            NearCacheRecord record : records) {
              cache.remove(record.getKey());
              if (++i > evictSize) {
                break;
              }
            }
          }
  finally {
            canEvict.set(true);
          }
          if (cache.size() >= maxSize && canEvict.compareAndSet(true,false)) {
            try {
              executionService.executeInternal(this);
            }
 catch (            RejectedExecutionException e) {
              canEvict.set(true);
            }
          }
        }
      }
);
    }
 catch (    RejectedExecutionException e) {
      canEvict.set(true);
    }
catch (    Exception e) {
      throw ExceptionUtil.rethrow(e);
    }
  }
}
