{
  Config config=new Config();
  final HazelcastInstance h1=Hazelcast.newHazelcastInstance(config);
  final HazelcastInstance h2=Hazelcast.newHazelcastInstance(config);
  final Node node2=getNode(h2);
  CallBuilder callBuilder=new KeyCallBuilder(h1);
  BeforeAfterBehavior behavior=new BeforeAfterBehavior(){
    @Override void before() throws Exception {
      migrateKey(1,h1,h2);
      node2.clusterManager.enqueueAndWait(new Processable(){
        public void process(){
          node2.clusterManager.removeMember((MemberImpl)h1.getCluster().getLocalMember());
          assertEquals(1,node2.clusterManager.lsMembers.size());
        }
      }
,5);
    }
    @Override void after(){
      final Node node2=getNode(h2);
      node2.clusterManager.enqueueAndWait(new Processable(){
        public void process(){
          MemberImpl secondMember=new MemberImpl(((MemberImpl)h1.getCluster().getLocalMember()).getAddress(),false);
          node2.clusterManager.addMember(secondMember);
          assertEquals(2,node2.clusterManager.lsMembers.size());
        }
      }
,5);
    }
  }
;
  new BeforeAfterTester(behavior,callBuilder).run();
}
