{
  Config config=new Config();
  config.setProperty(GroupProperties.PROP_PARTITION_TABLE_SEND_INTERVAL,"2");
  final HazelcastInstance h1=Hazelcast.newHazelcastInstance(config);
  final HazelcastInstance h2=Hazelcast.newHazelcastInstance(config);
  CallBuilder calls=new QueueCallBuilder(h2);
  final Node node1=getNode(h1);
  BeforeAfterBehavior behavior=new BeforeAfterBehavior(){
    public void before() throws Exception {
      node1.clusterImpl.enqueueAndWait(new Processable(){
        public void process(){
          node1.clusterImpl.removeMember((MemberImpl)h2.getCluster().getLocalMember());
          assertEquals(1,node1.getClusterImpl().getSize());
        }
      }
,5);
    }
    public void after(){
      node1.clusterImpl.enqueueAndWait(new Processable(){
        public void process(){
          MemberImpl secondMember=new MemberImpl(((MemberImpl)h2.getCluster().getLocalMember()).getAddress(),false);
          node1.clusterImpl.addMembers(secondMember);
          assertEquals(2,node1.getClusterImpl().getSize());
        }
      }
,5);
    }
    public void destroy(){
    }
  }
;
  BeforeAfterTester t=new BeforeAfterTester(behavior,calls);
  t.run();
}
