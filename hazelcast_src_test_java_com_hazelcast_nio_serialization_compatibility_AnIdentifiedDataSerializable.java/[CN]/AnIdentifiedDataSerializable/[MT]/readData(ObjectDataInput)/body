{
  bool=dataInput.readBoolean();
  b=dataInput.readByte();
  c=dataInput.readChar();
  d=dataInput.readDouble();
  s=dataInput.readShort();
  f=dataInput.readFloat();
  i=dataInput.readInt();
  l=dataInput.readLong();
  str=dataInput.readUTF();
  booleans=dataInput.readBooleanArray();
  bytes=dataInput.readByteArray();
  chars=dataInput.readCharArray();
  doubles=dataInput.readDoubleArray();
  shorts=dataInput.readShortArray();
  floats=dataInput.readFloatArray();
  ints=dataInput.readIntArray();
  longs=dataInput.readLongArray();
  strings=dataInput.readUTFArray();
  booleansNull=dataInput.readBooleanArray();
  bytesNull=dataInput.readByteArray();
  charsNull=dataInput.readCharArray();
  doublesNull=dataInput.readDoubleArray();
  shortsNull=dataInput.readShortArray();
  floatsNull=dataInput.readFloatArray();
  intsNull=dataInput.readIntArray();
  longsNull=dataInput.readLongArray();
  stringsNull=dataInput.readUTFArray();
  byteSize=dataInput.readByte();
  bytesFully=new byte[byteSize];
  dataInput.readFully(bytesFully);
  bytesOffset=new byte[2];
  dataInput.readFully(bytesOffset,0,2);
  int strSize=dataInput.readInt();
  strChars=new char[strSize];
  for (int j=0; j < strSize; j++) {
    strChars[j]=dataInput.readChar();
  }
  strBytes=new byte[strSize];
  dataInput.readFully(strBytes);
  unsignedByte=dataInput.readUnsignedByte();
  unsignedShort=dataInput.readUnsignedShort();
  portableObject=dataInput.readObject();
  identifiedDataSerializableObject=dataInput.readObject();
  customByteArraySerializableObject=dataInput.readObject();
  customStreamSerializableObject=dataInput.readObject();
  data=dataInput.readData();
}
