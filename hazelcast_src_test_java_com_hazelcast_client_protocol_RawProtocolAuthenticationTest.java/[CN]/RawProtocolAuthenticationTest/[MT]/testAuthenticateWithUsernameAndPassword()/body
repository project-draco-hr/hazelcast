{
  final ByteBuffer initData=ByteBuffer.wrap("CB2".getBytes());
  channel.write(initData);
  String username=GroupConfig.DEFAULT_GROUP_NAME;
  String pass=GroupConfig.DEFAULT_GROUP_PASSWORD;
  final ClientMessage authMessage=ClientAuthenticationCodec.encodeRequest(username,pass,null,null,true,ClientTypes.JAVA,InternalSerializationService.VERSION_1);
  authMessage.setCorrelationId(1).addFlag(ClientMessage.BEGIN_AND_END_FLAGS);
  final ClientProtocolBuffer byteBuffer=authMessage.buffer();
  channel.write(ByteBuffer.wrap(byteBuffer.byteArray(),0,authMessage.getFrameLength()));
  final ByteBuffer socketBuffer=ByteBuffer.allocate(4096);
  ClientMessage clientMessage=ClientMessage.create();
  do {
    int read=channel.read(socketBuffer);
    if (read < 0) {
      throw new EOFException();
    }
    socketBuffer.flip();
    clientMessage.readFrom(socketBuffer);
    if (socketBuffer.hasRemaining()) {
      socketBuffer.compact();
    }
 else {
      socketBuffer.clear();
    }
  }
 while (!clientMessage.isComplete());
  assertTrue(clientMessage.isComplete());
  ClientMessage cmResult=ClientMessage.createForDecode(clientMessage.buffer(),0);
  ClientAuthenticationCodec.ResponseParameters resultParameters=ClientAuthenticationCodec.decodeResponse(cmResult);
  assertEquals(cmResult.getCorrelationId(),1);
  assertEquals(resultParameters.status,0);
  assertEquals(resultParameters.serializationVersion,1);
  assertEquals(resultParameters.ownerUuid,server.getCluster().getLocalMember().getUuid());
  assertNotNull(UUID.fromString(resultParameters.uuid));
  assertEquals(new Address("127.0.0.1",5701),resultParameters.address);
}
