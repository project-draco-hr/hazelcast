{
  final ClientNetworkConfig networkConfig=client.getClientConfig().getNetworkConfig();
  final int connAttemptLimit=networkConfig.getConnectionAttemptLimit();
  final int connectionAttemptPeriod=networkConfig.getConnectionAttemptPeriod();
  final int connectionAttemptLimit=connAttemptLimit == 0 ? Integer.MAX_VALUE : connAttemptLimit;
  int attempt=0;
  Throwable lastError=null;
  Set<Address> triedAddresses=new HashSet<Address>();
  while (true) {
    final long nextTry=Clock.currentTimeMillis() + connectionAttemptPeriod;
    final Collection<InetSocketAddress> socketAddresses=getSocketAddresses();
    for (    InetSocketAddress isa : socketAddresses) {
      Address address=new Address(isa);
      triedAddresses.add(address);
      LOGGER.finest("Trying to connect to " + address);
      try {
        final Connection conn=connectionManager.getOrConnect(address,managerAuthenticator);
        clusterService.fireConnectionEvent(LifecycleEvent.LifecycleState.CLIENT_CONNECTED);
        return conn.getEndPoint();
      }
 catch (      Exception e) {
        lastError=e;
        Level level=e instanceof AuthenticationException ? Level.WARNING : Level.FINEST;
        LOGGER.log(level,"Exception during initial connection to " + address,e);
      }
    }
    if (attempt++ >= connectionAttemptLimit) {
      break;
    }
    final long remainingTime=nextTry - Clock.currentTimeMillis();
    LOGGER.warning(String.format("Unable to get alive cluster connection," + " try in %d ms later, attempt %d of %d.",Math.max(0,remainingTime),attempt,connectionAttemptLimit));
    if (remainingTime > 0) {
      try {
        Thread.sleep(remainingTime);
      }
 catch (      InterruptedException e) {
        break;
      }
    }
  }
  throw new IllegalStateException("Unable to connect to any address in the config! " + "The following addresses were tried:" + triedAddresses,lastError);
}
