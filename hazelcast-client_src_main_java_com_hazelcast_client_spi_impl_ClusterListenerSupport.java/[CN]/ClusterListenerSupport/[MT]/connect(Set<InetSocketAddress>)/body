{
  final Collection<InetSocketAddress> socketAddresses=getSocketAddresses();
  for (  InetSocketAddress inetSocketAddress : socketAddresses) {
    if (!client.getLifecycleService().isRunning()) {
      if (LOGGER.isFinestEnabled()) {
        LOGGER.finest("Giving up on retrying to connect to cluster since client is shutdown");
      }
      break;
    }
    try {
      triedAddresses.add(inetSocketAddress);
      Address address=new Address(inetSocketAddress);
      if (LOGGER.isFinestEnabled()) {
        LOGGER.finest("Trying to connect to " + address);
      }
      Connection connection=connectionManager.getOrConnect(address,true);
      ownerConnectionAddress=connection.getEndPoint();
      clientMembershipListener.listenMembershipEvents(ownerConnectionAddress);
      fireConnectionEvent(LifecycleEvent.LifecycleState.CLIENT_CONNECTED);
      return true;
    }
 catch (    Exception e) {
      Level level=e instanceof AuthenticationException ? Level.WARNING : Level.FINEST;
      LOGGER.log(level,"Exception during initial connection to " + inetSocketAddress,e);
    }
  }
  return false;
}
