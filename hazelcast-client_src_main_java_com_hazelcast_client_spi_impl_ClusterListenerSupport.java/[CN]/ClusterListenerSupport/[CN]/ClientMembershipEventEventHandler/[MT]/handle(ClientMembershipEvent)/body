{
  final MemberImpl member=(MemberImpl)event.getMember();
  boolean membersUpdated=false;
  if (event.getEventType() == MembershipEvent.MEMBER_ADDED) {
    members.add(member);
    membersUpdated=true;
  }
 else   if (event.getEventType() == ClientMembershipEvent.MEMBER_REMOVED) {
    members.remove(member);
    membersUpdated=true;
    final Connection connection=connectionManager.getConnection(member.getAddress());
    if (connection != null) {
      connectionManager.destroyConnection(connection);
    }
  }
 else   if (event.getEventType() == ClientMembershipEvent.MEMBER_ATTRIBUTE_CHANGED) {
    MemberAttributeChange memberAttributeChange=event.getMemberAttributeChange();
    Map<Address,MemberImpl> memberMap=clusterService.getMembersRef();
    if (memberMap != null) {
      for (      MemberImpl target : memberMap.values()) {
        if (target.getUuid().equals(memberAttributeChange.getUuid())) {
          final MemberAttributeOperationType operationType=memberAttributeChange.getOperationType();
          final String key=memberAttributeChange.getKey();
          final Object value=memberAttributeChange.getValue();
          target.updateAttribute(operationType,key,value);
          MemberAttributeEvent memberAttributeEvent=new MemberAttributeEvent(client.getCluster(),target,operationType,key,value);
          clusterService.fireMemberAttributeEvent(memberAttributeEvent);
          break;
        }
      }
    }
  }
  if (membersUpdated) {
    ((ClientPartitionServiceImpl)client.getClientPartitionService()).refreshPartitions();
    updateMembersRef();
    LOGGER.info(clusterService.membersString());
    clusterService.fireMembershipEvent(new MembershipEvent(client.getCluster(),member,event.getEventType(),Collections.unmodifiableSet(new LinkedHashSet<Member>(members))));
  }
}
