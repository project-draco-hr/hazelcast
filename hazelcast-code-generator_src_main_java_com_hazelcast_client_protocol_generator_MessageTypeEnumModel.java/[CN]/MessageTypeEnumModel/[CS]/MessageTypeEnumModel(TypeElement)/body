{
  name=classElement.getAnnotation(GenerateParameters.class).name();
  className=CodeGenerationUtils.capitalizeFirstLetter(name) + "MessageType";
  packageName=CodeGenerationUtils.getPackageNameFromQualifiedName(classElement.getQualifiedName().toString());
  short masterId=classElement.getAnnotation(GenerateParameters.class).id();
  for (  Element enclosedElement : classElement.getEnclosedElements()) {
    if (!enclosedElement.getKind().equals(ElementKind.METHOD)) {
      continue;
    }
    ExecutableElement methodElement=(ExecutableElement)enclosedElement;
    ParameterModel pm=new ParameterModel();
    pm.name=methodElement.getSimpleName().toString();
    final String s=Integer.toHexString((masterId << BYTE_BIT_COUNT) + methodElement.getAnnotation(EncodeMethod.class).id());
    pm.id=s.length() == 3 ? "0x0" + s : "0x" + s;
    params.add(pm);
  }
}
