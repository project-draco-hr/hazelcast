{
  Collection<Member> members=nodeEngine.getClusterService().getMembers();
  if (members == null || members.isEmpty()) {
    return true;
  }
  final Collection<Future<Boolean>> futures=new ArrayList<Future<Boolean>>(members.size());
  for (  Member member : members) {
    final Address target=member.getAddress();
    final Operation operation=new SafeStateCheckOperation();
    final Future<Boolean> future=nodeEngine.getOperationService().invokeOnTarget(InternalPartitionService.SERVICE_NAME,operation,target);
    futures.add(future);
  }
  final int maxWaitTime=getMaxWaitTime();
  Collection<Boolean> results=FutureUtil.returnWithDeadline(futures,maxWaitTime,TimeUnit.SECONDS,exceptionHandler);
  if (results.size() != futures.size()) {
    return false;
  }
  for (  Boolean result : results) {
    if (!result) {
      return false;
    }
  }
  return true;
}
