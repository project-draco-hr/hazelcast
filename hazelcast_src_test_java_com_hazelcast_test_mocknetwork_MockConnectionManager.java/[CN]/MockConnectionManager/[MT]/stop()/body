{
  logger.fine("Stopping connection manager");
  live=false;
  final Member localMember=node.getLocalMember();
  final Address thisAddress=localMember.getAddress();
  for (  Address address : registry.getAddresses()) {
    if (address.equals(thisAddress)) {
      continue;
    }
    final Node otherNode=registry.getNode(address);
    if (otherNode != null && otherNode.getState() != NodeState.SHUT_DOWN) {
      final ClusterServiceImpl clusterService=otherNode.getClusterService();
      if (clusterService.getMember(thisAddress) == null) {
        continue;
      }
      logger.fine(otherNode.getThisAddress() + " is instructed to remove us.");
      otherNode.getNodeEngine().getExecutionService().execute(ExecutionService.SYSTEM_EXECUTOR,new Runnable(){
        public void run(){
          ILogger otherLogger=otherNode.getLogger(MockConnectionManager.class);
          otherLogger.fine(localMember + " will be removed from the cluster if present, " + "because it has requested to leave.");
          MemberImpl member=clusterService.getMember(thisAddress);
          if (member != null && member.getUuid().equals(localMember.getUuid())) {
            clusterService.removeAddress(thisAddress,"Connection manager is stopped on " + localMember);
          }
        }
      }
);
    }
  }
  for (  MockConnection connection : mapConnections.values()) {
    connection.close(null,null);
  }
}
