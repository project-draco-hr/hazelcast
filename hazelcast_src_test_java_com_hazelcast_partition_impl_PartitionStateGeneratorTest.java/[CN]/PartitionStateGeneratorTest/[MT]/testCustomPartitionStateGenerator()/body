{
  final MemberGroupFactory memberGroupFactory=new MemberGroupFactory(){
    public Collection<MemberGroup> createMemberGroups(    Collection<Member> members){
      MemberGroup[] g=new MemberGroup[4];
      for (int i=0; i < g.length; i++) {
        g[i]=new DefaultMemberGroup();
      }
      for (      Member member : members) {
        Address address=((MemberImpl)member).getAddress();
        if (even(address.getHost().hashCode()) && even(address.getPort())) {
          g[0].addMember(member);
        }
 else         if (even(address.getHost().hashCode()) && !even(address.getPort())) {
          g[1].addMember(member);
        }
 else         if (!even(address.getHost().hashCode()) && even(address.getPort())) {
          g[2].addMember(member);
        }
 else         if (!even(address.getHost().hashCode()) && !even(address.getPort())) {
          g[3].addMember(member);
        }
      }
      List<MemberGroup> list=new LinkedList<MemberGroup>();
      for (      MemberGroup memberGroup : g) {
        if (memberGroup.size() > 0) {
          list.add(memberGroup);
        }
      }
      return list;
    }
    boolean even(    int k){
      return k % 2 == 0;
    }
  }
;
  test(memberGroupFactory);
}
