{
  String lockName=newName();
  String conditionName=newName();
  final ILock lock=callerInstance.getLock(lockName);
  final ICondition condition=lock.newCondition(conditionName);
  final AtomicInteger expires=new AtomicInteger(0);
  final int awaitCount=10;
  final CountDownLatch awaitLatch=new CountDownLatch(awaitCount);
  for (int i=0; i < awaitCount; i++) {
    new Thread(new Runnable(){
      public void run(){
        try {
          lock.lock();
          awaitLatch.countDown();
          boolean signalled=condition.await(1,TimeUnit.SECONDS);
          assertFalse(signalled);
          expires.incrementAndGet();
        }
 catch (        InterruptedException ignored) {
        }
 finally {
          lock.unlock();
        }
      }
    }
).start();
  }
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      assertEquals(awaitCount,expires.get());
    }
  }
);
}
