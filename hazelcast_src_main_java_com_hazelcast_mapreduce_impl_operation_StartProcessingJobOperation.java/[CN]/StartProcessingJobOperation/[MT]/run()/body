{
  MapReduceService mapReduceService=getService();
  JobSupervisor supervisor=mapReduceService.getJobSupervisor(name,jobId);
  if (supervisor == null) {
    if (mapReduceService.unregisterJobSupervisorCancellation(name,jobId)) {
      AbstractJobTracker jobTracker=(AbstractJobTracker)mapReduceService.getJobTracker(name);
      TrackableJobFuture future=jobTracker.unregisterTrackableJob(jobId);
      if (future != null) {
        Exception exception=new CancellationException("Operation was cancelled by the user");
        future.setResult(exception);
      }
    }
    return;
  }
  MapReduceUtil.enforcePartitionTableWarmup(mapReduceService);
  MappingPhase mappingPhase=new KeyValueSourceMappingPhase(keys,predicate);
  supervisor.startTasks(mappingPhase);
}
