{
  WanReplicationConfig wcfg=config.getWanReplicationConfig("testWan");
  assertNotNull(wcfg);
  WanPublisherConfig publisherConfig=wcfg.getWanPublisherConfigs().get(0);
  assertEquals("tokyo",publisherConfig.getGroupName());
  assertEquals("com.hazelcast.enterprise.wan.replication.WanBatchReplication",publisherConfig.getClassName());
  assertEquals(WANQueueFullBehavior.THROW_EXCEPTION,publisherConfig.getQueueFullBehavior());
  assertEquals(1000,publisherConfig.getQueueCapacity());
  Map<String,Comparable> publisherProps=publisherConfig.getProperties();
  assertEquals("50",publisherProps.get("batch.size"));
  assertEquals("3000",publisherProps.get("batch.max.delay.millis"));
  assertEquals("false",publisherProps.get("snapshot.enabled"));
  assertEquals("5000",publisherProps.get("response.timeout.millis"));
  assertEquals(WanAcknowledgeType.ACK_ON_OPERATION_COMPLETE.name(),publisherProps.get("ack.type"));
  assertEquals("pass",publisherProps.get("group.password"));
  WanPublisherConfig customPublisher=wcfg.getWanPublisherConfigs().get(1);
  assertEquals("istanbul",customPublisher.getGroupName());
  assertEquals("com.hazelcast.wan.custom.CustomPublisher",customPublisher.getClassName());
  Map<String,Comparable> customPublisherProps=customPublisher.getProperties();
  assertEquals("prop.publisher",customPublisherProps.get("custom.prop.publisher"));
  WanConsumerConfig consumerConfig=wcfg.getWanConsumerConfig();
  assertEquals("com.hazelcast.wan.custom.WanConsumer",consumerConfig.getClassName());
  Map<String,Comparable> consumerProps=consumerConfig.getProperties();
  assertEquals("prop.consumer",consumerProps.get("custom.prop.consumer"));
}
