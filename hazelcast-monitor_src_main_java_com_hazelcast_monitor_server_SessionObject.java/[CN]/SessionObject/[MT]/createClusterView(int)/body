{
  HazelcastInstance client=mapOfHz.get(clusterId);
  ClusterView clusterView=new ClusterView();
  clusterView.setId(clusterId);
  clusterView.setGroupName(client.getName());
  MemberEvent memberEvent=(MemberEvent)new MembershipEventGenerator(client,clusterId).generateEvent();
  clusterView.getMembers().addAll(memberEvent.getMembers());
  Collection<Instance> instances=client.getInstances();
  for (Iterator<Instance> iterator=instances.iterator(); iterator.hasNext(); ) {
    Instance instance=iterator.next();
    if (Instance.InstanceType.MAP.equals(instance.getInstanceType())) {
      clusterView.getMaps().add(((IMap)instance).getName());
    }
 else     if (Instance.InstanceType.QUEUE.equals(instance.getInstanceType())) {
      clusterView.getQs().add(((IQueue)instance).getName());
    }
 else     if (Instance.InstanceType.SET.equals(instance.getInstanceType())) {
      clusterView.getSets().add(((ISet)instance).getName());
    }
 else     if (Instance.InstanceType.LIST.equals(instance.getInstanceType())) {
      clusterView.getLists().add(((IList)instance).getName());
    }
 else     if (Instance.InstanceType.MULTIMAP.equals(instance.getInstanceType())) {
      clusterView.getMultiMaps().add(((MultiMap)instance).getName());
    }
 else     if (Instance.InstanceType.TOPIC.equals(instance.getInstanceType())) {
      clusterView.getTopics().add(((ITopic)instance).getName());
    }
 else     if (Instance.InstanceType.LOCK.equals(instance.getInstanceType())) {
      clusterView.getLocks().add(((ILock)instance).getLockObject().toString());
    }
  }
  return clusterView;
}
