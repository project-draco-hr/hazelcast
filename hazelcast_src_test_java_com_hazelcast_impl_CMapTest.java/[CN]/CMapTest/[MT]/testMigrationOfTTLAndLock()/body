{
  Config config=new Config();
  HazelcastInstance h1=Hazelcast.newHazelcastInstance(config);
  HazelcastInstance h2=Hazelcast.newHazelcastInstance(config);
  ConcurrentMapManager cmm1=getConcurrentMapManager(h1);
  ConcurrentMapManager cmm2=getConcurrentMapManager(h2);
  IMap imap1=h1.getMap("default");
  IMap imap2=h2.getMap("default");
  imap1.put("1","value1",60,TimeUnit.SECONDS);
  imap1.lock("1");
  Data dKey=toData("1");
  CMap cmap1=getCMap(h1,"default");
  CMap cmap2=getCMap(h2,"default");
  DistributedLock lock=cmap1.getRecord(dKey).getLock();
  assertTrue(cmm1.thisAddress.equals(lock.getLockAddress()));
  assertTrue(lock.getLockThreadId() != -1);
  assertEquals(1,lock.getLockCount());
  assertTrue(migrateKey("1",h1,h2,0));
  assertTrue(migrateKey("1",h1,h1,1));
  Thread.sleep(1000);
  cmap1.startCleanup(true);
  cmap2.startCleanup(true);
  assertEquals(1,cmap1.mapRecords.size());
  assertEquals(1,cmap2.mapRecords.size());
  assertEquals(1,cmap2.getMapIndexService().getOwnedRecords().size());
  assertEquals(0,cmap1.getMapIndexService().getOwnedRecords().size());
  assertTrue(cmap1.getRecord(dKey).getRemainingTTL() < 60000);
  assertTrue(cmap2.getRecord(dKey).getRemainingTTL() < 60000);
  lock=cmap2.getRecord(dKey).getLock();
  assertTrue(cmm1.thisAddress.equals(lock.getLockAddress()));
  assertTrue(lock.getLockThreadId() != -1);
  assertEquals(1,lock.getLockCount());
  lock=cmap1.getRecord(dKey).getLock();
  assertTrue(cmm1.thisAddress.equals(lock.getLockAddress()));
  assertTrue(lock.getLockThreadId() != -1);
  assertEquals(1,lock.getLockCount());
}
