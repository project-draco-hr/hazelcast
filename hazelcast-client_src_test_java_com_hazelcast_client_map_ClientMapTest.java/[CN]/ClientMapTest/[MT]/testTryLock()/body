{
  final IMap<String,String> map=createMap();
  assertTrue(map.tryLock("key1",2,TimeUnit.SECONDS));
  final CountDownLatch latch=new CountDownLatch(1);
  new Thread(){
    @Override public void run(){
      try {
        if (!map.tryLock("key1",2,TimeUnit.SECONDS)) {
          latch.countDown();
        }
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
.start();
  assertTrue(latch.await(100,TimeUnit.SECONDS));
  assertTrue(map.isLocked("key1"));
  final CountDownLatch latch2=new CountDownLatch(1);
  new Thread(){
    @Override public void run(){
      try {
        if (map.tryLock("key1",20,TimeUnit.SECONDS)) {
          latch2.countDown();
        }
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
.start();
  Thread.sleep(1000);
  map.unlock("key1");
  assertTrue(latch2.await(100,TimeUnit.SECONDS));
  assertTrue(map.isLocked("key1"));
  map.forceUnlock("key1");
}
