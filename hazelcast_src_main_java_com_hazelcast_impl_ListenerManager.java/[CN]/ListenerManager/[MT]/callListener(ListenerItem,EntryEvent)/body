{
  Object listener=listenerItem.listener;
  EntryEventType entryEventType=event.getEventType();
switch (listenerItem.instanceType) {
case MAP:
case MULTIMAP:
    EntryListener entryListener=(EntryListener)listener;
switch (entryEventType) {
case ADDED:
    entryListener.entryAdded(event);
  break;
case REMOVED:
entryListener.entryRemoved(event);
break;
case UPDATED:
entryListener.entryUpdated(event);
break;
case EVICTED:
entryListener.entryEvicted(event);
break;
}
break;
case SET:
case LIST:
ItemListener itemListener=(ItemListener)listener;
switch (entryEventType) {
case ADDED:
itemListener.itemAdded(event.getKey());
break;
case REMOVED:
itemListener.itemRemoved(event.getKey());
break;
}
break;
case TOPIC:
MessageListener messageListener=(MessageListener)listener;
messageListener.onMessage(event.getValue());
break;
case QUEUE:
ItemListener queueItemListener=(ItemListener)listener;
switch (entryEventType) {
case ADDED:
queueItemListener.itemAdded(event.getValue());
break;
case REMOVED:
queueItemListener.itemRemoved(event.getValue());
break;
}
break;
}
}
