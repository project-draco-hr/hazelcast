{
  final int capacity=1000;
  final TestRingbufferStore<Integer> rbStore=new TestRingbufferStore<Integer>(capacity * 2,0,0);
  final RingbufferStoreConfig rbStoreConfig=new RingbufferStoreConfig().setEnabled(true).setStoreImplementation(rbStore);
  final Config config=getConfig("testRingbufferStore",capacity,OBJECT,rbStoreConfig);
  final HazelcastInstance instance=createHazelcastInstance(config);
  final Ringbuffer<Object> ringbuffer=instance.getRingbuffer("testRingbufferStore");
  for (int i=0; i < capacity * 2; i++) {
    ringbuffer.add(i);
  }
  assertEquals(capacity,ringbuffer.size());
  assertEquals(capacity * 2,rbStore.store.size());
  for (int i=0; i < capacity * 2; i++) {
    assertEquals(i,ringbuffer.readOne(i));
  }
  rbStore.assertAwait(3);
}
