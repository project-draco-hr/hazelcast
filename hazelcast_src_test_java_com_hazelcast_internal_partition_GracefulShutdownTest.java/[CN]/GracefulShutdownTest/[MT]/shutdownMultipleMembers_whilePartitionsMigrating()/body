{
  Config config=new Config();
  config.setProperty(GroupProperty.PARTITION_COUNT.getName(),"12");
  config.setProperty(GroupProperty.PARTITION_MIGRATION_INTERVAL.getName(),"1");
  HazelcastInstance master=factory.newHazelcastInstance(config);
  warmUpPartitions(master);
  HazelcastInstance[] slaves=factory.newInstances(config,5);
  final List<HazelcastInstance> instances=new ArrayList<HazelcastInstance>(slaves.length + 1);
  instances.add(master);
  instances.addAll(Arrays.asList(slaves));
  Collections.shuffle(instances);
  final int count=instances.size() / 2;
  final CountDownLatch latch=new CountDownLatch(count);
  for (int i=0; i < count; i++) {
    final int index=i;
    new Thread(){
      public void run(){
        HazelcastInstance instance=instances.get(index);
        instance.shutdown();
        latch.countDown();
      }
    }
.start();
  }
  assertOpenEventually(latch);
  assertPartitionAssignments();
}
