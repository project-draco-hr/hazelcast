{
  final PartitionContainer[] containers=partitionContainers;
  final List<Future> futures=new ArrayList<Future>(containers.length);
  Address thisAddress=getNodeEngine().getThisAddress();
  OperationService operationService=nodeEngine.getOperationService();
  for (  PartitionContainer container : containers) {
    if (container == null) {
      continue;
    }
    int partitionId=container.getPartitionId();
    Operation operation=new MapPartitionDestroyOperation(container,mapName);
    operation.setPartitionId(partitionId);
    operation.setValidateTarget(false);
    Future f=operationService.invokeOnTarget(SERVICE_NAME,operation,thisAddress);
    futures.add(f);
  }
  try {
    for (    Future f : futures) {
      f.get(DESTROY_TIMEOUT_SECONDS,TimeUnit.SECONDS);
    }
  }
 catch (  Throwable t) {
    throw ExceptionUtil.rethrow(t);
  }
}
