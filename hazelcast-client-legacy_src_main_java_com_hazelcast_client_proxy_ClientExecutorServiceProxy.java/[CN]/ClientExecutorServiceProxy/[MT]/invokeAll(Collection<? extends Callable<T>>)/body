{
  final List<Future<T>> futures=new ArrayList<Future<T>>(tasks.size());
  final List<Future<T>> result=new ArrayList<Future<T>>(tasks.size());
  for (  Callable<T> task : tasks) {
    futures.add(submitToRandomInternal(task,null,true));
  }
  ExecutorService asyncExecutor=getContext().getExecutionService().getAsyncExecutor();
  for (  Future<T> future : futures) {
    Object value=retrieveResult(future);
    result.add(new CompletedFuture<T>(getContext().getSerializationService(),value,asyncExecutor));
  }
  return result;
}
