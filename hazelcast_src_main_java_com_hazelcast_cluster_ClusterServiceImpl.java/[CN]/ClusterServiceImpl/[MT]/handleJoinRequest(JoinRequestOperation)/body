{
  if (!node.joined() || !node.isActive()) {
    if (logger.isFinestEnabled()) {
      logger.finest("Node is not ready to process join request...");
    }
    return;
  }
  JoinRequest joinRequest=op.getRequest();
  if (!node.isMaster()) {
    sendMasterAnswer(joinRequest.getAddress());
    return;
  }
  Connection conn=op.getConnection();
  if (!isValidJoinRequest(joinRequest)) {
    logger.info("Received an invalid join request from " + joinRequest.getAddress());
    conn.close();
    return;
  }
  if (joinInProgress) {
    if (logger.isFinestEnabled()) {
      logger.finest("Join is in-progress. Cannot handle join request from " + joinRequest.getAddress() + " at the moment.");
    }
    return;
  }
  lock.lock();
  try {
    long now=Clock.currentTimeMillis();
    if (logger.isFinestEnabled()) {
      String msg="Handling join from " + joinRequest.getAddress() + ", inProgress: "+ joinInProgress+ (timeToStartJoin > 0 ? ", timeToStart: " + (timeToStartJoin - now) : "");
      logger.finest(msg);
    }
    if (isJoinRequestFromAnExistingMember(joinRequest)) {
      return;
    }
    MemberInfo memberInfo=new MemberInfo(joinRequest.getAddress(),joinRequest.getUuid(),joinRequest.getAttributes());
    if (!setJoins.contains(memberInfo)) {
      try {
        checkSecureLogin(joinRequest,memberInfo);
      }
 catch (      Exception e) {
        ILogger securityLogger=node.loggingService.getLogger("com.hazelcast.security");
        sendAuthenticationFailure(joinRequest.getAddress());
        securityLogger.severe(e);
        return;
      }
    }
    if (firstJoinRequest == 0) {
      firstJoinRequest=now;
    }
    if (setJoins.add(memberInfo)) {
      sendMasterAnswer(joinRequest.getAddress());
      if (now - firstJoinRequest < maxWaitMillisBeforeJoin) {
        timeToStartJoin=now + waitMillisBeforeJoin;
      }
    }
    if (now > timeToStartJoin) {
      startJoin();
    }
  }
  finally {
    lock.unlock();
  }
}
