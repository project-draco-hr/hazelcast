{
  final String mapName=randomMapName();
  final HazelcastInstance server1=Hazelcast.newHazelcastInstance(null);
  final HazelcastInstance server2=Hazelcast.newHazelcastInstance(null);
  final HazelcastInstance client=HazelcastClient.newHazelcastClient();
  final IMap<Object,Object> map=client.getMap(mapName);
  final CountDownLatch evictedEntryCount=new CountDownLatch(3);
  map.addEntryListener(new EntryAdapter<Object,Object>(){
    @Override public void mapEvicted(    MapEvent event){
      final int affected=event.getNumberOfEntriesAffected();
      for (int i=0; i < affected; i++) {
        evictedEntryCount.countDown();
      }
    }
  }
,true);
  map.put(1,1);
  map.put(2,1);
  map.put(3,1);
  map.evictAll();
  assertOpenEventually(evictedEntryCount);
  assertEquals(0,map.size());
  closeResources(client,server1,server2);
}
