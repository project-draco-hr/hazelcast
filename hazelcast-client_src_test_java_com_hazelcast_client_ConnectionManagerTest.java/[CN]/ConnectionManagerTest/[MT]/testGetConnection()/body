{
  HazelcastClient client=mock(HazelcastClient.class);
  InetSocketAddress inetSocketAddress=new InetSocketAddress("localhost",5701);
  final Connection connection=mock(Connection.class);
  final CountDownLatch latch=new CountDownLatch(2);
  final List<LifecycleState> lifecycleEvents=new ArrayList<LifecycleState>();
  final LifecycleServiceClientImpl lifecycleService=createLifecycleServiceClientImpl(client,lifecycleEvents);
  ClientConfig clientConfig=new ClientConfig();
  clientConfig.setCredentials(credentials).addInetSocketAddress(inetSocketAddress).setConnectionTimeout(60000);
  ConnectionManager connectionManager=new ConnectionManager(client,clientConfig,lifecycleService){
    protected Connection createNextConnection(){
      latch.countDown();
      return connection;
    }
  }
;
  ClientBinder binder=mock(ClientBinder.class);
  connectionManager.setBinder(binder);
  connectionManager.getConnection();
  assertEquals(connection,connectionManager.getConnection());
  verify(binder).bind(connection,credentials);
  assertEquals(connection,connectionManager.getConnection());
  assertEquals(1,latch.getCount());
  Thread.sleep(100);
  assertArrayEquals(new Object[]{LifecycleState.CLIENT_CONNECTION_OPENING},lifecycleEvents.toArray());
}
