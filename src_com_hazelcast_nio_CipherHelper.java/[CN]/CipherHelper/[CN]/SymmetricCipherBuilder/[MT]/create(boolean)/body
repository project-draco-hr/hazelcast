{
  try {
    int mode=(encryptMode) ? Cipher.ENCRYPT_MODE : Cipher.DECRYPT_MODE;
    Cipher cipher=Cipher.getInstance(algorithm);
    String keyAlgorithm=algorithm;
    if (algorithm.indexOf('/') != -1) {
      keyAlgorithm=algorithm.substring(0,algorithm.indexOf('/'));
    }
    ByteBuffer bbPass=ByteBuffer.allocate(32);
    MessageDigest md=MessageDigest.getInstance("MD5");
    bbPass.put(md.digest(passPhrase.getBytes()));
    md.reset();
    bbPass.put(md.digest(salt));
    SecretKey key=null;
    AlgorithmParameterSpec paramSpec=null;
    if (algorithm.startsWith("Blowfish")) {
      SecretKeySpec keySpec=new SecretKeySpec(bbPass.array(),"Blowfish");
      cipher.init(mode,keySpec);
      return cipher;
    }
 else     if (algorithm.startsWith("DESede")) {
      KeySpec keySpec=new DESedeKeySpec(bbPass.array());
      key=SecretKeyFactory.getInstance("DESede").generateSecret(keySpec);
    }
 else     if (algorithm.startsWith("DES")) {
      KeySpec keySpec=new DESKeySpec(bbPass.array());
      key=SecretKeyFactory.getInstance("DES").generateSecret(keySpec);
    }
 else     if (algorithm.startsWith("PBEWith")) {
      paramSpec=new PBEParameterSpec(salt,iterationCount);
      KeySpec keySpec=new PBEKeySpec(passPhrase.toCharArray(),salt,iterationCount);
      key=SecretKeyFactory.getInstance(keyAlgorithm).generateSecret(keySpec);
    }
    cipher.init(mode,key,paramSpec);
    return cipher;
  }
 catch (  Exception e) {
    e.printStackTrace();
    System.exit(0);
  }
  return null;
}
