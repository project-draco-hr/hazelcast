{
  Future<String> future=registrationExecutor.submit(new Callable<String>(){
    @Override public String call(){
      String userRegistrationId=UuidUtil.newUnsecureUuidString();
      ClientRegistrationKey registrationKey=new ClientRegistrationKey(userRegistrationId,handler,codec);
      registrations.put(registrationKey,new ConcurrentHashMap<Address,ClientEventRegistration>());
      try {
        for (        Member member : members) {
          invoke(registrationKey,member.getAddress());
        }
      }
 catch (      Exception e) {
        deregisterListener(userRegistrationId);
        throw new HazelcastException("Listener can not be added",e);
      }
      return userRegistrationId;
    }
  }
);
  try {
    return future.get();
  }
 catch (  Exception e) {
    throw ExceptionUtil.rethrow(e);
  }
}
