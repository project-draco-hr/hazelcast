{
  Thread[] initialThreads=getAllThreads();
  HazelcastInstance h=Hazelcast.newHazelcastInstance(config);
  final ClientProperties clientProperties=ClientProperties.createBaseClientProperties(GroupConfig.DEFAULT_GROUP_NAME,GroupConfig.DEFAULT_GROUP_PASSWORD);
  clientProperties.setPropertyValue(ClientPropertyName.INIT_CONNECTION_ATTEMPTS_LIMIT,"2");
  clientProperties.setPropertyValue(ClientPropertyName.RECONNECTION_ATTEMPTS_LIMIT,"2");
  clientProperties.setPropertyValue(ClientPropertyName.RECONNECTION_TIMEOUT,"500");
  HazelcastClient client=TestUtility.newHazelcastClient(clientProperties,h);
  client.getCluster().getMembers();
  h.shutdown();
  try {
    client.getMap("default").put("1","1");
    fail();
  }
 catch (  NoMemberAvailableException e) {
  }
  client.shutdown();
  Thread[] threads=getAllThreads();
  List<Thread> listOfThreads=new ArrayList<Thread>(Arrays.asList(threads));
  for (  Thread thread : initialThreads) {
    listOfThreads.remove(thread);
  }
  boolean fail=false;
  for (  Thread t : listOfThreads) {
    if (t != null) {
      if (t.getName().startsWith("hz.")) {
        System.out.println("Thread is active " + t.getName());
        fail=true;
      }
    }
  }
  assertFalse("Some threads are still alive",fail);
}
