{
  Config config=new Config();
  final HazelcastInstance h=Hazelcast.newHazelcastInstance(config);
  final HazelcastClient client=TestUtility.newHazelcastClient(h);
  final String qName="testClientCrashOnQTake";
  final AtomicBoolean gotExpectedException=new AtomicBoolean(false);
  new Thread(new Runnable(){
    public void run(){
      try {
        client.getQueue(qName).take();
      }
 catch (      NoMemberAvailableException e) {
        gotExpectedException.set(true);
        return;
      }
catch (      InterruptedException e) {
        e.printStackTrace();
      }
      fail();
    }
  }
).start();
  Thread.sleep(1000);
  client.shutdown();
  assertTrue(gotExpectedException.get());
  assertEquals(0,h.getQueue(qName).size());
  h.getQueue(qName).offer("message");
  assertEquals(1,h.getQueue(qName).size());
  Thread.sleep(100);
  assertEquals(1,h.getQueue(qName).size());
  h.getQueue(qName).poll();
  assertEquals(0,h.getQueue(qName).size());
}
