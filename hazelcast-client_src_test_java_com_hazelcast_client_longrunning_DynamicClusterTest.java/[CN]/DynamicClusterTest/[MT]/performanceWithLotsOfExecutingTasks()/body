{
  Config config=new Config();
  config.addExecutorConfig(new ExecutorConfig("esname",128,512,60));
  final HazelcastInstance h1=Hazelcast.newHazelcastInstance(config);
  final HazelcastInstance h2=Hazelcast.newHazelcastInstance(config);
  for (int i=0; i < 1000; i++) {
    Map<Integer,byte[]> map=h1.getMap("myMap");
    map.put(i,new byte[100000]);
  }
  HazelcastClient client=TestUtility.newHazelcastClient(h2);
  ExecutorService executor=client.getExecutorService("esname");
  Map<Integer,FutureTask> taskMap=new ConcurrentHashMap<Integer,FutureTask>();
  long start=Clock.currentTimeMillis();
  CountDownLatch latch=new CountDownLatch(100);
  for (int i=0; i < 1000; i++) {
    FutureTask<Integer> task=new DistributedTask<Integer>(new MyTask(i),i);
    executor.execute(task);
    taskMap.put(i,task);
  }
  int counter=0;
  for (  Integer task : taskMap.keySet()) {
    int x=(Integer)(taskMap.get(task).get());
    assertEquals(task.intValue(),x);
    counter++;
  }
}
