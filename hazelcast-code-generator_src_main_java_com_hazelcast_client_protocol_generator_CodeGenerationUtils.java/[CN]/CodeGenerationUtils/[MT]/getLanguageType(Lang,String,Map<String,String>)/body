{
  type=type.trim();
  if (isGeneric(type)) {
    String simpleType=getLanguageType(language,getSimpleType(type),languageMapping);
    String genericParameters=getGenericType(type);
    List<String> typeParameters=getGenericTypeParameters(genericParameters);
    StringBuilder builder=new StringBuilder();
    builder.append(simpleType).append('<');
    Iterator<String> iterator=typeParameters.iterator();
    while (iterator.hasNext()) {
      builder.append(getLanguageType(language,iterator.next(),languageMapping));
      if (iterator.hasNext()) {
        builder.append(", ");
      }
    }
    if (language == Lang.CPP && type.startsWith("java.util.Map<")) {
      builder.append(" > >");
    }
 else {
      builder.append(" >");
    }
    String result=builder.toString();
    if (result.equals("EntryView<serialization::pimpl::Data, serialization::pimpl::Data >")) {
      result="map::DataEntryView";
    }
    return result;
  }
  String convertedType=languageMapping.get(type);
  return convertedType == null ? type : convertedType;
}
