{
  type=type.trim();
  if (isGeneric(type)) {
    String simpleType=getCSharpType(getSimpleType(type));
    String genericParameters=getGenericType(type);
    List<String> typeParameters=getGenericTypeParameters(genericParameters);
    StringBuilder builder=new StringBuilder();
    builder.append(simpleType).append('<');
    Iterator<String> iterator=typeParameters.iterator();
    while (iterator.hasNext()) {
      builder.append(getCSharpType(iterator.next()));
      if (iterator.hasNext()) {
        builder.append(',');
      }
    }
    builder.append(">");
    return builder.toString();
  }
  String convertedType=JAVA_TO_CSHARP_TYPES.get(type);
  return convertedType == null ? type : convertedType;
}
