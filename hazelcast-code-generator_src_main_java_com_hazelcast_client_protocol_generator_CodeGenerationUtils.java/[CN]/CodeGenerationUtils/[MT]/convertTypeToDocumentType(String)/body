{
  String result;
  String type=javaType.trim();
  if (type.equals("int")) {
    return "int32";
  }
 else   if (type.equalsIgnoreCase("integer")) {
    return "int32";
  }
 else   if (type.equalsIgnoreCase("short")) {
    return "int16";
  }
 else   if (type.equalsIgnoreCase("boolean")) {
    return "boolean";
  }
 else   if (type.equalsIgnoreCase("byte")) {
    return "uint8";
  }
 else   if (type.equalsIgnoreCase("long")) {
    return "int64";
  }
 else   if (type.equals("char")) {
    return "int8";
  }
 else   if (type.equals(DATA_FULL_NAME)) {
    result="byte-array";
  }
 else   if (type.equals("java.lang.String")) {
    result="string";
  }
 else   if (type.equals("boolean")) {
    result="boolean";
  }
 else   if (type.equals("java.util.List<" + DATA_FULL_NAME + ">")) {
    result="array of byte-array";
  }
 else   if (type.equals("java.util.Set<" + DATA_FULL_NAME + ">")) {
    result="array of byte-array";
  }
 else   if (type.equals("java.util.Set<com.hazelcast.core.Member>")) {
    result="array of Member";
  }
 else   if (type.equals("java.util.Set<com.hazelcast.client.impl.client.DistributedObjectInfo>")) {
    result="array of Distributed Object Info";
  }
 else   if (type.equals("java.util.Map<com.hazelcast.nio.Address,java.util.Set<java.lang.Integer>>")) {
    result="array of Address-Partition Id pair";
  }
 else   if (type.equals("java.util.Collection<" + DATA_FULL_NAME + ">")) {
    result="array of byte-array";
  }
 else   if (type.equals("java.util.Map<" + DATA_FULL_NAME + ","+ DATA_FULL_NAME+ ">")) {
    result="array of key-value byte array pair";
  }
 else   if (type.equals("java.util.Set<java.util.Map.Entry<" + DATA_FULL_NAME + ","+ DATA_FULL_NAME+ ">>")) {
    result="array of key-value byte array pair";
  }
 else   if (type.equals("com.hazelcast.map.impl.SimpleEntryView<" + DATA_FULL_NAME + ","+ DATA_FULL_NAME+ ">")) {
    result="array of Entry View";
  }
 else   if (type.equals("com.hazelcast.nio.Address")) {
    result="Address";
  }
 else   if (type.equals("com.hazelcast.core.Member")) {
    result="Member";
  }
 else   if (type.equals("javax.transaction.xa.Xid")) {
    result="Transaction Id";
  }
 else   if (type.equals("com.hazelcast.cluster.client.MemberAttributeChange")) {
    result="Member Attribute Change";
  }
 else   if (type.equals("com.hazelcast.map.impl.querycache.event.QueryCacheEventData")) {
    result="Query Cache Event Data";
  }
 else   if (type.equals("java.util.List<com.hazelcast.mapreduce.JobPartitionState>")) {
    result="array of Job Partition State";
  }
 else   if (type.equals("java.util.Set<com.hazelcast.cache.impl.CacheEventData>")) {
    result="array of Cache Event Data";
  }
 else   if (type.equals("java.util.List<com.hazelcast.map.impl.querycache.event.QueryCacheEventData>")) {
    result="array of Query Cache Event Data";
  }
 else   if (type.equals("java.util.List<java.lang.String>")) {
    result="array of string";
  }
 else {
    result="Unknown Data Type " + type;
  }
  return result;
}
