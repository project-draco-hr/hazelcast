{
  return new PortableFactory(){
    @Override public Portable create(    int classId){
switch (classId) {
case ADD_ALL:
        return new AddAllRequest();
case ADD:
      return new AddRequest();
case ADD_ASYNC:
    return new AddAsyncRequest();
case CAPACITY:
  return new CapacityRequest();
case HEAD_SEQUENCE:
return new HeadSequenceRequest();
case READ_MANY:
return new ReadManyRequest();
case READ_ONE:
return new ReadOneRequest();
case REMAINING_CAPACITY:
return new RemainingCapacityRequest();
case SIZE:
return new SizeRequest();
case TAIL_SEQUENCE:
return new TailSequenceRequest();
case READ_RESULT_SET:
return new PortableReadResultSet<Object>();
default :
return null;
}
}
}
;
}
