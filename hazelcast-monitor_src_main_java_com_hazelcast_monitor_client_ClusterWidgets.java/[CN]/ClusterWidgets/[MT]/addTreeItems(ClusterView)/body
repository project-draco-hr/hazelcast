{
  Tree tree=new Tree();
  memberTreeItem=addTreeItem(tree,"Members",cv.getMembers(),clusterId,null);
  itemMap.put(InstanceType.MAP,new InstanceWidgets(InstanceType.MAP,addTreeItem(tree,"Maps",cv.getMaps(),clusterId,InstanceType.MAP)));
  itemMap.put(InstanceType.QUEUE,new InstanceWidgets(InstanceType.QUEUE,addTreeItem(tree,"Queues",cv.getQs(),clusterId,InstanceType.QUEUE)));
  itemMap.put(InstanceType.LIST,new InstanceWidgets(InstanceType.LIST,addTreeItem(tree,"Lists",cv.getLists(),clusterId,InstanceType.LIST)));
  itemMap.put(InstanceType.SET,new InstanceWidgets(InstanceType.SET,addTreeItem(tree,"Sets",cv.getSets(),clusterId,InstanceType.SET)));
  itemMap.put(InstanceType.TOPIC,new InstanceWidgets(InstanceType.TOPIC,addTreeItem(tree,"Topics",cv.getTopics(),clusterId,InstanceType.TOPIC)));
  itemMap.put(InstanceType.MULTIMAP,new InstanceWidgets(InstanceType.MULTIMAP,addTreeItem(tree,"MultiMaps",cv.getMultiMaps(),clusterId,InstanceType.MULTIMAP)));
  itemMap.put(InstanceType.LOCK,new InstanceWidgets(InstanceType.LOCK,addTreeItem(tree,"Locks",cv.getLocks(),clusterId,InstanceType.LOCK)));
  TreeItem treeItem=new TreeItem("Internals");
  ConfigLink config=new ConfigLink();
  config.setClusterId(clusterId);
  config.setType("PARTITIONS");
  Anchor anchor=createLink("Partitions",config);
  treeItem.addItem(anchor);
  tree.addItem(treeItem);
  return tree;
}
