{
  File file=createConfigFile("foo","bar");
  FileOutputStream os=new FileOutputStream(file);
  String networkConfig="<hazelcast-client>" + "<network>" + "<cluster-members>"+ "<address>192.168.100.100</address>"+ "<address>127.0.0.10</address>"+ "</cluster-members>"+ "<smart-routing>false</smart-routing>"+ "<redo-operation>true</redo-operation>"+ "<socket-interceptor enabled=\"true\">"+ "<class-name>com.hazelcast.examples.MySocketInterceptor</class-name>"+ "<properties>"+ "<property name=\"foo\">bar</property>"+ "</properties>"+ "</socket-interceptor>"+ "        </network>"+ "</hazelcast-client>";
  writeStringToStreamAndClose(os,networkConfig);
  String xml="<hazelcast-client>\n" + "    <import resource=\"${config.location}\"/>\n" + "</hazelcast-client>";
  ByteArrayInputStream bis=new ByteArrayInputStream(xml.getBytes());
  XmlClientConfigBuilder configBuilder=new XmlClientConfigBuilder(bis);
  Properties properties=new Properties();
  properties.setProperty("config.location",file.getAbsolutePath());
  configBuilder.setProperties(properties);
  ClientConfig config=configBuilder.build();
  assertFalse(config.getNetworkConfig().isSmartRouting());
  assertTrue(config.getNetworkConfig().isRedoOperation());
  assertTrue(config.getNetworkConfig().getAddresses().contains("192.168.100.100"));
  assertTrue(config.getNetworkConfig().getAddresses().contains("127.0.0.10"));
}
