{
  try {
    inflatingBuffer.reset();
    try {
      multicastSocket.receive(datagramPacketReceive);
    }
 catch (    IOException ignore) {
      return null;
    }
    try {
      inflatingBuffer.inflate(datagramPacketReceive.getLength());
      final byte packetVersion=inflatingBuffer.getDataInput().readByte();
      if (packetVersion != Packet.PACKET_VERSION) {
        logger.log(Level.FINEST,"Received a JoinRequest with different packet version: " + packetVersion);
        return null;
      }
      JoinInfo joinInfo=new JoinInfo();
      joinInfo.readData(inflatingBuffer.getDataInput());
      return joinInfo;
    }
 catch (    Exception e) {
      if (e instanceof EOFException || e instanceof DataFormatException) {
        logger.log(Level.FINEST,"Received data format is invalid." + " (An old version of Hazelcast may be running here.)",e);
      }
 else {
        throw e;
      }
    }
  }
 catch (  Exception e) {
    logger.log(Level.WARNING,e.getMessage(),e);
  }
  return null;
}
