{
  if (invalidationData instanceof Data) {
    return new SingleNearCacheInvalidation(mapName,((Data)invalidationData),sourceUuid);
  }
  if (invalidationData instanceof List) {
    return new BatchNearCacheInvalidation(mapName,((List<Data>)invalidationData),sourceUuid);
  }
  if (invalidationData == null) {
    return new CleaningNearCacheInvalidation(mapName,sourceUuid);
  }
  throw new IllegalArgumentException("Unexpected near cache invalidation data type found = [" + invalidationData + ']');
}
