{
  final NodeEngine nodeEngine=mapService.getNodeEngine();
  try {
    Map values=mapContainer.getStore().loadAll(keys.values());
    if (values == null || values.isEmpty()) {
      if (checkIfMapLoaded.decrementAndGet() == 0) {
        loaded.set(true);
      }
      return;
    }
    MapEntrySet entrySet=new MapEntrySet();
    for (    Data dataKey : keys.keySet()) {
      Object key=keys.get(dataKey);
      Object value=values.get(key);
      if (value != null) {
        Data dataValue=mapService.toData(value);
        entrySet.add(dataKey,dataValue);
      }
    }
    PutAllOperation operation=new PutAllOperation(name,entrySet,true);
    final OperationService operationService=nodeEngine.getOperationService();
    operationService.createInvocationBuilder(MapService.SERVICE_NAME,operation,partitionId).setCallback(new Callback<Object>(){
      @Override public void notify(      Object obj){
        if (obj instanceof Throwable) {
          return;
        }
        if (checkIfMapLoaded.decrementAndGet() == 0) {
          loaded.set(true);
        }
      }
    }
).invoke();
  }
 catch (  Exception e) {
    logger.warning("Exception while load all task:" + e.toString());
  }
}
