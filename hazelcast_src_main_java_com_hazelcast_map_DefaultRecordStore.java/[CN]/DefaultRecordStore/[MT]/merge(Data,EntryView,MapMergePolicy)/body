{
  checkIfLoaded();
  final long now=getNow();
  earlyWriteCleanup(now);
  Record record=records.get(key);
  Object newValue;
  if (record == null) {
    final Object notExistingKey=mapService.toObject(key);
    final EntryView<Object,Object> nullEntryView=EntryViews.createNullEntryView(notExistingKey);
    newValue=mergePolicy.merge(name,mergingEntry,nullEntryView);
    if (newValue == null) {
      return false;
    }
    newValue=mapStoreWrite(key,newValue,null,now);
    record=mapService.createRecord(name,key,newValue,DEFAULT_TTL,now);
    records.put(key,record);
    updateSizeEstimator(calculateRecordSize(record));
  }
 else {
    Object oldValue=record.getValue();
    EntryView existingEntry=EntryViews.createSimpleEntryView(mapService.toObject(record.getKey()),mapService.toObject(record.getValue()),record);
    newValue=mergePolicy.merge(name,mergingEntry,existingEntry);
    if (newValue == null) {
      removeIndex(key);
      mapStoreDelete(record,key,now);
      updateSizeEstimator(-calculateRecordSize(record));
      deleteRecord(key);
      return true;
    }
    if (mapService.compare(name,newValue,oldValue)) {
      return true;
    }
    newValue=mapStoreWrite(key,newValue,record,now);
    updateSizeEstimator(-calculateRecordSize(record));
    recordFactory.setValue(record,newValue);
    updateSizeEstimator(calculateRecordSize(record));
  }
  saveIndex(record);
  return newValue != null;
}
