{
  String s=UUID.randomUUID().toString();
  final ClientMessage expectedClientMessage=ClientAuthenticationCodec.encodeRequest(s,s,s,s,true,s,(byte)1);
  expectedClientMessage.addFlag(ClientMessage.BEGIN_AND_END_FLAGS);
  List<ClientMessage> subFrames=ClientMessageSplitter.getSubFrames(expectedClientMessage.getFrameLength() + 1,expectedClientMessage);
  ClientMessageReadHandler clientMessageReadHandler=new ClientMessageReadHandler(readCounter,new ClientMessageReadHandler.MessageHandler(){
    @Override public void handleMessage(    ClientMessage message){
      message.addFlag(ClientMessage.BEGIN_AND_END_FLAGS);
      assertEquals(expectedClientMessage,message);
    }
  }
);
  for (  ClientMessage subFrame : subFrames) {
    clientMessageReadHandler.onRead(ByteBuffer.wrap(subFrame.buffer().byteArray(),0,subFrame.getFrameLength()));
  }
}
