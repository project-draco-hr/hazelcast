{
  if (!isStatusSet(ST_TYPE)) {
    if (destination.remaining() < INT_SIZE_IN_BYTES + 1) {
      return false;
    }
    int type=data.getType();
    destination.putInt(type);
    boolean hasClassDefinition=context.hasClassDefinition(data);
    destination.put((byte)(hasClassDefinition ? 1 : 0));
    if (hasClassDefinition) {
      classDefinitionSerializer=new ClassDefinitionSerializer(data,context);
    }
    setStatus(ST_TYPE);
  }
  if (classDefinitionSerializer != null) {
    if (!classDefinitionSerializer.write(destination)) {
      return false;
    }
  }
  if (!isStatusSet(ST_HASH)) {
    if (destination.remaining() < INT_SIZE_IN_BYTES) {
      return false;
    }
    destination.putInt(data.hasPartitionHash() ? data.getPartitionHash() : 0);
    setStatus(ST_HASH);
  }
  if (!isStatusSet(ST_SIZE)) {
    if (destination.remaining() < INT_SIZE_IN_BYTES) {
      return false;
    }
    final int size=data.dataSize();
    destination.putInt(size);
    setStatus(ST_SIZE);
    if (size <= 0) {
      setStatus(ST_VALUE);
    }
 else {
      buffer=ByteBuffer.wrap(data.getData());
    }
  }
  if (!isStatusSet(ST_VALUE)) {
    IOUtil.copyToHeapBuffer(buffer,destination);
    if (buffer.hasRemaining()) {
      return false;
    }
    setStatus(ST_VALUE);
  }
  setStatus(ST_ALL);
  return true;
}
