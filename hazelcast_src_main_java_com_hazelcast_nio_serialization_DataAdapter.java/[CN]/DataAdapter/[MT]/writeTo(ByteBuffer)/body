{
  if (!isStatusSet(stType)) {
    if (destination.remaining() < 4) {
      return false;
    }
    destination.putInt(data.type);
    setStatus(stType);
  }
  if (!isStatusSet(stClassId)) {
    if (destination.remaining() < 4) {
      return false;
    }
    classId=data.classDefinition == null ? Data.NO_CLASS_ID : data.classDefinition.getClassId();
    destination.putInt(classId);
    if (classId == Data.NO_CLASS_ID) {
      setStatus(stFactoryId);
      setStatus(stVersion);
      setStatus(stClassDefSize);
      setStatus(stClassDef);
    }
    setStatus(stClassId);
  }
  if (!isStatusSet(stFactoryId)) {
    if (destination.remaining() < 4) {
      return false;
    }
    destination.putInt(data.classDefinition.getFactoryId());
    setStatus(stFactoryId);
  }
  if (!isStatusSet(stVersion)) {
    if (destination.remaining() < 4) {
      return false;
    }
    final int version=data.classDefinition.getVersion();
    destination.putInt(version);
    setStatus(stVersion);
  }
  if (!isStatusSet(stClassDefSize)) {
    if (destination.remaining() < 4) {
      return false;
    }
    final BinaryClassDefinition cd=(BinaryClassDefinition)data.classDefinition;
    final byte[] binary=cd.getBinary();
    classDefSize=binary == null ? 0 : binary.length;
    destination.putInt(classDefSize);
    setStatus(stClassDefSize);
    if (classDefSize == 0) {
      setStatus(stClassDef);
    }
 else {
      buffer=ByteBuffer.wrap(binary);
    }
  }
  if (!isStatusSet(stClassDef)) {
    IOUtil.copyToHeapBuffer(buffer,destination);
    if (buffer.hasRemaining()) {
      return false;
    }
    setStatus(stClassDef);
  }
  if (!isStatusSet(stSize)) {
    if (destination.remaining() < 4) {
      return false;
    }
    final int size=data.bufferSize();
    destination.putInt(size);
    setStatus(stSize);
    if (size <= 0) {
      setStatus(stValue);
    }
 else {
      buffer=ByteBuffer.wrap(data.buffer);
    }
  }
  if (!isStatusSet(stValue)) {
    IOUtil.copyToHeapBuffer(buffer,destination);
    if (buffer.hasRemaining()) {
      return false;
    }
    setStatus(stValue);
  }
  if (!isStatusSet(stHash)) {
    if (destination.remaining() < 4) {
      return false;
    }
    destination.putInt(data.getPartitionHash());
    setStatus(stHash);
  }
  setStatus(stAll);
  return true;
}
