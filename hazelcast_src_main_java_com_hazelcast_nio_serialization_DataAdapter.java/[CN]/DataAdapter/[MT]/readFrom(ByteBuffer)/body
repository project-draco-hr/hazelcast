{
  if (data == null) {
    data=new HeapData();
  }
  if (!isStatusSet(ST_TYPE)) {
    if (source.remaining() < INT_SIZE_IN_BYTES + 1) {
      return false;
    }
    int type=source.getInt();
    ((HeapData)data).setType(type);
    setStatus(ST_TYPE);
    boolean hasClassDefinition=source.get() != 0;
    if (hasClassDefinition) {
      classDefinitionSerializer=new ClassDefinitionSerializer(data,context);
    }
  }
  if (classDefinitionSerializer != null) {
    if (!classDefinitionSerializer.read(source)) {
      return false;
    }
  }
  if (!isStatusSet(ST_HASH)) {
    if (source.remaining() < INT_SIZE_IN_BYTES) {
      return false;
    }
    ((HeapData)data).setPartitionHash(source.getInt());
    setStatus(ST_HASH);
  }
  if (!isStatusSet(ST_SIZE)) {
    if (source.remaining() < INT_SIZE_IN_BYTES) {
      return false;
    }
    final int size=source.getInt();
    buffer=ByteBuffer.allocate(size);
    setStatus(ST_SIZE);
  }
  if (!isStatusSet(ST_VALUE)) {
    IOUtil.copyToHeapBuffer(source,buffer);
    if (buffer.hasRemaining()) {
      return false;
    }
    buffer.flip();
    ((HeapData)data).setData(buffer.array());
    setStatus(ST_VALUE);
  }
  setStatus(ST_ALL);
  return true;
}
