{
  long address=0;
  try {
    address=allocateMemory(16);
    long accessAddress=aligned ? address : address + 1;
    memoryAccessor.putShort(accessAddress,(short)1);
    assertEquals((short)1,memoryAccessor.getShort(accessAddress));
    memoryAccessor.putShortVolatile(null,accessAddress,(short)2);
    assertEquals((short)2,memoryAccessor.getShortVolatile(null,accessAddress));
    SampleObject obj=new SampleObject();
    memoryAccessor.putShort(obj,SampleObject.SHORT_VALUE_OFFSET,(short)3);
    assertEquals((short)3,memoryAccessor.getShort(obj,SampleObject.SHORT_VALUE_OFFSET));
    memoryAccessor.putShortVolatile(obj,SampleObject.SHORT_VALUE_OFFSET,(short)4);
    assertEquals((short)4,memoryAccessor.getShortVolatile(obj,SampleObject.SHORT_VALUE_OFFSET));
  }
  finally {
    if (address != 0) {
      freeMemory(address);
    }
  }
}
