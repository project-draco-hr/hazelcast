{
  long address=0;
  try {
    address=allocateMemory(16);
    long accessAddress=aligned ? address : address + 1;
    memoryAccessor.putFloat(accessAddress,11.2F);
    assertEquals(11.2F,memoryAccessor.getFloat(accessAddress),0.0F);
    memoryAccessor.putFloatVolatile(null,accessAddress,33.4F);
    assertEquals(33.4F,memoryAccessor.getFloatVolatile(null,accessAddress),0.0F);
    SampleObject obj=new SampleObject();
    memoryAccessor.putFloat(obj,SampleObject.FLOAT_VALUE_OFFSET,55.6F);
    assertEquals(55.6F,memoryAccessor.getFloat(obj,SampleObject.FLOAT_VALUE_OFFSET),0.0F);
    memoryAccessor.putFloatVolatile(obj,SampleObject.FLOAT_VALUE_OFFSET,77.8F);
    assertEquals(77.8F,memoryAccessor.getFloatVolatile(obj,SampleObject.FLOAT_VALUE_OFFSET),0.0F);
  }
  finally {
    if (address != 0) {
      freeMemory(address);
    }
  }
}
