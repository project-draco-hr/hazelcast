{
  final int size=200;
  HazelcastInstance h1=Hazelcast.newHazelcastInstance(new Config());
  IMap map1=h1.getMap("def");
  for (int i=0; i < size; i++) {
    map1.put(i,new byte[1000]);
  }
  Config scconfig=new Config();
  scconfig.setLiteMember(true);
  HazelcastInstance sc=Hazelcast.newHazelcastInstance(scconfig);
  Config config=new Config();
  final CountDownLatch latch=new CountDownLatch(2);
  config.addListenerConfig(new ListenerConfig(new MigrationListener(){
    public void migrationStarted(    MigrationEvent migrationEvent){
    }
    public void migrationCompleted(    MigrationEvent migrationEvent){
      latch.countDown();
    }
    public void migrationFailed(    final MigrationEvent migrationEvent){
    }
  }
));
  HazelcastInstance h2=Hazelcast.newHazelcastInstance(config);
  IMap map2=h2.getMap("def");
  assertTrue(latch.await(60,TimeUnit.SECONDS));
  assertEquals(size,getTotalOwnedEntryCount(map1,map2));
  assertEquals(size,getTotalBackupEntryCount(map1,map2));
}
