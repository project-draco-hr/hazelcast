{
  final long processStart=System.nanoTime();
  if (obj instanceof Invocation) {
    final Invocation inv=(Invocation)obj;
    final MemberImpl memberFrom=ClusterManager.get().getMember(inv.conn.getEndPoint());
    if (memberFrom != null) {
      memberFrom.didRead();
    }
    final int operation=inv.operation;
    if (operation == OP_RESPONSE) {
      ClusterManager.get().handleResponse(inv);
    }
 else     if (operation > 500) {
      ConcurrentMapManager.get().handle(inv);
    }
 else     if (operation > 400) {
      BlockingQueueManager.get().handle(inv);
    }
 else     if (operation > 300) {
      ExecutorManager.get().handle(inv);
    }
 else     if (operation > 200) {
      ListenerManager.get().handle(inv);
    }
 else     if (operation > 0) {
      ClusterManager.get().handle(inv);
    }
 else     throw new RuntimeException("Unknown operation " + operation);
  }
 else   if (obj instanceof Processable) {
    ((Processable)obj).process();
  }
 else   if (obj instanceof Runnable) {
synchronized (obj) {
      ((Runnable)obj).run();
      obj.notify();
    }
  }
 else   throw new RuntimeException("Unkown obj " + obj);
  final long processEnd=System.nanoTime();
  final long elipsedTime=processEnd - processStart;
  totalProcessTime+=elipsedTime;
  final long duration=(processEnd - start);
  if (duration > UTILIZATION_CHECK_INTERVAL) {
    if (DEBUG) {
      logger.log(Level.FINEST,"ServiceProcessUtilization: " + ((totalProcessTime * 100) / duration) + " %");
    }
    start=processEnd;
    totalProcessTime=0;
  }
}
