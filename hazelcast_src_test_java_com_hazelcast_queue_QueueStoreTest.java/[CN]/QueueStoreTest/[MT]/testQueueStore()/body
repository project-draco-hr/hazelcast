{
  Config config=new Config();
  int maxSize=2000;
  QueueConfig queueConfig=config.getQueueConfig("testQueueStore");
  queueConfig.setMaxSize(maxSize);
  TestQueueStore queueStore=new TestQueueStore(1000,0,2000,0,0,0,1);
  QueueStoreConfig queueStoreConfig=new QueueStoreConfig();
  queueStoreConfig.setStoreImplementation(queueStore);
  queueConfig.setQueueStoreConfig(queueStoreConfig);
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  HazelcastInstance instance=factory.newHazelcastInstance(config);
  for (int i=0; i < maxSize / 2; i++) {
    queueStore.store.put((long)i,i);
  }
  IQueue<Object> queue=instance.getQueue("testQueueStore");
  for (int i=0; i < maxSize / 2; i++) {
    queue.offer(i + maxSize / 2);
  }
  instance.getLifecycleService().shutdown();
  HazelcastInstance instance2=factory.newHazelcastInstance(config);
  IQueue<Object> queue2=instance2.getQueue("testQueueStore");
  Assert.assertEquals(maxSize,queue2.size());
  Assert.assertEquals(maxSize,queueStore.store.size());
  for (int i=0; i < maxSize; i++) {
    Assert.assertEquals(i,queue2.poll());
  }
  try {
    queueStore.assertAwait(3);
  }
 catch (  InterruptedException e) {
    e.printStackTrace();
  }
}
