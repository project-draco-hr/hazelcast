{
  if (delayedEntries == null || delayedEntries.isEmpty()) {
    return;
  }
  final List<DelayedEntry> entriesToProcess=new ArrayList<DelayedEntry>();
  ProcessMode mode=null;
  ProcessMode previousMode;
  for (  final DelayedEntry<Data,Object> entry : delayedEntries) {
    previousMode=mode;
    if (entry.getValue() == null) {
      mode=ProcessMode.DELETE;
    }
 else {
      mode=ProcessMode.WRITE;
    }
    if (previousMode != null && !previousMode.equals(mode)) {
      final Collection<DelayedEntry> faileds=callHandler(entriesToProcess);
      addToFaileds(faileds,failedsPerPartition);
      entriesToProcess.clear();
    }
    entriesToProcess.add(entry);
  }
  final Collection<DelayedEntry> faileds=callHandler(entriesToProcess);
  addToFaileds(faileds,failedsPerPartition);
  entriesToProcess.clear();
}
