{
  try {
    Protocol protocol=createProtocol(command,args,data);
    protocol.onEnqueue();
    Context context=Context.get();
    Connection connection=context == null ? null : context.getConnection();
    if (connection == null) {
      connection=cp.takeConnection(member);
    }
    writer.write(connection,protocol);
    writer.flush(connection);
    Protocol response=reader.read(connection);
    cp.releaseConnection(connection);
    if (Command.OK.equals(response.command))     return response;
 else     if (response.hasBuffer() || response.args.length > 0) {
      if (response.hasBuffer()) {
        Exception e=(Exception)toObject(response.buffers[0]);
        if (e instanceof RuntimeException)         throw (RuntimeException)e;
 else         throw new ClusterClientException(e);
      }
 else {
        throw new ClusterClientException(response.args[0]);
      }
    }
 else {
      throw new RuntimeException(response.command + ": " + Arrays.asList(response.args));
    }
  }
 catch (  HazelcastInstanceNotActiveException e) {
    sleep(1000);
    return doCommand((Member)null,command,args,data);
  }
catch (  IOException e) {
    if (redo) {
      sleep(1000);
      return doCommand((Member)null,command,args,data);
    }
 else     throw new RuntimeException(e);
  }
catch (  InterruptedException e) {
    throw new RuntimeException(e);
  }
}
