{
  checkNotNull(metricsRegistry,"metricsRegistry");
  OperatingSystemMXBean mxBean=ManagementFactory.getOperatingSystemMXBean();
  registerMethod(metricsRegistry,mxBean,"getCommittedVirtualMemorySize","os.committedVirtualMemorySize");
  registerMethod(metricsRegistry,mxBean,"getFreePhysicalMemorySize","os.freePhysicalMemorySize");
  registerMethod(metricsRegistry,mxBean,"getFreeSwapSpaceSize","os.freeSwapSpaceSize");
  registerMethod(metricsRegistry,mxBean,"getProcessCpuTime","os.processCpuTime");
  registerMethod(metricsRegistry,mxBean,"getTotalPhysicalMemorySize","os.totalPhysicalMemorySize");
  registerMethod(metricsRegistry,mxBean,"getTotalSwapSpaceSize","os.totalSwapSpaceSize");
  registerMethod(metricsRegistry,mxBean,"getMaxFileDescriptorCount","os.maxFileDescriptorCount");
  registerMethod(metricsRegistry,mxBean,"getOpenFileDescriptorCount","os.openFileDescriptorCount");
  registerMethod(metricsRegistry,mxBean,"getProcessCpuLoad","os.processCpuLoad");
  registerMethod(metricsRegistry,mxBean,"getSystemCpuLoad","os.systemCpuLoad");
  metricsRegistry.register(mxBean,"os.systemLoadAverage",new DoubleProbe<OperatingSystemMXBean>(){
    @Override public double get(    OperatingSystemMXBean bean){
      return PERCENTAGE_MULTIPLIER * bean.getSystemLoadAverage();
    }
  }
);
}
