{
  Config config=new Config();
  final HazelcastInstance h1=Hazelcast.newHazelcastInstance(config);
  IMap imap1=h1.getMap("default");
  for (int i=0; i < 10000; i++) {
    imap1.put(i,"value" + i);
  }
  final HazelcastInstance h2=Hazelcast.newHazelcastInstance(config);
  final HazelcastInstance h3=Hazelcast.newHazelcastInstance(config);
  TestUtil.migratePartition(28,h1,h2);
  assertEquals(getPartitionById(h1.getPartitionService(),28).getOwner(),h2.getCluster().getLocalMember());
  assertEquals(getPartitionById(h2.getPartitionService(),28).getOwner(),h2.getCluster().getLocalMember());
  assertEquals(getPartitionById(h3.getPartitionService(),28).getOwner(),h2.getCluster().getLocalMember());
  TestUtil.initiateMigration(28,20,h1,h2,h1);
  final ConcurrentMapManager chm2=getConcurrentMapManager(h2);
  chm2.enqueueAndWait(new Processable(){
    public void process(){
      assertTrue(chm2.partitionManager.blocks[28].isMigrating());
    }
  }
,10);
  final CountDownLatch migrationLatch=new CountDownLatch(2);
  MigrationListener migrationListener=new MigrationListener(){
    public void migrationCompleted(    MigrationEvent migrationEvent){
      System.out.println("event " + migrationEvent);
      if (migrationEvent.getPartitionId() == 28 && migrationEvent.getNewOwner().equals(h1.getCluster().getLocalMember())) {
        migrationLatch.countDown();
      }
    }
    public void migrationStarted(    MigrationEvent migrationEvent){
      System.out.println("ev " + migrationEvent);
    }
  }
;
  h3.getPartitionService().addMigrationListener(migrationListener);
  h1.getPartitionService().addMigrationListener(migrationListener);
  h2.getLifecycleService().shutdown();
  if (!migrationLatch.await(40,TimeUnit.SECONDS)) {
    for (    Block block : getConcurrentMapManager(h1).partitionManager.blocks) {
      if (block.isMigrating()) {
        System.out.println(block);
      }
    }
    for (    Block block : getConcurrentMapManager(h3).partitionManager.blocks) {
      if (block.isMigrating()) {
        System.out.println(block);
      }
    }
    fail("Migration should get completed in 20 seconds!!");
  }
}
