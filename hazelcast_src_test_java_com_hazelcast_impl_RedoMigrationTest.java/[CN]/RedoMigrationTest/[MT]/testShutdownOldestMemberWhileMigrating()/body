{
  Config config=new Config();
  final HazelcastInstance h1=Hazelcast.newHazelcastInstance(config);
  IMap imap1=h1.getMap("default");
  for (int i=0; i < 10000; i++) {
    imap1.put(i,"value" + i);
  }
  final HazelcastInstance h2=Hazelcast.newHazelcastInstance(config);
  final HazelcastInstance h3=Hazelcast.newHazelcastInstance(config);
  assertEquals(getPartitionById(h1.getPartitionService(),28).getOwner(),h1.getCluster().getLocalMember());
  assertEquals(getPartitionById(h2.getPartitionService(),28).getOwner(),h1.getCluster().getLocalMember());
  final CountDownLatch migrationLatch=new CountDownLatch(2);
  MigrationListener migrationListener=new MigrationListener(){
    public void migrationCompleted(    MigrationEvent migrationEvent){
      if (migrationEvent.getPartitionId() == 28 && migrationEvent.getNewOwner().equals(h2.getCluster().getLocalMember())) {
        migrationLatch.countDown();
      }
    }
    public void migrationStarted(    MigrationEvent migrationEvent){
    }
  }
;
  h3.getPartitionService().addMigrationListener(migrationListener);
  h2.getPartitionService().addMigrationListener(migrationListener);
  initiateMigration(28,20,h1,h1,h2);
  final ConcurrentMapManager chm1=getConcurrentMapManager(h1);
  chm1.enqueueAndWait(new Processable(){
    public void process(){
      assertTrue(chm1.partitionManager.blocks[28].isMigrating());
    }
  }
,10);
  h1.getLifecycleService().shutdown();
  if (!migrationLatch.await(30,TimeUnit.SECONDS)) {
    for (    Block block : getConcurrentMapManager(h2).partitionManager.blocks) {
      if (block.isMigrating() || block.getBlockId() == 28) {
        System.out.println(block);
      }
    }
    for (    Block block : getConcurrentMapManager(h3).partitionManager.blocks) {
      if (block.isMigrating() || block.getBlockId() == 28) {
        System.out.println(block);
      }
    }
    fail("Migration should get completed in 30 seconds!!");
  }
}
