{
  address=in.readUTF();
  DataSerializable impl;
  String name;
  for (int i=in.readInt(); i > 0; i--) {
    name=in.readUTF();
    impl=new LocalMapStatsImpl();
    impl.readData(in);
    mapStats.put(name,(LocalMapStatsImpl)impl);
  }
  for (int i=in.readInt(); i > 0; i--) {
    name=in.readUTF();
    impl=new LocalMultiMapStatsImpl();
    impl.readData(in);
    multiMapStats.put(name,(LocalMultiMapStatsImpl)impl);
  }
  for (int i=in.readInt(); i > 0; i--) {
    name=in.readUTF();
    impl=new LocalQueueStatsImpl();
    impl.readData(in);
    queueStats.put(name,(LocalQueueStatsImpl)impl);
  }
  for (int i=in.readInt(); i > 0; i--) {
    name=in.readUTF();
    impl=new LocalTopicStatsImpl();
    impl.readData(in);
    topicStats.put(name,(LocalTopicStatsImpl)impl);
  }
  for (int i=in.readInt(); i > 0; i--) {
    name=in.readUTF();
    impl=new LocalExecutorStatsImpl();
    impl.readData(in);
    executorStats.put(name,(LocalExecutorStatsImpl)impl);
  }
  for (int i=in.readInt(); i > 0; i--) {
    name=in.readUTF();
    runtimeProps.put(name,in.readLong());
  }
  for (int i=in.readInt(); i > 0; i--) {
    partitions.add(in.readInt());
  }
  for (int i=in.readInt(); i > 0; i--) {
    SerializableClientEndPoint ci=new SerializableClientEndPoint();
    ci.readData(in);
    clients.add(ci);
  }
  beans.readData(in);
}
