{
  address.writeData(out);
  out.writeInt(mapStats.size());
  for (  Map.Entry<String,LocalMapStatsImpl> entry : mapStats.entrySet()) {
    out.writeUTF(entry.getKey());
    entry.getValue().writeData(out);
  }
  out.writeInt(multiMapStats.size());
  for (  Map.Entry<String,LocalMultiMapStatsImpl> entry : multiMapStats.entrySet()) {
    out.writeUTF(entry.getKey());
    entry.getValue().writeData(out);
  }
  out.writeInt(queueStats.size());
  for (  Map.Entry<String,LocalQueueStatsImpl> entry : queueStats.entrySet()) {
    out.writeUTF(entry.getKey());
    entry.getValue().writeData(out);
  }
  out.writeInt(topicStats.size());
  for (  Map.Entry<String,LocalTopicStatsImpl> entry : topicStats.entrySet()) {
    out.writeUTF(entry.getKey());
    entry.getValue().writeData(out);
  }
  out.writeInt(executorStats.size());
  for (  Map.Entry<String,LocalExecutorStatsImpl> entry : executorStats.entrySet()) {
    out.writeUTF(entry.getKey());
    entry.getValue().writeData(out);
  }
  out.writeInt(runtimeProps.size());
  for (  Map.Entry<String,Long> entry : runtimeProps.entrySet()) {
    out.writeUTF(entry.getKey());
    out.writeLong(entry.getValue());
  }
  out.writeInt(partitions.size());
  for (  Integer lsPartition : partitions) {
    out.writeInt(lsPartition);
  }
  out.writeInt(clients.size());
  for (  SerializableClientEndPoint client : clients) {
    client.writeData(out);
  }
}
