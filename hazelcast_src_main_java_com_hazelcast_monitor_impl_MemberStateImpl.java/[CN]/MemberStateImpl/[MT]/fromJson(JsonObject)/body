{
  address=getString(json,"address");
  for (  JsonObject.Member next : getObject(json,"mapStats")) {
    LocalMapStatsImpl stats=new LocalMapStatsImpl();
    stats.fromJson(next.getValue().asObject());
    mapStats.put(next.getName(),stats);
  }
  for (  JsonObject.Member next : getObject(json,"multiMapStats")) {
    LocalMultiMapStatsImpl stats=new LocalMultiMapStatsImpl();
    stats.fromJson(next.getValue().asObject());
    multiMapStats.put(next.getName(),stats);
  }
  for (  JsonObject.Member next : getObject(json,"queueStats")) {
    LocalQueueStatsImpl stats=new LocalQueueStatsImpl();
    stats.fromJson(next.getValue().asObject());
    queueStats.put(next.getName(),stats);
  }
  for (  JsonObject.Member next : getObject(json,"topicStats")) {
    LocalTopicStatsImpl stats=new LocalTopicStatsImpl();
    stats.fromJson(next.getValue().asObject());
    topicStats.put(next.getName(),stats);
  }
  for (  JsonObject.Member next : getObject(json,"executorStats")) {
    LocalExecutorStatsImpl stats=new LocalExecutorStatsImpl();
    stats.fromJson(next.getValue().asObject());
    executorStats.put(next.getName(),stats);
  }
  for (  JsonObject.Member next : getObject(json,"cacheStats",new JsonObject())) {
    LocalCacheStats stats=new LocalCacheStatsImpl();
    stats.fromJson(next.getValue().asObject());
    cacheStats.put(next.getName(),stats);
  }
  for (  JsonObject.Member next : getObject(json,"runtimeProps")) {
    runtimeProps.put(next.getName(),next.getValue().asLong());
  }
  final JsonArray jsonPartitions=getArray(json,"partitions");
  for (  JsonValue jsonPartition : jsonPartitions) {
    partitions.add(jsonPartition.asInt());
  }
  final JsonArray jsonClients=getArray(json,"clients");
  for (  JsonValue jsonClient : jsonClients) {
    final SerializableClientEndPoint client=new SerializableClientEndPoint();
    client.fromJson(jsonClient.asObject());
    clients.add(client);
  }
  beans=new SerializableMXBeans();
  beans.fromJson(getObject(json,"beans"));
}
