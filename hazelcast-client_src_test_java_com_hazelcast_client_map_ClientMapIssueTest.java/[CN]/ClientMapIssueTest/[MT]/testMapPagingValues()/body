{
  Config config=getConfig();
  hazelcastFactory.newHazelcastInstance(config);
  hazelcastFactory.newHazelcastInstance(config);
  final ClientConfig clientConfig=new ClientConfig();
  final HazelcastInstance client=hazelcastFactory.newHazelcastClient(clientConfig);
  final IMap<Integer,Integer> map=client.getMap("map");
  final int size=50;
  final int pageSize=5;
  for (int i=0; i < size; i++) {
    map.put(i,i);
  }
  final PagingPredicate predicate=new PagingPredicate(pageSize);
  predicate.nextPage();
  Collection<Integer> values=map.values(predicate);
  assertEquals(pageSize,values.size());
  predicate.setPage(0);
  values=map.values(predicate);
  assertEquals(pageSize,values.size());
  int i=0;
  for (  Integer value : values) {
    assertEquals(i,value.intValue());
    ++i;
  }
  values=map.values(predicate);
  assertEquals(pageSize,values.size());
  i=0;
  for (  Integer value : values) {
    assertEquals(i,value.intValue());
    ++i;
  }
  predicate.nextPage();
  values=map.values(predicate);
  assertEquals(pageSize,values.size());
  i=pageSize;
  for (  Integer value : values) {
    assertEquals(i,value.intValue());
    ++i;
  }
  Map.Entry anchor=predicate.getAnchor();
  assertEquals((2 * pageSize) - 1,anchor.getKey());
  assertEquals((2 * pageSize) - 1,anchor.getValue());
  predicate.setPage(4);
  values=map.values(predicate);
  assertEquals(pageSize,values.size());
  i=4 * pageSize;
  for (  Integer value : values) {
    assertEquals(i,value.intValue());
    ++i;
  }
  anchor=predicate.getAnchor();
  assertEquals((5 * pageSize) - 1,anchor.getKey());
  assertEquals((5 * pageSize) - 1,anchor.getValue());
  predicate.setPage(9);
  values=map.values(predicate);
  assertEquals(pageSize,values.size());
  i=9 * pageSize;
  for (  Integer value : values) {
    assertEquals(i,value.intValue());
    ++i;
  }
  anchor=predicate.getAnchor();
  assertEquals((10 * pageSize) - 1,anchor.getKey());
  assertEquals((10 * pageSize) - 1,anchor.getValue());
}
