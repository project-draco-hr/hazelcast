{
  HazelcastInstance instance=Hazelcast.newHazelcastInstance();
  final HazelcastInstance client=HazelcastClient.newHazelcastClient();
  final String mapName=randomMapName();
  final IMap<Object,Object> map=client.getMap(mapName);
  map.addEntryListener(new EntryAdapter<Object,Object>(),true);
  Hazelcast.newHazelcastInstance();
  instance.getLifecycleService().terminate();
  instance=Hazelcast.newHazelcastInstance();
  final Field original=HazelcastInstanceProxy.class.getDeclaredField("original");
  original.setAccessible(true);
  final HazelcastInstanceImpl impl=(HazelcastInstanceImpl)original.get(instance);
  final EventService eventService=impl.node.nodeEngine.getEventService();
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      final Collection<EventRegistration> regs=eventService.getRegistrations(MapService.SERVICE_NAME,mapName);
      assertEquals("there should be only one registrations",1,regs.size());
    }
  }
);
}
