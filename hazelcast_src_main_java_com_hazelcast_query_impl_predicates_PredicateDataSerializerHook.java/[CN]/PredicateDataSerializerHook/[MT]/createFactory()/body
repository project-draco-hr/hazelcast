{
  ConstructorFunction<Integer,IdentifiedDataSerializable>[] constructors=new ConstructorFunction[LEN];
  constructors[SQL_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new SqlPredicate();
    }
  }
;
  constructors[AND_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new AndPredicate();
    }
  }
;
  constructors[BETWEEN_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new BetweenPredicate();
    }
  }
;
  constructors[EQUAL_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new EqualPredicate();
    }
  }
;
  constructors[GREATERLESS_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new GreaterLessPredicate();
    }
  }
;
  constructors[LIKE_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new LikePredicate();
    }
  }
;
  constructors[ILIKE_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new ILikePredicate();
    }
  }
;
  constructors[IN_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new InPredicate();
    }
  }
;
  constructors[INSTANCEOF_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new InstanceOfPredicate();
    }
  }
;
  constructors[NOTEQUAL_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new NotEqualPredicate();
    }
  }
;
  constructors[NOT_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new NotPredicate();
    }
  }
;
  constructors[OR_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new OrPredicate();
    }
  }
;
  constructors[REGEX_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new RegexPredicate();
    }
  }
;
  constructors[FALSE_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new FalsePredicate();
    }
  }
;
  constructors[TRUE_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new TruePredicate();
    }
  }
;
  constructors[PAGING_PREDICATE]=new ConstructorFunction<Integer,IdentifiedDataSerializable>(){
    public IdentifiedDataSerializable createNew(    Integer arg){
      return new PagingPredicate();
    }
  }
;
  return new ArrayDataSerializableFactory(constructors);
}
