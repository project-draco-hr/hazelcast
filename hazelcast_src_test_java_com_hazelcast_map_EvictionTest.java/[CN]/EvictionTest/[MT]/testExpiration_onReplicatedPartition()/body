{
  final CountDownLatch evictedEntryCounterLatch=new CountDownLatch(1);
  final String mapName=randomMapName();
  final TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  final HazelcastInstance initialNode=factory.newHazelcastInstance();
  final IMap<String,Integer> map=initialNode.getMap(mapName);
  map.addEntryListener(new EntryAdapter<String,Integer>(){
    @Override public void entryEvicted(    EntryEvent<String,Integer> event){
      evictedEntryCounterLatch.countDown();
    }
  }
,false);
  final String key=getClass().getCanonicalName();
  map.put(key,1,3,TimeUnit.SECONDS);
  final HazelcastInstance joinerNode=factory.newHazelcastInstance();
  assertOpenEventually(evictedEntryCounterLatch);
  initialNode.shutdown();
  assertExpirationOccuredOnJoinerNode(mapName,key,joinerNode);
}
