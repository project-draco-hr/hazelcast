{
  Config cfg=new Config();
  MapConfig mc=cfg.getMapConfig("testMapRecordIdleEvictionOnMigration2");
  int maxIdleSeconds=10;
  int size=100;
  final int nsize=size / 5;
  mc.setMaxIdleSeconds(maxIdleSeconds);
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(3);
  HazelcastInstance instance1=factory.newHazelcastInstance(cfg);
  final IMap map=instance1.getMap("testMapRecordIdleEvictionOnMigration2");
  final CountDownLatch latch=new CountDownLatch(size - nsize);
  map.addEntryListener(new EntryAdapter(){
    public void entryEvicted(    EntryEvent event){
      latch.countDown();
    }
  }
,false);
  for (int i=0; i < size; i++) {
    map.put(i,i);
  }
  final Thread thread=new Thread(new Runnable(){
    public void run(){
      while (!Thread.currentThread().isInterrupted()) {
        try {
          for (int i=0; i < nsize; i++) {
            map.get(i);
          }
          Thread.sleep(1000);
        }
 catch (        HazelcastInstanceNotActiveException e) {
          return;
        }
catch (        InterruptedException e) {
          return;
        }
      }
    }
  }
);
  thread.start();
  HazelcastInstance instance2=factory.newHazelcastInstance(cfg);
  HazelcastInstance instance3=factory.newHazelcastInstance(cfg);
  latch.await(10,TimeUnit.SECONDS);
  Assert.assertEquals(nsize,map.size());
  thread.interrupt();
  thread.join(5000);
}
