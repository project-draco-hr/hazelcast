{
  Config cfg=new Config();
  final String name="testMapRecordIdleEvictionOnMigration";
  MapConfig mc=cfg.getMapConfig(name);
  int maxIdleSeconds=30;
  int size=100;
  final int nsize=size / 5;
  mc.setMaxIdleSeconds(maxIdleSeconds);
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(3);
  HazelcastInstance instance1=factory.newHazelcastInstance(cfg);
  final IMap map=instance1.getMap(name);
  final CountDownLatch latch=new CountDownLatch(size - nsize);
  map.addEntryListener(new EntryAdapter(){
    public void entryEvicted(    EntryEvent event){
      latch.countDown();
    }
  }
,false);
  for (int i=0; i < size; i++) {
    map.put(i,i);
  }
  sleepSeconds(maxIdleSeconds - 5);
  for (int i=0; i < nsize; i++) {
    map.get(i);
  }
  HazelcastInstance instance2=factory.newHazelcastInstance(cfg);
  HazelcastInstance instance3=factory.newHazelcastInstance(cfg);
  assertOpenEventually(latch);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      assertEquals(nsize,map.size());
    }
  }
);
}
