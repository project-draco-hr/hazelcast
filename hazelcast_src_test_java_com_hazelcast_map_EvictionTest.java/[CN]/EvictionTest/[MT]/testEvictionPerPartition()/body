{
  final int k=2;
  final int size=10;
  final CountDownLatch latch=new CountDownLatch(k);
  final String mapName="testEvictionPerPartition";
  Config cfg=new Config();
  final MapConfig mc=cfg.getMapConfig(mapName);
  mc.setEvictionPolicy(MapConfig.EvictionPolicy.LRU);
  mc.setEvictionPercentage(25);
  final MaxSizeConfig msc=new MaxSizeConfig();
  msc.setMaxSizePolicy(MaxSizeConfig.MaxSizePolicy.PER_PARTITION);
  msc.setSize(size);
  mc.setMaxSizeConfig(msc);
  StaticNodeFactory factory=createNodeFactory(k);
  final HazelcastInstance[] instances=factory.newInstances(cfg);
  final int pnum=instances[0].getPartitionService().getPartitions().size();
  int insertCount=size * pnum * 2;
  Map map=instances[0].getMap(mapName);
  for (int i=0; i < insertCount; i++) {
    map.put(i,i);
  }
  Thread.sleep(2000);
  assertTrue(map.size() < size * pnum * (100 - mc.getEvictionPercentage()) / 100);
}
