{
  final TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(3);
  final HazelcastInstance[] instances=factory.newInstances();
  final HazelcastInstance hz=instances[instances.length - 1];
  TransactionManagerServiceImpl transactionManagerService=spyTransactionManagerService(hz);
  TransactionOptions options=new TransactionOptions().setDurability(0).setTimeout(10,TimeUnit.SECONDS);
  when(transactionManagerService.newTransaction(options)).thenAnswer(new TransactionAnswer(){
    @Override protected void afterPrepare(){
      terminateInstance(hz);
    }
  }
);
  try {
    hz.getCluster().changeClusterState(ClusterState.FROZEN,options);
    fail("This instance is terminated. Cannot commit the transaction!");
  }
 catch (  HazelcastInstanceNotActiveException ignored) {
  }
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      assertClusterState(ClusterState.ACTIVE,instances[0],instances[1]);
    }
  }
);
}
