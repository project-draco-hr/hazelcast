{
  if (client != null && client.getLifecycleService().isRunning()) {
    logger.log(Level.WARNING,"Current HazelcastClient is already active! Shutting it down...");
    unloadInstance();
  }
  String address=PropertiesHelper.getString(CacheEnvironment.NATIVE_CLIENT_ADDRESS,props,null);
  String group=PropertiesHelper.getString(CacheEnvironment.NATIVE_CLIENT_GROUP,props,null);
  String pass=PropertiesHelper.getString(CacheEnvironment.NATIVE_CLIENT_PASSWORD,props,null);
  String configResourcePath=CacheEnvironment.getConfigFilePath(props);
  ClientConfig clientConfig=null;
  if (configResourcePath != null) {
    try {
      clientConfig=new XmlClientConfigBuilder(configResourcePath).build();
    }
 catch (    IOException e) {
      logger.log(Level.WARNING,"Could not load client configuration: " + configResourcePath,e);
    }
  }
  if (clientConfig == null) {
    clientConfig=new ClientConfig();
    clientConfig.setSmart(true);
    clientConfig.setConnectionAttemptLimit(3);
  }
  if (group != null) {
    clientConfig.getGroupConfig().setName(group);
  }
  if (pass != null) {
    clientConfig.getGroupConfig().setPassword(pass);
  }
  if (address != null) {
    clientConfig.addAddress(address);
  }
  return (client=HazelcastClient.newHazelcastClient(clientConfig));
}
