{
  try {
    String uri=command.getURI();
    if (uri.startsWith(URI_MAPS)) {
      handleMap(command,uri);
    }
 else     if (uri.startsWith(URI_MANCENTER_CHANGE_URL)) {
      handleManagementCenterUrlChange(command);
    }
 else     if (uri.startsWith(URI_QUEUES)) {
      handleQueue(command,uri);
    }
 else     if (uri.startsWith(URI_CLUSTER_STATE_URL)) {
      handleGetClusterState(command);
    }
 else     if (uri.startsWith(URI_CHANGE_CLUSTER_STATE_URL)) {
      handleChangeClusterState(command);
    }
 else     if (uri.startsWith(URI_SHUTDOWN_CLUSTER_URL)) {
      handleClusterShutdown(command);
      return;
    }
 else     if (uri.startsWith(URI_FORCESTART_CLUSTER_URL)) {
      handleForceStart(command);
    }
 else     if (uri.startsWith(URI_CLUSTER_NODES_URL)) {
      handleListNodes(command);
    }
 else     if (uri.startsWith(URI_KILLNODE_CLUSTER_URL)) {
      handleKillNode(command);
    }
 else     if (uri.startsWith(URI_WAN_SYNC_MAP)) {
      handleWanSyncMap(command);
    }
 else {
      command.setResponse(HttpCommand.RES_400);
    }
  }
 catch (  Exception e) {
    command.setResponse(HttpCommand.RES_500);
  }
  textCommandService.sendResponse(command);
}
