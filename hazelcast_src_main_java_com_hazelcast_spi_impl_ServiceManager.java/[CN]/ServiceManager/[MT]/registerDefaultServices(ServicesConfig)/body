{
  if (!servicesConfig.isEnableDefaults()) {
    return;
  }
  logger.finest("Registering default services...");
  registerService(MapService.SERVICE_NAME,MapService.create(nodeEngine));
  registerService(LockService.SERVICE_NAME,new LockServiceImpl(nodeEngine));
  registerService(QueueService.SERVICE_NAME,new QueueService(nodeEngine));
  registerService(TopicService.SERVICE_NAME,new TopicService());
  registerService(MultiMapService.SERVICE_NAME,new MultiMapService(nodeEngine));
  registerService(ListService.SERVICE_NAME,new ListService(nodeEngine));
  registerService(SetService.SERVICE_NAME,new SetService(nodeEngine));
  registerService(DistributedExecutorService.SERVICE_NAME,new DistributedExecutorService());
  registerService(AtomicLongService.SERVICE_NAME,new AtomicLongService());
  registerService(AtomicReferenceService.SERVICE_NAME,new AtomicReferenceService());
  registerService(CountDownLatchService.SERVICE_NAME,new CountDownLatchService());
  registerService(SemaphoreService.SERVICE_NAME,new SemaphoreService(nodeEngine));
  registerService(IdGeneratorService.SERVICE_NAME,new IdGeneratorService(nodeEngine));
  registerService(MapReduceService.SERVICE_NAME,new MapReduceService(nodeEngine));
  registerService(ReplicatedMapService.SERVICE_NAME,new ReplicatedMapService(nodeEngine));
  try {
    final String _className="javax.cache.Caching";
    ClassLoader classLoader=nodeEngine.getConfigClassLoader();
    Class _theClass=ClassLoaderUtil.loadClass(classLoader,_className);
    if (_theClass != null) {
      final Object serviceObject=createServiceObject("com.hazelcast.cache.jsr107.CacheService");
      registerService(CacheService.SERVICE_NAME,serviceObject);
    }
  }
 catch (  ClassNotFoundException e) {
    logger.finest("javax.cache api not found.");
  }
}
