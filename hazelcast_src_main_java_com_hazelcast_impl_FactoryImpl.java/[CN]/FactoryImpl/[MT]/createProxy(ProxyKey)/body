{
  boolean created=false;
  HazelcastInstanceAwareInstance proxy=proxies.get(proxyKey);
  if (proxy == null) {
    created=true;
    String name=proxyKey.name;
    if (name.startsWith(Prefix.QUEUE)) {
      proxy=new QProxyImpl(name,this);
    }
 else     if (name.startsWith(Prefix.TOPIC)) {
      proxy=new TopicProxyImpl(name,this);
    }
 else     if (name.startsWith(Prefix.MAP)) {
      proxy=new MProxyImpl(name,this);
    }
 else     if (name.startsWith(Prefix.MAP_BASED)) {
      if (BaseManager.getInstanceType(name) == Instance.InstanceType.MULTIMAP) {
        proxy=new MultiMapProxy(name,this);
      }
 else {
        proxy=new CollectionProxyImpl(name,this);
      }
    }
 else     if (name.startsWith(Prefix.ATOMIC_NUMBER)) {
      proxy=new AtomicNumberImpl(name,this);
    }
 else     if (name.startsWith(Prefix.IDGEN)) {
      proxy=new IdGeneratorProxy(name,this);
    }
 else     if (name.equals("lock")) {
      proxy=new LockProxy(this,proxyKey.key);
    }
    final HazelcastInstanceAwareInstance anotherProxy=proxies.putIfAbsent(proxyKey,proxy);
    if (anotherProxy != null) {
      created=false;
      proxy=anotherProxy;
    }
    if (proxyKey.key == null) {
      proxiesByName.put(proxyKey.name,proxy);
    }
  }
  if (created) {
    fireInstanceCreateEvent(proxy);
  }
  return proxy;
}
