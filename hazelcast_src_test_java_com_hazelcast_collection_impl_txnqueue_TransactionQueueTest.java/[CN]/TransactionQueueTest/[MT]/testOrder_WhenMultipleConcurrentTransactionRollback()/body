{
  final HazelcastInstance instance=createHazelcastInstance();
  final String name=randomString();
  IQueue<Integer> queue=instance.getQueue(name);
  queue.offer(1);
  queue.offer(2);
  queue.offer(3);
  TransactionContext firstContext=instance.newTransactionContext();
  firstContext.beginTransaction();
  firstContext.getQueue(name).poll();
  final CountDownLatch latch=new CountDownLatch(1);
  Thread thread=new Thread(){
    @Override public void run(){
      TransactionContext secondContext=instance.newTransactionContext();
      secondContext.beginTransaction();
      secondContext.getQueue(name).poll();
      try {
        latch.await();
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
      secondContext.rollbackTransaction();
    }
  }
;
  thread.start();
  firstContext.rollbackTransaction();
  latch.countDown();
  thread.join();
  assertEquals(1,queue.poll().intValue());
  assertEquals(2,queue.poll().intValue());
  assertEquals(3,queue.poll().intValue());
}
