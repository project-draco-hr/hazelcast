{
  Config config=getConfig();
  final TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  final HazelcastInstance h1=factory.newHazelcastInstance(config);
  final HazelcastInstance h2=factory.newHazelcastInstance(config);
  final IMap map=h2.getMap("default");
  final SampleObjects.Employee employee1=new SampleObjects.Employee("abc-123-xvz",34,true,10D);
  final SampleObjects.Employee employee2=new SampleObjects.Employee("abc-1xvz",4,true,7D);
  final SampleObjects.Employee employee3=new SampleObjects.Employee("abc-1xasda...vz",7,true,1D);
  final SampleObjects.Employee employee4=new SampleObjects.Employee("abc-1asdsaxvz",2,true,2D);
  map.put(1,employee1);
  try {
    h1.executeTransaction(options,new TransactionalTask<Boolean>(){
      public Boolean execute(      TransactionalTaskContext context) throws TransactionException {
        final TransactionalMap<Object,Object> txMap=context.getMap("default");
        assertEquals(0,txMap.keySet(new SqlPredicate("age <= 10")).size());
        txMap.put(2,employee2);
        Set keys=txMap.keySet(new SqlPredicate("age <= 10"));
        Iterator iterator=keys.iterator();
        assertEquals(1,keys.size());
        while (iterator.hasNext()) {
          assertEquals(2,((Integer)iterator.next()).intValue());
        }
        txMap.put(3,employee3);
        txMap.put(4,employee4);
        keys=txMap.keySet(new SqlPredicate("age <= 10"));
        assertEquals(3,keys.size());
        throw new DummyUncheckedHazelcastTestException();
      }
    }
);
  }
 catch (  Exception e) {
    if (!(e instanceof DummyUncheckedHazelcastTestException)) {
      throw new RuntimeException(e);
    }
  }
  assertEquals(1,map.size());
  assertEquals(1,map.keySet().size());
  assertEquals(0,map.keySet(new SqlPredicate("age <= 10")).size());
  h1.shutdown();
  h2.shutdown();
}
