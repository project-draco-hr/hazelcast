{
  Config config=getConfig();
  final TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  final HazelcastInstance h1=factory.newHazelcastInstance(config);
  final HazelcastInstance h2=factory.newHazelcastInstance(config);
  final IMap map2=h2.getMap("default");
  final SampleObjects.Employee emp1=new SampleObjects.Employee("abc-123-xvz",34,true,10D);
  map2.put(1,emp1);
  final SampleObjects.Employee emp2=new SampleObjects.Employee("xvz",4,true,10D);
  boolean b=h1.executeTransaction(options,new TransactionalTask<Boolean>(){
    public Boolean execute(    TransactionalTaskContext context) throws TransactionException {
      final TransactionalMap<Object,Object> txMap=context.getMap("default");
      assertEquals(0,txMap.values(new SqlPredicate("age <= 10")).size());
      txMap.put(2,emp2);
      Collection coll=txMap.values(new SqlPredicate("age <= 10"));
      Iterator<Object> iterator=coll.iterator();
      while (iterator.hasNext()) {
        final SampleObjects.Employee e=(SampleObjects.Employee)iterator.next();
        assertEquals(emp2,e);
      }
      coll=txMap.values(new SqlPredicate("age > 30 "));
      iterator=coll.iterator();
      while (iterator.hasNext()) {
        final SampleObjects.Employee e=(SampleObjects.Employee)iterator.next();
        assertEquals(emp1,e);
      }
      txMap.remove(2);
      coll=txMap.values(new SqlPredicate("age <= 10 "));
      assertEquals(0,coll.size());
      return true;
    }
  }
);
  assertEquals(0,map2.values(new SqlPredicate("age <= 10")).size());
  assertEquals(1,map2.values(new SqlPredicate("age = 34")).size());
  h1.shutdown();
  h2.shutdown();
}
