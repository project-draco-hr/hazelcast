{
  Set<RecoveredTransaction> recovered=new HashSet<RecoveredTransaction>();
  if (!txBackupLogs.isEmpty()) {
    final Set<Map.Entry<String,TxBackupLog>> entries=txBackupLogs.entrySet();
    final Iterator<Map.Entry<String,TxBackupLog>> iter=entries.iterator();
    while (iter.hasNext()) {
      final Map.Entry<String,TxBackupLog> entry=iter.next();
      final TxBackupLog log=entry.getValue();
      final String txnId=entry.getKey();
      if (log.state == State.NO_TXN && log.xid != null) {
        final RecoveredTransaction rt=new RecoveredTransaction();
        rt.setTxLogs(log.txLogs);
        rt.setXid(log.xid);
        rt.setCallerUuid(log.callerUuid);
        rt.setStartTime(log.startTime);
        rt.setTimeoutMillis(log.timeoutMillis);
        rt.setTxnId(txnId);
        recovered.add(rt);
        iter.remove();
      }
    }
  }
  return recovered;
}
