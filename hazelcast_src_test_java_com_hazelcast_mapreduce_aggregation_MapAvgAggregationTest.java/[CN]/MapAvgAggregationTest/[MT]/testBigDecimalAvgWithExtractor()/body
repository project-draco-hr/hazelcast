{
  Value<BigDecimal>[] values=buildValues(new ValueProvider<BigDecimal>(){
    @Override public BigDecimal provideRandom(    Random random){
      return BigDecimal.valueOf(10000.0D + random(1000,2000));
    }
  }
);
  BigDecimal expectation=BigDecimal.ZERO;
  for (int i=0; i < values.length; i++) {
    expectation=expectation.add(values[i].value);
  }
  expectation=expectation.divide(BigDecimal.valueOf(values.length));
  Aggregation<String,BigDecimal,BigDecimal> aggregation=Aggregations.bigDecimalAvg();
  BigDecimal result=testAvgWithExtractor(values,aggregation);
  assertEquals(expectation,result);
}
