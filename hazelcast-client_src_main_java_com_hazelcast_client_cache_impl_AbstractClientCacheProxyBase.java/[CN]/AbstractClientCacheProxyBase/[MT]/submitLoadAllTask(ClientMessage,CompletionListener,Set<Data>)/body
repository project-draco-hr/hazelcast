{
  final CompletionListener compListener=completionListener != null ? completionListener : NULL_COMPLETION_LISTENER;
  ClientDelegatingFuture<V> delegatingFuture=null;
  try {
    injectDependencies(completionListener);
    final long start=System.nanoTime();
    final ClientInvocationFuture future=new ClientInvocation((HazelcastClientInstanceImpl)clientContext.getHazelcastInstance(),request).invoke();
    SerializationService serializationService=clientContext.getSerializationService();
    delegatingFuture=new ClientDelegatingFuture(future,serializationService,LOAD_ALL_DECODER);
    final Future delFuture=delegatingFuture;
    loadAllCalls.put(delegatingFuture,compListener);
    delegatingFuture.andThen(new ExecutionCallback<V>(){
      @Override public void onResponse(      V response){
        loadAllCalls.remove(delFuture);
        onLoadAll(keys,response,start,System.nanoTime());
        compListener.onCompletion();
      }
      @Override public void onFailure(      Throwable t){
        loadAllCalls.remove(delFuture);
        handleFailureOnCompletionListener(compListener,t);
      }
    }
);
  }
 catch (  Throwable t) {
    if (delegatingFuture != null) {
      loadAllCalls.remove(delegatingFuture);
    }
    handleFailureOnCompletionListener(compListener,t);
  }
}
