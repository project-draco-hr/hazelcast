{
  ICache<Integer,String> cache=createCache();
  CacheStatistics stats=cache.getLocalCacheStatistics();
  assertNotNull(stats);
  final int ENTRY_COUNT=100;
  long start, end;
  for (int i=0; i < ENTRY_COUNT; i++) {
    cache.put(i,"Value-" + i);
  }
  assertEquals(0,stats.getLastAccessTime());
  start=System.currentTimeMillis();
  for (int i=0; i < ENTRY_COUNT; i++) {
    cache.get(i);
  }
  end=System.currentTimeMillis();
  assertTrue(stats.getLastAccessTime() >= start);
  assertTrue(stats.getLastAccessTime() <= end);
  long currentLastAccessTime=stats.getLastAccessTime();
  sleepAtLeastMillis(1);
  for (int i=0; i < ENTRY_COUNT; i++) {
    cache.remove(i);
  }
  assertEquals(currentLastAccessTime,stats.getLastAccessTime());
  sleepAtLeastMillis(1);
  start=System.currentTimeMillis();
  for (int i=0; i < ENTRY_COUNT; i++) {
    cache.get(i);
  }
  end=System.currentTimeMillis();
  assertTrue(stats.getLastAccessTime() >= start);
  assertTrue(stats.getLastAccessTime() <= end);
}
