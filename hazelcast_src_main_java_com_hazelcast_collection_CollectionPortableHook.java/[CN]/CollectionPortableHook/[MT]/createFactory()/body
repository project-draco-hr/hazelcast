{
  return new PortableFactory(){
    public Portable create(    int classId){
switch (classId) {
case ADD_ALL:
        return new AddAllRequest();
case CLEAR:
      return new ClearRequest();
case COMPARE_AND_REMOVE:
    return new CompareAndRemoveRequest();
case CONTAINS_ALL:
  return new ContainsAllRequest();
case CONTAINS_ENTRY:
return new ContainsEntryRequest();
case CONTAINS:
return new ContainsRequest();
case COUNT:
return new CountRequest();
case ENTRY_SET:
return new EntrySetRequest();
case GET_ALL:
return new GetAllRequest();
case GET:
return new GetRequest();
case INDEX_OF:
return new IndexOfRequest();
case KEY_SET:
return new KeySetRequest();
case PUT:
return new PutRequest();
case REMOVE_ALL:
return new RemoveAllRequest();
case REMOVE_INDEX:
return new RemoveIndexRequest();
case REMOVE:
return new RemoveRequest();
case SET:
return new SetRequest();
case SIZE:
return new SizeRequest();
case VALUES:
return new ValuesRequest();
case ADD_LISTENER:
return new AddListenerRequest();
case COLLECTION_RESPONSE:
return new PortableCollectionResponse();
case ENTRY_SET_RESPONSE:
return new PortableEntrySetResponse();
}
return null;
}
}
;
}
