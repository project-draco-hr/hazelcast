{
  ConstructorFunction<Integer,Portable> constructors[]=new ConstructorFunction[22];
  constructors[ADD_ALL]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new AddAllRequest();
    }
  }
;
  constructors[CLEAR]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new ClearRequest();
    }
  }
;
  constructors[COMPARE_AND_REMOVE]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new CompareAndRemoveRequest();
    }
  }
;
  constructors[CONTAINS_ALL]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new ContainsAllRequest();
    }
  }
;
  constructors[CONTAINS_ENTRY]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new ContainsEntryRequest();
    }
  }
;
  constructors[CONTAINS]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new ContainsRequest();
    }
  }
;
  constructors[COUNT]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new CountRequest();
    }
  }
;
  constructors[ENTRY_SET]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new EntrySetRequest();
    }
  }
;
  constructors[GET_ALL]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new GetAllRequest();
    }
  }
;
  constructors[GET]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new GetRequest();
    }
  }
;
  constructors[INDEX_OF]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new IndexOfRequest();
    }
  }
;
  constructors[KEY_SET]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new KeySetRequest();
    }
  }
;
  constructors[PUT]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new PutRequest();
    }
  }
;
  constructors[REMOVE_ALL]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new RemoveAllRequest();
    }
  }
;
  constructors[REMOVE_INDEX]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new RemoveIndexRequest();
    }
  }
;
  constructors[REMOVE]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new RemoveRequest();
    }
  }
;
  constructors[SET]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new SetRequest();
    }
  }
;
  constructors[SIZE]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new SizeRequest();
    }
  }
;
  constructors[VALUES]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new ValuesRequest();
    }
  }
;
  constructors[ADD_LISTENER]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new AddListenerRequest();
    }
  }
;
  constructors[ENTRY_SET_RESPONSE]=new ConstructorFunction<Integer,Portable>(){
    public Portable createNew(    Integer arg){
      return new PortableEntrySetResponse();
    }
  }
;
  return new ArrayPortableFactory(constructors);
}
