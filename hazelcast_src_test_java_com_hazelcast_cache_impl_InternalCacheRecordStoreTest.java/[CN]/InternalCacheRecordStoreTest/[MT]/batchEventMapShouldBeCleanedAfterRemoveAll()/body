{
  String cacheName=randomString();
  CacheConfig<Integer,String> config=createCacheConfig();
  CacheFromDifferentNodesTest.SimpleEntryListener<Integer,String> listener=new CacheFromDifferentNodesTest.SimpleEntryListener<Integer,String>();
  MutableCacheEntryListenerConfiguration<Integer,String> listenerConfiguration=new MutableCacheEntryListenerConfiguration<Integer,String>(FactoryBuilder.factoryOf(listener),null,true,true);
  config.addCacheEntryListenerConfiguration(listenerConfiguration);
  Cache<Integer,String> cache=cacheManager.createCache(cacheName,config);
  assertNotNull(cache);
  Integer key=1;
  String value="value";
  cache.put(key,value);
  HazelcastInstance instance=((HazelcastCacheManager)cacheManager).getHazelcastInstance();
  int partitionId=instance.getPartitionService().getPartition(key).getPartitionId();
  cache.removeAll();
  Node node=getNode(instance);
  assertNotNull(node);
  ICacheService cacheService=node.getNodeEngine().getService(ICacheService.SERVICE_NAME);
  AbstractCacheRecordStore recordStore=(AbstractCacheRecordStore)cacheService.getCacheRecordStore("/hz/" + cacheName,partitionId);
  assertEquals(0,recordStore.batchEvent.size());
}
