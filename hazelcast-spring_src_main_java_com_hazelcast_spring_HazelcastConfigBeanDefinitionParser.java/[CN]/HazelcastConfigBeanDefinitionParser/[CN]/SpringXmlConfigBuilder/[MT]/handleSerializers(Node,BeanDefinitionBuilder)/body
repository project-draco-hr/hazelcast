{
  BeanDefinitionBuilder globalSerializerConfigBuilder=null;
  String implementation="implementation";
  String className="class-name";
  ManagedList typeSerializers=new ManagedList();
  for (  org.w3c.dom.Node child : new IterableNodeList(node,Node.ELEMENT_NODE)) {
    final String name=cleanNodeName(child);
    if ("global-serializer".equals(name)) {
      globalSerializerConfigBuilder=createBeanBuilder(GlobalSerializerConfig.class);
      final NamedNodeMap attrs=child.getAttributes();
      final Node implRef=attrs.getNamedItem(implementation);
      final Node classNode=attrs.getNamedItem(className);
      if (implRef != null) {
        globalSerializerConfigBuilder.addPropertyReference(xmlToJavaName(implementation),getValue(implRef));
      }
      if (classNode != null) {
        globalSerializerConfigBuilder.addPropertyValue(xmlToJavaName(className),getValue(classNode));
      }
    }
    if ("type-serializer".equals(name)) {
      BeanDefinitionBuilder typeSerializerConfigBuilder=createBeanBuilder(TypeSerializerConfig.class);
      fillAttributeValues(child,typeSerializerConfigBuilder);
      final NamedNodeMap attrs=child.getAttributes();
      final Node implRef=attrs.getNamedItem(implementation);
      final Node classNode=attrs.getNamedItem(className);
      if (implRef != null) {
        typeSerializerConfigBuilder.addPropertyReference(xmlToJavaName(implementation),getValue(implRef));
      }
      if (classNode != null) {
        typeSerializerConfigBuilder.addPropertyValue(xmlToJavaName(className),getValue(classNode));
      }
      typeSerializers.add(typeSerializerConfigBuilder.getBeanDefinition());
    }
  }
  serializationConfigBuilder.addPropertyValue("globalSerializer",globalSerializerConfigBuilder.getBeanDefinition());
  serializationConfigBuilder.addPropertyValue("typeSerializers",typeSerializers);
}
