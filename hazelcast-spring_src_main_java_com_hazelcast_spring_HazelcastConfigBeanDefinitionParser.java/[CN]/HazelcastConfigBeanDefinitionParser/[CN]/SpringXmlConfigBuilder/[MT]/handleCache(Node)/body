{
  BeanDefinitionBuilder cacheConfigBuilder=createBeanBuilder(CacheSimpleConfig.class);
  final Node attName=node.getAttributes().getNamedItem("name");
  final String name=getTextContent(attName);
  fillAttributeValues(node,cacheConfigBuilder);
  for (  Node childNode : new IterableNodeList(node.getChildNodes(),Node.ELEMENT_NODE)) {
    if ("eviction".equals(cleanNodeName(childNode))) {
      cacheConfigBuilder.addPropertyValue("evictionConfig",getEvictionConfig(childNode));
    }
 else     if ("expiry-policy-factory".equals(cleanNodeName(childNode))) {
      cacheConfigBuilder.addPropertyValue("expiryPolicyFactoryConfig",getExpiryPolicyFactoryConfig(childNode));
    }
 else     if ("cache-entry-listeners".equals(cleanNodeName(childNode))) {
      ManagedList listeners=new ManagedList();
      for (      Node listenerNode : new IterableNodeList(childNode.getChildNodes(),Node.ELEMENT_NODE)) {
        final BeanDefinitionBuilder listenerConfBuilder=createBeanBuilder(CacheSimpleEntryListenerConfig.class);
        fillAttributeValues(listenerNode,listenerConfBuilder);
        listeners.add(listenerConfBuilder.getBeanDefinition());
      }
      cacheConfigBuilder.addPropertyValue("cacheEntryListeners",listeners);
    }
 else     if ("wan-replication-ref".equals(cleanNodeName(childNode))) {
      final BeanDefinitionBuilder wanReplicationRefBuilder=createBeanBuilder(WanReplicationRef.class);
      final AbstractBeanDefinition wanReplicationRefBeanDefinition=wanReplicationRefBuilder.getBeanDefinition();
      fillValues(childNode,wanReplicationRefBuilder);
      cacheConfigBuilder.addPropertyValue("wanReplicationRef",wanReplicationRefBeanDefinition);
    }
 else     if ("quorum-ref".equals(cleanNodeName(childNode))) {
      cacheConfigBuilder.addPropertyValue("quorumName",getTextContent(childNode));
    }
  }
  cacheConfigManagedMap.put(name,cacheConfigBuilder.getBeanDefinition());
}
