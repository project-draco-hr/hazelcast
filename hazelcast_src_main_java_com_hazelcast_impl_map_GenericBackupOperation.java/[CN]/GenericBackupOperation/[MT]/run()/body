{
  MapService mapService=(MapService)getService();
  int partitionId=getPartitionId();
  Address caller=getCaller();
  MapPartition mapPartition=mapService.getMapPartition(partitionId,name);
  if (backupOpType == BackupOpType.PUT) {
    Record record=mapPartition.records.get(dataKey);
    if (record == null) {
      record=new DefaultRecord(null,mapPartition.partitionInfo.getPartitionId(),dataKey,dataValue,-1,-1,mapService.nextId());
      mapPartition.records.put(dataKey,record);
    }
 else {
      record.setValueData(dataValue);
    }
    record.setActive();
    record.setDirty(true);
  }
 else   if (backupOpType == BackupOpType.REMOVE) {
    Record record=mapPartition.records.get(dataKey);
    if (record == null) {
      record.markRemoved();
    }
  }
 else {
    if (backupOpType == BackupOpType.LOCK) {
      LockInfo lock=mapPartition.getOrCreateLock(getKey());
      lock.lock(caller,threadId,ttl);
    }
 else     if (backupOpType == BackupOpType.UNLOCK) {
      LockInfo lock=mapPartition.getLock(getKey());
      if (lock != null) {
        lock.unlock(caller,threadId);
      }
      lock.lock(caller,threadId,ttl);
    }
  }
  System.out.println(getNodeService().getThisAddress() + "  sending backup response " + firstCallerId+ " firstCallerAddress: "+ firstCallerAddress);
  getNodeService().send(MapService.MAP_SERVICE_NAME,new BackupResponse(),partitionId,0,firstCallerId,firstCallerAddress);
}
