{
  final MapProxyImpl mapProxy=(MapProxyImpl)map;
  final MapService mapService=(MapService)mapProxy.getService();
  final MapServiceContext mapServiceContext=mapService.getMapServiceContext();
  MemoryInfoAccessor memoryInfoAccessor=new MemoryInfoAccessor(){
    @Override public long getTotalMemory(){
      return MEGABYTES.toBytes(totalMemoryMB);
    }
    @Override public long getFreeMemory(){
      return MEGABYTES.toBytes(freeMemoryMB);
    }
    @Override public long getMaxMemory(){
      return MEGABYTES.toBytes(maxMemoryMB);
    }
  }
;
  MapContainer mapContainer=mapServiceContext.getMapContainer(map.getName());
  EvictionChecker evictionChecker=new EvictionChecker(memoryInfoAccessor,mapServiceContext);
  MapEvictionPolicy evictionPolicy=getMapEvictionPolicy(mapContainer.getMapConfig().getEvictionPolicy());
  IPartitionService partitionService=mapServiceContext.getNodeEngine().getPartitionService();
  Evictor evictor=new TestEvictor(evictionChecker,evictionPolicy,partitionService);
  mapContainer.setEvictor(evictor);
}
