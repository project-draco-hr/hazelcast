{
  final int partitionId=packet.blockId;
  final boolean nonBlocking=packet.longValue == 1;
  final Data data=packet.getValueData();
  final long callId=packet.callId;
  final Address caller=packet.conn.getEndPoint();
  final String serviceName=packet.name;
  final Executor executor=getExecutor(partitionId,nonBlocking);
  executor.execute(new Runnable(){
    public void run(){
      try {
        final Operation op=(Operation)toObject(data);
        setOperationContext(op,serviceName,caller,callId,partitionId).setConnection(packet.conn);
        op.getOperationContext().setResponseHandler(ResponseHandlerFactory.createRemoteResponseHandler(NodeService.this,op,packet,partitionId,callId,serviceName));
        try {
          if (partitionId != -1) {
            PartitionInfo partitionInfo=getPartitionInfo(partitionId);
            Address owner=partitionInfo.getOwner();
            if (!(op instanceof NonBlockingOperation) && !getThisAddress().equals(owner)) {
              throw new WrongTargetException(getThisAddress(),owner,partitionId,op.getClass().getName(),serviceName);
            }
          }
          op.run();
        }
 catch (        Exception e) {
          if (e instanceof RetryableException) {
            logger.log(Level.WARNING,e.getClass() + ": " + e.getMessage());
            logger.log(Level.FINEST,e.getMessage(),e);
          }
 else {
            logger.log(Level.SEVERE,e.getMessage(),e);
          }
          op.getOperationContext().getResponseHandler().sendResponse(e);
        }
      }
 catch (      Exception e) {
        logger.log(Level.SEVERE,e.getMessage(),e);
        ResponseHandlerFactory.createRemoteResponseHandler(NodeService.this,null,packet,partitionId,callId,serviceName).sendResponse(e);
      }
    }
  }
);
}
