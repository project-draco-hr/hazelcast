{
  ThreadContext.get().setCurrentFactory(node.factory);
  final Address target=inv.getTarget();
  final Operation op=inv.getOperation();
  final int partitionId=inv.getPartitionId();
  final String serviceName=inv.getServiceName();
  final boolean nonBlocking=(op instanceof NonBlockingOperation);
  setOperationContext(op,serviceName,node.getThisAddress(),-1,partitionId).setLocal(true);
  if (target == null) {
    throw new NullPointerException(inv.getOperation() + ": Target is null");
  }
  if (!(op instanceof NonMemberOperation) && getClusterImpl().getMember(target) == null) {
    throw new TargetNotMemberException(target,partitionId,op.getClass().getName(),serviceName);
  }
  if (getThisAddress().equals(target)) {
    if (!(op instanceof NoReply)) {
      op.getOperationContext().setResponseHandler(new ResponseHandler(){
        public void sendResponse(        Object obj){
          inv.setResult(obj);
        }
      }
);
    }
    runLocally(partitionId,op,nonBlocking);
  }
 else {
    Data valueData=toData(op);
    TheCall call=new TheCall(target,inv);
    long callId=node.concurrentMapManager.registerCall(call);
    SimpleSocketWritable ssw=new SimpleSocketWritable(REMOTE_CALL,serviceName,valueData,callId,partitionId,null,nonBlocking);
    boolean sent=node.clusterImpl.send(ssw,target);
    if (!sent) {
      inv.setResult(new IOException("Packet not sent!"));
    }
  }
}
