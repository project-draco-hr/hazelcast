{
  final Address target=inv.getTarget();
  final Operation op=inv.getOperation();
  final int partitionId=inv.getPartitionId();
  final String serviceName=inv.getServiceName();
  final boolean nonBlocking=(op instanceof NonBlockingOperation);
  setOperationContext(op,serviceName,node.getThisAddress(),-1,partitionId).setLocal(true);
  if (target == null) {
    throw new NullPointerException(inv.getOperation() + ": Target is null");
  }
  if (!(op instanceof NonMemberOperation) && getClusterImpl().getMember(target) == null) {
    throw new TargetNotMemberException(target,partitionId,op.getClass().getName(),serviceName);
  }
  if (getThisAddress().equals(target)) {
    final ExecutorService executor=getExecutor(partitionId,nonBlocking);
    executor.execute(new Runnable(){
      public void run(){
        try {
          if (partitionId != -1 && !nonBlocking) {
            PartitionInfo partitionInfo=getPartitionInfo(partitionId);
            Address owner=partitionInfo.getOwner();
            if (!getThisAddress().equals(owner)) {
              throw new WrongTargetException(getThisAddress(),owner,partitionId,op.getClass().getName(),serviceName);
            }
          }
          inv.run();
        }
 catch (        Throwable e) {
          inv.setResult(e);
        }
      }
    }
);
  }
 else {
    final Packet packet=new Packet();
    packet.operation=REMOTE_CALL;
    packet.blockId=partitionId;
    packet.name=serviceName;
    packet.longValue=nonBlocking ? 1 : 0;
    Data valueData=toData(op);
    packet.setValue(valueData);
    TheCall call=new TheCall(target,inv);
    boolean sent=node.concurrentMapManager.registerAndSend(target,packet,call);
    if (!sent) {
      inv.setResult(new IOException("Packet not sent!"));
    }
  }
}
