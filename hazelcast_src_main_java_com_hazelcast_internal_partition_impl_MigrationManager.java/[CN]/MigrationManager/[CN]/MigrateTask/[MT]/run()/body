{
  if (!node.isMaster()) {
    return;
  }
  try {
    MemberImpl partitionOwner=getPartitionOwner();
    if (partitionOwner == null) {
      logger.fine("Partition owner is null. Ignoring " + migrationInfo);
      triggerRepartitioningAfterMigrationFailure();
      return;
    }
    if (migrationInfo.getSource() != null) {
      if (node.getClusterService().getMember(migrationInfo.getSource()) == null) {
        logger.fine("Source is not member anymore. Ignoring " + migrationInfo);
        triggerRepartitioningAfterMigrationFailure();
        return;
      }
    }
    if (node.getClusterService().getMember(migrationInfo.getDestination()) == null) {
      logger.fine("Destination is not member anymore. Ignoring " + migrationInfo);
      triggerRepartitioningAfterMigrationFailure();
      return;
    }
    internalMigrationListener.onMigrationStart(MigrationParticipant.MASTER,migrationInfo);
    partitionService.getPartitionEventManager().sendMigrationEvent(migrationInfo,MigrationEvent.MigrationStatus.STARTED);
    if (logger.isFineEnabled()) {
      logger.fine("Starting Migration: " + migrationInfo);
    }
    Boolean result=executeMigrateOperation(partitionOwner);
    processMigrationResult(result);
  }
 catch (  Throwable t) {
    final Level level=migrationInfo.isValid() ? Level.WARNING : Level.FINEST;
    logger.log(level,"Error [" + t.getClass() + ": "+ t.getMessage()+ "] during "+ migrationInfo);
    logger.finest(t);
    migrationOperationFailed();
  }
}
