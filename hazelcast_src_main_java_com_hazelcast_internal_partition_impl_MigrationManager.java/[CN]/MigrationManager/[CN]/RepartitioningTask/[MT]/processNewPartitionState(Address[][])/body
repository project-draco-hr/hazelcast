{
  final MutableInteger lostCount=new MutableInteger();
  final MutableInteger migrationCount=new MutableInteger();
  final List<Queue<MigrationInfo>> migrations=new ArrayList<Queue<MigrationInfo>>(newState.length);
  for (int partitionId=0; partitionId < newState.length; partitionId++) {
    InternalPartitionImpl currentPartition=partitionStateManager.getPartitionImpl(partitionId);
    Address[] currentReplicas=currentPartition.getReplicaAddresses();
    Address[] newReplicas=newState[partitionId];
    MigrationCollector migrationCollector=new MigrationCollector(currentPartition,migrationCount,lostCount);
    if (logger.isFinestEnabled()) {
      logger.finest("Planning migrations for partition: " + partitionId + ". Current replicas: "+ Arrays.toString(currentReplicas)+ ", New replicas: "+ Arrays.toString(newReplicas));
    }
    migrationPlanner.planMigrations(currentReplicas,newReplicas,migrationCollector);
    List<MigrationInfo> plannedMigrations=migrationCollector.migrations;
    migrationPlanner.prioritizeCopiesAndShiftUps(plannedMigrations);
    migrations.add(new LinkedList<MigrationInfo>(plannedMigrations));
  }
  scheduleMigrations(migrations);
  logMigrationStatistics(migrationCount.value,lostCount.value);
}
