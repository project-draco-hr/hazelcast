{
  if (!node.isMaster()) {
    return false;
  }
  if (node.getThisAddress().equals(migrationInfo.getDestination())) {
    return true;
  }
  try {
    PartitionRuntimeState partitionState=partitionService.createMigrationCommitPartitionState(migrationInfo,newAddresses);
    MigrationCommitOperation operation=new MigrationCommitOperation(partitionState);
    Future<Boolean> future=nodeEngine.getOperationService().createInvocationBuilder(SERVICE_NAME,operation,migrationInfo.getDestination()).setTryCount(Integer.MAX_VALUE).setCallTimeout(Long.MAX_VALUE).invoke();
    future.get();
    return true;
  }
 catch (  Throwable t) {
    if (t instanceof MemberLeftException || t instanceof TargetNotMemberException) {
      logger.warning("Migration commit failed for " + migrationInfo + " since destination left the cluster");
    }
 else {
      logger.severe("Migration commit failed for " + migrationInfo + " with "+ t);
    }
    return false;
  }
}
