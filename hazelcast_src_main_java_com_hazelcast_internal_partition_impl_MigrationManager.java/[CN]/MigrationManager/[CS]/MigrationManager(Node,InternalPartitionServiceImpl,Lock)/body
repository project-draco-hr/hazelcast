{
  this.node=node;
  this.nodeEngine=node.nodeEngine;
  this.partitionService=service;
  this.logger=node.getLogger(getClass());
  this.partitionServiceLock=partitionServiceLock;
  HazelcastProperties properties=node.getProperties();
  long intervalMillis=properties.getMillis(GroupProperty.PARTITION_MIGRATION_INTERVAL);
  partitionMigrationInterval=(intervalMillis > 0 ? intervalMillis : 0);
  partitionMigrationTimeout=properties.getMillis(GroupProperty.PARTITION_MIGRATION_TIMEOUT);
  partitionStateManager=partitionService.getPartitionStateManager();
  ILogger migrationThreadLogger=node.getLogger(MigrationThread.class);
  migrationThread=new MigrationThread(this,node.getHazelcastThreadGroup(),migrationThreadLogger,migrationQueue);
  long migrationPauseDelayMs=properties.getMillis(GroupProperty.MIGRATION_MIN_DELAY_ON_MEMBER_REMOVED_SECONDS);
  ExecutionService executionService=nodeEngine.getExecutionService();
  delayedResumeMigrationTrigger=new CoalescingDelayedTrigger(executionService,migrationPauseDelayMs,2 * migrationPauseDelayMs,new Runnable(){
    @Override public void run(){
      resumeMigration();
    }
  }
);
}
