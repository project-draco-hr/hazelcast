{
  return new EventHandler<PortableEntryEvent>(){
    public void handle(    PortableEntryEvent event){
      V value=null;
      V oldValue=null;
      if (includeValue) {
        value=(V)toObject(event.getValue());
        oldValue=(V)toObject(event.getOldValue());
      }
      K key=(K)toObject(event.getKey());
      Member member=getContext().getClusterService().getMember(event.getUuid());
      EntryEvent<K,V> entryEvent=new EntryEvent<K,V>(name,member,event.getEventType().getType(),key,oldValue,value);
switch (event.getEventType()) {
case ADDED:
        listener.entryAdded(entryEvent);
      break;
case REMOVED:
    listener.entryRemoved(entryEvent);
  break;
case UPDATED:
listener.entryUpdated(entryEvent);
break;
case EVICTED:
listener.entryEvicted(entryEvent);
break;
default :
throw new IllegalArgumentException("Not a known event type " + event.getEventType());
}
}
@Override public void onListenerRegister(){
}
}
;
}
