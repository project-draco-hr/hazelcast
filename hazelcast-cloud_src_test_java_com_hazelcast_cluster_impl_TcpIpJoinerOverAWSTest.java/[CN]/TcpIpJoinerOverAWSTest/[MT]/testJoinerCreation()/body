{
  Config config=new Config();
  JoinConfig join=config.getNetworkConfig().getJoin();
  join.getMulticastConfig().setEnabled(false);
  AwsConfig awsConfig=join.getAwsConfig();
  awsConfig.setEnabled(true).setAccessKey(randomString()).setSecretKey(randomString());
  HazelcastInstanceImpl instance=Mockito.mock(HazelcastInstanceImpl.class);
  final AtomicReference<ServerSocketChannel> channelRef=new AtomicReference<ServerSocketChannel>();
  NodeContext nodeContext=new DefaultNodeContext(){
    @Override public ConnectionManager createConnectionManager(    Node node,    ServerSocketChannel serverSocketChannel){
      channelRef.set(serverSocketChannel);
      return super.createConnectionManager(node,serverSocketChannel);
    }
  }
;
  Node node=new Node(instance,config,nodeContext);
  try {
    channelRef.get().close();
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  Joiner joiner=node.getJoiner();
  Assert.assertNotNull(joiner);
  Assert.assertEquals(TcpIpJoinerOverAWS.class,joiner.getClass());
}
