{
  if (obj instanceof Data) {
    return (Data)obj;
  }
  bbos.reset();
  byte typeId=SERIALIZER_TYPE_OBJECT;
  if (obj instanceof DataSerializable) {
    typeId=SERIALIZER_TYPE_DATA;
  }
 else   if (obj instanceof byte[]) {
    typeId=SERIALIZER_TYPE_BYTE_ARRAY;
  }
 else   if (obj instanceof Long) {
    typeId=SERIALIZER_TYPE_LONG;
  }
 else   if (obj instanceof Integer) {
    typeId=SERIALIZER_TYPE_INTEGER;
  }
 else   if (obj instanceof String) {
    typeId=SERIALIZER_TYPE_STRING;
  }
 else   if (obj instanceof Date) {
    typeId=SERIALIZER_TYPE_DATE;
  }
 else   if (obj instanceof Class) {
    typeId=SERIALIZER_TYPE_CLASS;
  }
 else   if (obj instanceof BigInteger) {
    typeId=SERIALIZER_TYPE_BIG_INTEGER;
  }
  bbos.writeByte(typeId);
  typeSerializer[typeId].write(bbos,obj);
  bbos.flush();
  Data data=new Data(bbos.getBytes(),bbos.size());
  data.postRead();
  if (bbos.size() > OUTPUT_STREAM_BUFFER_SIZE) {
    bbos.set(new byte[OUTPUT_STREAM_BUFFER_SIZE]);
  }
  return data;
}
