{
  HazelcastInstance hClient=getHazelcastClient();
  final CountDownLatch latch=new CountDownLatch(1);
  final Object o=new Object();
  Transaction transaction=hClient.getTransaction();
  transaction.begin();
  final IMap<String,String> map=hClient.getMap("testTransactionVisibilityFromDifferentThreads");
  map.put("1","A");
  assertEquals("A",map.get("1"));
  new Thread(new Runnable(){
    public void run(){
      assertNull(map.get("1"));
      if (!map.containsKey("1")) {
        latch.countDown();
      }
synchronized (o) {
        o.notify();
      }
    }
  }
).start();
synchronized (o) {
    o.wait();
  }
  transaction.rollback();
  assertNull(map.get("1"));
  assertTrue(latch.await(1,TimeUnit.MICROSECONDS));
}
