{
  this.inputOutputFactory=inputOutputFactory;
  this.classLoader=classLoader;
  this.managedContext=managedContext;
  this.globalPartitioningStrategy=partitionStrategy;
  this.outputBufferSize=initialOutputBufferSize;
  this.overrideCustomSerialization=parseBoolean(System.getProperty(SERIALIZATION_CUSTOM_OVERRIDE,"false"));
  dataOutputQueue=new ThreadLocalOutputCache(this);
  PortableHookLoader loader=new PortableHookLoader(portableFactories,classLoader);
  portableContext=new PortableContextImpl(this,version);
  for (  ClassDefinition cd : loader.getDefinitions()) {
    portableContext.registerClassDefinition(cd);
  }
  dataSerializerAdapter=createSerializerAdapter(new DataSerializer(dataSerializableFactories,classLoader));
  portableSerializer=new PortableSerializer(portableContext,loader.getFactories());
  portableSerializerAdapter=createSerializerAdapter(portableSerializer);
  registerConstantSerializers();
  registerJvmTypeSerializers(enableCompression,enableSharedObject);
  registerClassDefinitions(classDefinitions,checkClassDefErrors);
}
