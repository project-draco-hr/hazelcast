{
  this.managedContext=managedContext;
  registerConstant(DataSerializable.class,dataSerializer=new DataSerializer(dataSerializableFactories));
  registerConstant(Portable.class,portableSerializer=new PortableSerializer(this,portableFactories));
  registerConstant(Byte.class,new ByteSerializer());
  registerConstant(Boolean.class,new BooleanSerializer());
  registerConstant(Character.class,new CharSerializer());
  registerConstant(Short.class,new ShortSerializer());
  registerConstant(Integer.class,new IntegerSerializer());
  registerConstant(Long.class,new LongSerializer());
  registerConstant(Float.class,new FloatSerializer());
  registerConstant(Double.class,new DoubleSerializer());
  registerConstant(byte[].class,new ByteArraySerializer());
  registerConstant(char[].class,new CharArraySerializer());
  registerConstant(short[].class,new ShortArraySerializer());
  registerConstant(int[].class,new IntegerArraySerializer());
  registerConstant(long[].class,new LongArraySerializer());
  registerConstant(float[].class,new FloatArraySerializer());
  registerConstant(double[].class,new DoubleArraySerializer());
  registerConstant(String.class,new StringSerializer());
  safeRegister(Date.class,new DateSerializer());
  safeRegister(BigInteger.class,new BigIntegerSerializer());
  safeRegister(BigDecimal.class,new BigDecimalSerializer());
  safeRegister(Externalizable.class,new Externalizer());
  safeRegister(Serializable.class,new ObjectSerializer());
  safeRegister(Class.class,new ClassSerializer());
  serializationContext=new SerializationContextImpl(portableSerializer.getFactories().keySet(),version);
}
