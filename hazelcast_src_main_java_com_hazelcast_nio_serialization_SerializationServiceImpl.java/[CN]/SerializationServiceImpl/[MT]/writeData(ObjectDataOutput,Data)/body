{
  try {
    boolean isNull=data == null;
    out.writeBoolean(isNull);
    if (isNull) {
      return;
    }
    out.writeInt(data.getType());
    out.writeInt(data.hasPartitionHash() ? data.getPartitionHash() : 0);
    byte[] header=data.getHeader();
    if (header == null) {
      out.writeInt(0);
    }
 else {
      if (!(out instanceof PortableDataOutput)) {
        throw new HazelcastSerializationException("PortableDataOutput is required to be able " + "to write Portable header.");
      }
      PortableDataOutput output=(PortableDataOutput)out;
      DynamicByteBuffer headerBuffer=output.getHeaderBuffer();
      out.writeInt(header.length);
      out.writeInt(headerBuffer.position());
      headerBuffer.put(header);
    }
    int size=data.dataSize();
    out.writeInt(size);
    if (size > 0) {
      writeDataInternal(out,data);
    }
  }
 catch (  Throwable e) {
    throw handleException(e);
  }
}
