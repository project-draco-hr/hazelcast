{
  if (data == null || data.bufferSize() == 0) {
    return null;
  }
  ContextAwareDataInput in=null;
  try {
    final int typeId=data.type;
    final TypeSerializer serializer=serializerFor(typeId);
    if (serializer == null) {
      if (active) {
        throw new HazelcastSerializationException("There is no suitable de-serializer for type " + typeId);
      }
      throw new HazelcastInstanceNotActiveException();
    }
    if (data.type == SerializationConstants.CONSTANT_TYPE_PORTABLE) {
      serializationContext.registerClassDefinition(data.classDefinition);
    }
    in=new ContextAwareDataInput(data,this);
    Object obj=serializer.read(in);
    if (managedContext != null) {
      obj=managedContext.initialize(obj);
    }
    return obj;
  }
 catch (  Throwable e) {
    handleException(e);
  }
 finally {
    IOUtil.closeResource(in);
  }
  return null;
}
