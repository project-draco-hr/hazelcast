{
  final Map<Integer,PortableFactory> portableFactories=new HashMap<Integer,PortableFactory>(config.getPortableFactories());
  final Map<Integer,String> portableFactoryClasses=config.getPortableFactoryClasses();
  for (  Map.Entry<Integer,String> entry : portableFactoryClasses.entrySet()) {
    if (portableFactories.containsKey(entry.getKey())) {
      throw new IllegalArgumentException("PortableFactory with factoryId '" + entry.getKey() + "' is already registered!");
    }
    PortableFactory f=ClassLoaderUtil.newInstance(entry.getValue());
    portableFactories.put(entry.getKey(),f);
  }
  for (  Map.Entry<Integer,PortableFactory> entry : portableFactories.entrySet()) {
    if (entry.getKey() <= 0) {
      throw new IllegalArgumentException("PortableFactory factoryId must be positive! -> " + entry.getValue());
    }
  }
  return portableFactories;
}
