{
  if (!(object instanceof Data)) {
    return (T)object;
  }
  Data data=(Data)object;
  if (isNullData(data)) {
    return null;
  }
  BufferPool pool=bufferPoolThreadLocal.get();
  BufferObjectDataInput in=pool.takeInputBuffer(data);
  try {
    final int typeId=data.getType();
    final SerializerAdapter serializer=serializerFor(typeId);
    if (serializer == null) {
      if (active) {
        throw new HazelcastSerializationException("There is no suitable de-serializer for type " + typeId);
      }
      throw new HazelcastInstanceNotActiveException();
    }
    Object obj=serializer.read(in);
    if (managedContext != null) {
      obj=managedContext.initialize(obj);
    }
    return (T)obj;
  }
 catch (  Throwable e) {
    throw handleException(e);
  }
 finally {
    pool.returnInputBuffer(in);
  }
}
