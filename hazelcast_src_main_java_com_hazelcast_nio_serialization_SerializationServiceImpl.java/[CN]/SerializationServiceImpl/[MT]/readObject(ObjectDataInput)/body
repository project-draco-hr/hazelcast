{
  try {
    final boolean isNull=in.readBoolean();
    if (isNull) {
      return null;
    }
    final int typeId=in.readInt();
    final SerializerAdapter serializer=serializerFor(typeId);
    if (serializer == null) {
      if (active) {
        throw new HazelcastSerializationException("There is no suitable de-serializer for type " + typeId);
      }
      throw new HazelcastInstanceNotActiveException();
    }
    if (typeId == SerializationConstants.CONSTANT_TYPE_PORTABLE && in instanceof PortableContextAwareInputStream) {
      int factoryId=in.readInt();
      int classId=in.readInt();
      int version=in.readInt();
      PortableContextAwareInputStream ctxIn=(PortableContextAwareInputStream)in;
      ctxIn.setFactoryId(factoryId);
      ctxIn.setDataClassId(classId);
      ctxIn.setDataVersion(version);
    }
    Object obj=serializer.read(in);
    if (managedContext != null) {
      obj=managedContext.initialize(obj);
    }
    return obj;
  }
 catch (  Throwable e) {
    handleException(e);
  }
  return null;
}
