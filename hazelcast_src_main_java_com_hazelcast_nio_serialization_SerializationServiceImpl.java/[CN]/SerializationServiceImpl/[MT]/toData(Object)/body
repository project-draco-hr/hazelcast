{
  if (obj == null) {
    return null;
  }
  if (obj instanceof Data) {
    return (Data)obj;
  }
  final ContextAwareDataOutput out=pop();
  try {
    final TypeSerializer serializer=serializerFor(obj.getClass());
    if (serializer == null) {
      if (active) {
        throw new HazelcastSerializationException("There is no suitable serializer for " + obj.getClass());
      }
      throw new HazelcastInstanceNotActiveException();
    }
    serializer.write(out,obj);
    final Data data=new Data(serializer.getTypeId(),out.toByteArray());
    if (obj instanceof Portable) {
      data.cd=serializationContext.lookup(((Portable)obj).getClassId());
    }
    if (obj instanceof PartitionAware) {
      final Object pk=((PartitionAware)obj).getPartitionKey();
      final Data partitionKey=toData(pk);
      final int partitionHash=(partitionKey == null) ? -1 : partitionKey.getPartitionHash();
      data.setPartitionHash(partitionHash);
    }
    return data;
  }
 catch (  Throwable e) {
    handleException(e);
  }
 finally {
    push(out);
  }
  return null;
}
