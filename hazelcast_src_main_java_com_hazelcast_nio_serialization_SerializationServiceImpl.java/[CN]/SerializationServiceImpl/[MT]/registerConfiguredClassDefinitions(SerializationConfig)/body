{
  final Collection<ClassDefinition> classDefinitions=config.getClassDefinitions();
  final Map<Integer,ClassDefinition> classDefMap=new HashMap<Integer,ClassDefinition>(classDefinitions.size());
  for (  ClassDefinition cd : classDefinitions) {
    if (classDefMap.containsKey(cd.getClassId())) {
      throw new HazelcastSerializationException("Duplicate registration found for class-id[" + cd.getClassId() + "]!");
    }
    classDefMap.put(cd.getClassId(),cd);
  }
  for (  ClassDefinition classDefinition : classDefinitions) {
    registerClassDefinition(classDefinition,classDefMap,config.isCheckClassDefErrors());
  }
}
