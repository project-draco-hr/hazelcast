{
  if (DataSerializable.class.isAssignableFrom(type) && serializer.getClass() != DataSerializer.class) {
    throw new IllegalArgumentException("DataSerializable[" + type + "] serializer cannot be overridden!");
  }
  if (Portable.class.isAssignableFrom(type) && serializer.getClass() != PortableSerializer.class) {
    throw new IllegalArgumentException("Portable[" + type + "] serializer cannot be overridden!");
  }
  TypeSerializer ts=typeMap.putIfAbsent(type,serializer);
  if (ts != null && ts.getClass() != serializer.getClass()) {
    throw new IllegalStateException("Serializer[" + ts + "] has been already registered for type: "+ type);
  }
  ts=idMap.putIfAbsent(serializer.getTypeId(),serializer);
  if (ts != null && ts.getClass() != serializer.getClass()) {
    throw new IllegalStateException("Serializer [" + ts + "] has been already registered for type-id: "+ serializer.getTypeId());
  }
}
