{
  seq=ringbuffer.headSequence();
  Random random=new Random();
  long lastLogMs=0;
  for (; ; ) {
    int max=max(1,random.nextInt(MAX_BATCH));
    ReadResultSet<Long> result=ringbuffer.readManyAsync(seq,1,max,null).get();
    for (    Long item : result) {
      if (item.equals(Long.MIN_VALUE)) {
        return;
      }
      assertEquals(new Long(seq),item);
      seq++;
      long currentTimeMs=System.currentTimeMillis();
      if (lastLogMs + TimeUnit.SECONDS.toMillis(5000) < currentTimeMs) {
        lastLogMs=currentTimeMs;
        logger.info(getName() + " at " + seq);
      }
    }
  }
}
