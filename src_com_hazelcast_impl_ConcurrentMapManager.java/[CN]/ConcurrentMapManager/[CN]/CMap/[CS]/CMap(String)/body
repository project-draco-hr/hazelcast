{
  super();
  this.name=name;
  mapRecords=new SortedHashMap<Data,Record>(10000);
  MapConfig mapConfig=Config.get().getMapConfig(name.substring(2));
  this.backupCount=mapConfig.getBackupCount();
  ttl=mapConfig.getTimeToLiveSeconds() * 1000L;
  if ("LFU".equalsIgnoreCase(mapConfig.getEvictionPolicy())) {
    evictionPolicy=OrderingType.LFU;
  }
 else   if ("LRU".equalsIgnoreCase(mapConfig.getEvictionPolicy())) {
    evictionPolicy=OrderingType.LRU;
  }
 else {
    evictionPolicy=OrderingType.NONE;
  }
  if (evictionPolicy == OrderingType.NONE) {
    maxSize=Integer.MAX_VALUE;
  }
 else {
    maxSize=(mapConfig.getMaxSize() == 0) ? MapConfig.DEFAULT_MAX_SIZE : mapConfig.getMaxSize();
  }
  evictionRate=mapConfig.getEvictionPercentage() / 100f;
  instanceType=getInstanceType(name);
  MapStoreConfig mapStoreConfig=mapConfig.getMapStoreConfig();
  if (mapStoreConfig != null) {
    if (mapStoreConfig.isEnabled()) {
      String mapStoreClassName=mapStoreConfig.getClassName();
      try {
        Object storeInstance=Class.forName(mapStoreClassName,true,Thread.currentThread().getContextClassLoader()).newInstance();
        if (storeInstance instanceof MapLoader) {
          loader=(MapLoader)storeInstance;
        }
        if (storeInstance instanceof MapStore) {
          store=(MapStore)storeInstance;
        }
        writeDelaySeconds=mapStoreConfig.getWriteDelaySeconds();
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
}
