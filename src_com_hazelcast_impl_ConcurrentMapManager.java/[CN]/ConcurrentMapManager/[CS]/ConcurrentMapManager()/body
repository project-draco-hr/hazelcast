{
  ClusterService.get().registerInvocationProcessor(OP_CMAP_GET,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleGet(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_PUT,new InvocationProcessor(){
    public void process(    Invocation inv){
      handlePut(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_BACKUP_ADD,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleBackupAdd(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_BACKUP_REMOVE,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleBackupRemove(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_REMOVE,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleRemove(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_REMOVE_IF_SAME,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleRemove(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_LOCK,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleLock(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_LOCK_RETURN_OLD,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleLock(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_UNLOCK,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleLock(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_BACKUP_LOCK,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleBackupLock(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_READ,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleRead(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_SIZE,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleSize(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_ADD_TO_LIST,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleAdd(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_ADD_TO_SET,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleAdd(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_CONTAINS_KEY,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleContains(true,inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_CONTAINS_VALUE,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleContains(false,inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_BLOCK_INFO,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleBlockInfo(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_BLOCKS,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleBlocks(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_PUT_IF_ABSENT,new InvocationProcessor(){
    public void process(    Invocation inv){
      handlePut(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_REPLACE_IF_NOT_NULL,new InvocationProcessor(){
    public void process(    Invocation inv){
      handlePut(inv);
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_MIGRATION_COMPLETE,new InvocationProcessor(){
    public void process(    Invocation inv){
      doMigrationComplete(inv.conn.getEndPoint());
    }
  }
);
  ClusterService.get().registerInvocationProcessor(OP_CMAP_MIGRATE_RECORD,new InvocationProcessor(){
    public void process(    Invocation inv){
      handleMigrateRecord(inv);
    }
  }
);
}
