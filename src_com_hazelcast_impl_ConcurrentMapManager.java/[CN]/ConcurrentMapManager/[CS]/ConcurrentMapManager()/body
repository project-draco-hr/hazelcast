{
  ClusterService.get().registerPacketProcessor(OP_CMAP_GET,new DefaultPacketProcessor(false,true,false,true){
    void handle(    Request request){
      doGet(request);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_PUT,new DefaultPacketProcessor(false,true,true,true){
    void handle(    Request request){
      doPut(request,true);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_BACKUP_PUT,new DefaultPacketProcessor(){
    void handle(    Request request){
      doBackup(request);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_PUT_IF_ABSENT,new DefaultPacketProcessor(false,true,true,true){
    void handle(    Request request){
      doPut(request,true);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_REPLACE_IF_NOT_NULL,new DefaultPacketProcessor(false,true,true,true){
    void handle(    Request request){
      doPut(request,true);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_BACKUP_ADD,new DefaultPacketProcessor(){
    void handle(    Request request){
      doBackup(request);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_BACKUP_REMOVE,new DefaultPacketProcessor(false,false,false,false){
    void handle(    Request request){
      doBackup(request);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_BACKUP_LOCK,new DefaultPacketProcessor(false,false,false,false){
    void handle(    Request request){
      doLock(request);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_PUT_MULTI,new DefaultPacketProcessor(false,true,true,false){
    void handle(    Request request){
      doPut(request,false);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_REMOVE,new DefaultPacketProcessor(false,true,true,true){
    void handle(    Request request){
      doRemove(request,true);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_REMOVE_MULTI,new DefaultPacketProcessor(false,true,true,true){
    void handle(    Request request){
      doRemoveMulti(request);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_REMOVE_ITEM,new DefaultPacketProcessor(false,true,true,false){
    void handle(    Request request){
      doRemove(request,false);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_REMOVE_IF_SAME,new DefaultPacketProcessor(false,true,true,false){
    void handle(    Request request){
      doRemove(request,true);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_LOCK,new DefaultPacketProcessor(false,true,true,false){
    void handle(    Request request){
      doLock(request);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_LOCK_RETURN_OLD,new DefaultPacketProcessor(false,true,true,false){
    void handle(    Request request){
      doLock(request);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_UNLOCK,new DefaultPacketProcessor(false,true,true,false){
    void handle(    Request request){
      doLock(request);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_SIZE,new PacketProcessor(){
    public void process(    PacketQueue.Packet packet){
      handleSize(packet);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_ITERATE,new DefaultPacketProcessor(true,false,false,true){
    void handle(    Request request){
      CMap cmap=getMap(request.name);
      cmap.getEntries(remoteReq);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_ITERATE_KEYS,new DefaultPacketProcessor(true,false,false,true){
    void handle(    Request request){
      CMap cmap=getMap(request.name);
      cmap.getEntries(remoteReq);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_ADD_TO_LIST,new DefaultPacketProcessor(false,true,false,false){
    void handle(    Request request){
      doAdd(request);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_ADD_TO_SET,new DefaultPacketProcessor(false,true,false,false){
    void handle(    Request request){
      doAdd(request);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_CONTAINS,new DefaultPacketProcessor(true,false,false,false){
    void handle(    Request request){
      doContains(request);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_BLOCK_INFO,new PacketProcessor(){
    public void process(    PacketQueue.Packet packet){
      handleBlockInfo(packet);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_BLOCKS,new PacketProcessor(){
    public void process(    Packet packet){
      handleBlocks(packet);
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_MIGRATION_COMPLETE,new PacketProcessor(){
    public void process(    Packet packet){
      doMigrationComplete(packet.conn.getEndPoint());
    }
  }
);
  ClusterService.get().registerPacketProcessor(OP_CMAP_MIGRATE_RECORD,new PacketProcessor(){
    public void process(    PacketQueue.Packet packet){
      handleMigrateRecord(packet);
    }
  }
);
}
