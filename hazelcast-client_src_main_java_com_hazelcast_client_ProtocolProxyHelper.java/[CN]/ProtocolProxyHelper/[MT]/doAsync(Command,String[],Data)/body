{
  final Call call=createCall(command,args,data);
  sendCall(call);
  return new Future<V>(){
    public boolean cancel(    boolean mayInterruptIfRunning){
      return false;
    }
    public boolean isCancelled(){
      return false;
    }
    public boolean isDone(){
      return call.hasResponse();
    }
    public V get() throws InterruptedException, ExecutionException {
      Protocol protocol=(Protocol)ProtocolProxyHelper.this.getResponse(call);
      return (V)ProtocolProxyHelper.this.getSingleObjectFromResponse(protocol);
    }
    public V get(    long timeout,    TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
      Protocol protocol=(Protocol)ProtocolProxyHelper.this.getResponse(call,timeout,unit);
      return (V)ProtocolProxyHelper.this.getSingleObjectFromResponse(protocol);
    }
  }
;
}
