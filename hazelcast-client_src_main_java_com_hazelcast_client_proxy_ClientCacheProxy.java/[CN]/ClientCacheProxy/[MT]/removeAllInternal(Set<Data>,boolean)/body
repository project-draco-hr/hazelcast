{
  final int partitionCount=getContext().getPartitionService().getPartitionCount();
  final Integer completionId=registerCompletionLatch(partitionCount);
  CacheClearRequest request=new CacheClearRequest(getDistributedObjectName(),keysData,isRemoveAll,completionId);
  try {
    final Map<Integer,Object> results=invoke(request);
    int completionCount=0;
    for (    Object result : results.values()) {
      if (result != null && result instanceof CacheClearResponse) {
        final Object response=((CacheClearResponse)result).getResponse();
        if (response instanceof Boolean) {
          completionCount++;
        }
        if (response instanceof Throwable) {
          throw (Throwable)response;
        }
      }
    }
    final CountDownLatch countDownLatch=syncLocks.get(completionId);
    if (countDownLatch != null) {
      for (int i=0; i < partitionCount - completionCount; i++) {
        countDownLatch.countDown();
      }
    }
    waitCompletionLatch(completionId);
  }
 catch (  Throwable t) {
    deregisterCompletionLatch(completionId);
    throw ExceptionUtil.rethrowAllowedTypeFirst(t,CacheException.class);
  }
}
