{
  final Collection<MapConfig> mCfgs=config.getMapConfigs().values();
  for (  MapConfig m : mCfgs) {
    xml.append("<map name=\"").append(m.getName()).append("\">");
    xml.append("<in-memory-format>").append(m.getInMemoryFormat()).append("</in-memory-format>");
    xml.append("<backup-count>").append(m.getBackupCount()).append("</backup-count>");
    xml.append("<async-backup-count>").append(m.getAsyncBackupCount()).append("</async-backup-count>");
    xml.append("<time-to-live-seconds>").append(m.getTimeToLiveSeconds()).append("</time-to-live-seconds>");
    xml.append("<max-idle-seconds>").append(m.getMaxIdleSeconds()).append("</max-idle-seconds>");
    xml.append("<eviction-policy>").append(m.getEvictionPolicy()).append("</eviction-policy>");
    xml.append("<max-size policy=\"").append(m.getMaxSizeConfig().getMaxSizePolicy()).append("\">").append(m.getMaxSizeConfig().getSize()).append("</max-size>");
    xml.append("<eviction-percentage>").append(m.getEvictionPercentage()).append("</eviction-percentage>");
    xml.append("<min-eviction-check-millis>").append(m.getMinEvictionCheckMillis()).append("</min-eviction-check-millis>");
    xml.append("<merge-policy>").append(m.getMergePolicy()).append("</merge-policy>");
    xml.append("<read-backup-data>").append(m.isReadBackupData()).append("</read-backup-data>");
    xml.append("<statistics-enabled>").append(m.isStatisticsEnabled()).append("</statistics-enabled>");
    mapStoreConfigXmlGenerator(xml,m);
    mapWanReplicationConfigXmlGenerator(xml,m);
    mapIndexConfigXmlGenerator(xml,m);
    mapEntryListenerConfigXmlGenerator(xml,m);
    mapPartitionLostListenerConfigXmlGenerator(xml,m);
    mapPartitionStrategyConfigXmlGenerator(xml,m);
  }
}
