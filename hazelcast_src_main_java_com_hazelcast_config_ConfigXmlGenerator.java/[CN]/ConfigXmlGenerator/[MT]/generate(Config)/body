{
  isNotNull(config,"Config");
  final StringBuilder xml=new StringBuilder();
  xml.append("<hazelcast ").append("xmlns=\"http://www.hazelcast.com/schema/config\"\n").append("xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n").append("xsi:schemaLocation=\"http://www.hazelcast.com/schema/config ").append("http://www.hazelcast.com/schema/config/hazelcast-config-3.3.xsd\">");
  xml.append("<group>");
  xml.append("<name>").append(config.getGroupConfig().getName()).append("</name>");
  xml.append("<password>").append("****").append("</password>");
  xml.append("</group>");
  if (config.getLicenseKey() != null) {
    xml.append("<license-key>").append(config.getLicenseKey()).append("</license-key>");
  }
  if (config.getManagementCenterConfig() != null) {
    ManagementCenterConfig mcConfig=config.getManagementCenterConfig();
    xml.append("<management-center enabled=\"").append(mcConfig.isEnabled()).append("\" update-interval=\"").append(mcConfig.getUpdateInterval()).append("\">").append(mcConfig.getUrl()).append("</management-center>");
  }
  appendProperties(xml,config.getProperties());
  wanReplicationXmlGenerator(xml,config);
  networkConfigXmlGenerator(xml,config);
  mapConfigXmlGenerator(xml,config);
  queueXmlGenerator(xml,config);
  multiMapXmlGenerator(xml,config);
  topicXmlGenerator(xml,config);
  semaphoreXmlGenerator(xml,config);
  executorXmlGenerator(xml,config);
  partititonGroupXmlGenerator(xml,config);
  listenerXmlGenerator(xml,config);
  xml.append("</hazelcast>");
  return format(xml.toString(),INDENT);
}
