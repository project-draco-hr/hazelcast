{
  if (!formatted) {
    return input;
  }
  StreamResult xmlOutput=null;
  try {
    final Source xmlInput=new StreamSource(new StringReader(input));
    xmlOutput=new StreamResult(new StringWriter());
    TransformerFactory transformerFactory=TransformerFactory.newInstance();
    transformerFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl",true);
    try {
      transformerFactory.setAttribute("indent-number",indent);
    }
 catch (    IllegalArgumentException e) {
      if (LOGGER.isFinestEnabled()) {
        LOGGER.finest("Failed to set indent-number attribute; cause: " + e.getMessage());
      }
    }
    Transformer transformer=transformerFactory.newTransformer();
    transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION,"yes");
    transformer.setOutputProperty(OutputKeys.ENCODING,"UTF-8");
    transformer.setOutputProperty(OutputKeys.INDENT,"yes");
    try {
      transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount",Integer.toString(indent));
    }
 catch (    IllegalArgumentException e) {
      if (LOGGER.isFinestEnabled()) {
        LOGGER.finest("Failed to set indent-amount property; cause: " + e.getMessage());
      }
    }
    transformer.transform(xmlInput,xmlOutput);
    String response=xmlOutput.getWriter().toString();
    return response;
  }
 catch (  Exception e) {
    LOGGER.warning(e);
    return input;
  }
 finally {
    if (xmlOutput != null) {
      closeResource(xmlOutput.getWriter());
    }
  }
}
