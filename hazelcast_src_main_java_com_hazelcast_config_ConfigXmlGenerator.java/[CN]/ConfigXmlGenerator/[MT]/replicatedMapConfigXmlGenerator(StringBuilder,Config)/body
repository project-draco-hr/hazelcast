{
  final Collection<ReplicatedMapConfig> replicatedMapConfigs=config.getReplicatedMapConfigs().values();
  for (  ReplicatedMapConfig r : replicatedMapConfigs) {
    xml.append("<replicatedmap name=\"").append(r.getName()).append("\">");
    xml.append("<in-memory-format>").append(r.getInMemoryFormat()).append("</in-memory-format>");
    xml.append("<concurrency-level>").append(r.getConcurrencyLevel()).append("</concurrency-level>");
    xml.append("<replication-delay-millis>").append(r.getReplicationDelayMillis()).append("</replication-delay-millis>");
    xml.append("<async-fillup>").append(r.isAsyncFillup()).append("</async-fillup>");
    xml.append("<statistics-enabled>").append(r.isStatisticsEnabled()).append("</statistics-enabled>");
    if (!r.getListenerConfigs().isEmpty()) {
      xml.append("<entry-listeners>");
      for (      ListenerConfig lc : r.getListenerConfigs()) {
        xml.append("<entry-listener include-value=\"").append(lc.isIncludeValue()).append("\" local=\"").append(lc.isLocal()).append("\">");
        final String clazz=lc.getImplementation() != null ? lc.getImplementation().getClass().getName() : lc.getClassName();
        xml.append(clazz);
        xml.append("</entry-listener>");
      }
      xml.append("</entry-listeners>");
    }
    xml.append("</replicatedmap>");
  }
}
