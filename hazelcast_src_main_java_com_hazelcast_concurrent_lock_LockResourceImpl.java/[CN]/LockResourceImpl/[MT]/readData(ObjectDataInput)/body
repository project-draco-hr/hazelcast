{
  key=new Data();
  key.readData(in);
  owner=in.readUTF();
  threadId=in.readLong();
  lockCount=in.readInt();
  expirationTime=in.readLong();
  acquireTime=in.readLong();
  transactional=in.readBoolean();
  int len=in.readInt();
  if (len > 0) {
    conditions=new HashMap<String,ConditionInfo>(len);
    for (int i=0; i < len; i++) {
      ConditionInfo condition=new ConditionInfo();
      condition.readData(in);
      conditions.put(condition.getConditionId(),condition);
    }
  }
  len=in.readInt();
  if (len > 0) {
    signalKeys=new ArrayList<ConditionKey>(len);
    for (int i=0; i < len; i++) {
      signalKeys.add(new ConditionKey(in.readUTF(),key,in.readUTF()));
    }
  }
  len=in.readInt();
  if (len > 0) {
    expiredAwaitOps=new ArrayList<AwaitOperation>(len);
    for (int i=0; i < len; i++) {
      AwaitOperation op=new AwaitOperation();
      op.readData(in);
      expiredAwaitOps.add(op);
    }
  }
}
