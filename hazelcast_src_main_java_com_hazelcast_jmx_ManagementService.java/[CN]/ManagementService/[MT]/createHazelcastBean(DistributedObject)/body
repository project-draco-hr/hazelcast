{
  try {
    HazelcastMBean bean=null;
    if (distributedObject instanceof IList) {
      bean=new ListMBean((IList)distributedObject,this);
    }
 else     if (distributedObject instanceof IAtomicLong) {
      bean=new AtomicLongMBean((IAtomicLong)distributedObject,this);
    }
 else     if (distributedObject instanceof IAtomicReference) {
      bean=new AtomicReferenceMBean((IAtomicReference)distributedObject,this);
    }
 else     if (distributedObject instanceof ICountDownLatch) {
      bean=new CountDownLatchMBean((ICountDownLatch)distributedObject,this);
    }
 else     if (distributedObject instanceof ILock) {
      bean=new LockMBean((ILock)distributedObject,this);
    }
 else     if (distributedObject instanceof IMap) {
      bean=new MapMBean((IMap)distributedObject,this);
    }
 else     if (distributedObject instanceof MultiMap) {
      bean=new MultiMapMBean((MultiMap)distributedObject,this);
    }
 else     if (distributedObject instanceof IQueue) {
      bean=new QueueMBean((IQueue)distributedObject,this);
    }
 else     if (distributedObject instanceof ISemaphore) {
      bean=new SemaphoreMBean((ISemaphore)distributedObject,this);
    }
 else     if (distributedObject instanceof IExecutorService) {
      bean=new ExecutorServiceMBean((IExecutorService)distributedObject,this);
    }
 else     if (distributedObject instanceof ISet) {
      bean=new SetMBean((ISet)distributedObject,this);
    }
 else     if (distributedObject instanceof ITopic) {
      bean=new TopicMBean((ITopic)distributedObject,this);
    }
    return bean;
  }
 catch (  HazelcastInstanceNotActiveException ignored) {
    ignore(ignored);
  }
  return null;
}
