{
  try {
    if (distributedObject instanceof IList) {
      return new ListMBean((IList)distributedObject,this);
    }
    if (distributedObject instanceof IAtomicLong) {
      return new AtomicLongMBean((IAtomicLong)distributedObject,this);
    }
    if (distributedObject instanceof IAtomicReference) {
      return new AtomicReferenceMBean((IAtomicReference)distributedObject,this);
    }
    if (distributedObject instanceof ICountDownLatch) {
      return new CountDownLatchMBean((ICountDownLatch)distributedObject,this);
    }
    if (distributedObject instanceof ILock) {
      return new LockMBean((ILock)distributedObject,this);
    }
    if (distributedObject instanceof IMap) {
      return new MapMBean((IMap)distributedObject,this);
    }
    if (distributedObject instanceof MultiMap) {
      return new MultiMapMBean((MultiMap)distributedObject,this);
    }
    if (distributedObject instanceof ReplicatedMapProxy) {
      return new ReplicatedMapMBean((ReplicatedMapProxy)distributedObject,this);
    }
    if (distributedObject instanceof IQueue) {
      return new QueueMBean((IQueue)distributedObject,this);
    }
    if (distributedObject instanceof ISemaphore) {
      return new SemaphoreMBean((ISemaphore)distributedObject,this);
    }
    if (distributedObject instanceof IExecutorService) {
      return new ExecutorServiceMBean((IExecutorService)distributedObject,this);
    }
    if (distributedObject instanceof ISet) {
      return new SetMBean((ISet)distributedObject,this);
    }
    if (distributedObject instanceof ITopic) {
      return new TopicMBean((ITopic)distributedObject,this);
    }
  }
 catch (  HazelcastInstanceNotActiveException ignored) {
  }
  return null;
}
