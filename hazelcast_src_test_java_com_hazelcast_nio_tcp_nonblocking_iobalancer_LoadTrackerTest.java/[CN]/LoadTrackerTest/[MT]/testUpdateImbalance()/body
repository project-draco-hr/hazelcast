{
  MigratableHandler selector1Handler1=mock(MigratableHandler.class);
  when(selector1Handler1.getEventCount()).thenReturn(0l).thenReturn(100l);
  when(selector1Handler1.getOwner()).thenReturn(selector1);
  loadTracker.addHandler(selector1Handler1);
  MigratableHandler selector2Handler1=mock(MigratableHandler.class);
  when(selector2Handler1.getEventCount()).thenReturn(0l).thenReturn(200l);
  when(selector2Handler1.getOwner()).thenReturn(selector2);
  loadTracker.addHandler(selector2Handler1);
  MigratableHandler selector2Handler3=mock(MigratableHandler.class);
  when(selector2Handler3.getEventCount()).thenReturn(0l).thenReturn(100l);
  when(selector2Handler3.getOwner()).thenReturn(selector2);
  loadTracker.addHandler(selector2Handler3);
  LoadImbalance loadImbalance=loadTracker.updateImbalance();
  assertEquals(0,loadImbalance.minimumEvents);
  assertEquals(0,loadImbalance.maximumEvents);
  loadTracker.updateImbalance();
  assertEquals(100,loadImbalance.minimumEvents);
  assertEquals(300,loadImbalance.maximumEvents);
  assertEquals(selector1,loadImbalance.destinationSelector);
  assertEquals(selector2,loadImbalance.sourceSelector);
}
