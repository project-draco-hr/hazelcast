{
  NamedNodeMap atts=node.getAttributes();
  for (int a=0; a < atts.getLength(); a++) {
    org.w3c.dom.Node att=atts.item(a);
    String value=getTextContent(att).trim();
    if (att.getNodeName().equals("enabled")) {
      join.joinMembers.enabled=checkTrue(value);
    }
 else     if (att.getNodeName().equals("conn-timeout-seconds")) {
      join.joinMembers.connectionTimeoutSeconds=getIntegerValue("conn-timeout-seconds",value,5);
    }
  }
  NodeList nodelist=node.getChildNodes();
  members:   for (int i=0; i < nodelist.getLength(); i++) {
    org.w3c.dom.Node n=nodelist.item(i);
    String value=getTextContent(n).trim();
    if (n.getNodeName().equalsIgnoreCase("hostname")) {
      join.joinMembers.lsMembers.add(value);
    }
 else     if (n.getNodeName().equalsIgnoreCase("interface")) {
      int indexStar=value.indexOf('*');
      int indexDash=value.indexOf('-');
      if (indexStar == -1 && indexDash == -1)       join.joinMembers.lsMembers.add(value);
 else {
        String first3=value.substring(0,value.lastIndexOf('.'));
        String lastOne=value.substring(value.lastIndexOf('.') + 1);
        if (first3.indexOf('*') != -1 && first3.indexOf('-') != -1) {
          String msg="First 3 parts of interface definition cannot contain '*' and '-'.";
          msg+="\nPlease change the value '" + value + "' in the config file.";
          Util.logWarning(msg);
          continue members;
        }
        if (lastOne.equals("*")) {
          for (int j=0; j < 256; j++) {
            join.joinMembers.lsMembers.add(first3 + "." + String.valueOf(j));
          }
        }
 else         if (lastOne.indexOf('-') != -1) {
          int start=Integer.parseInt(lastOne.substring(0,lastOne.indexOf('-')));
          int end=Integer.parseInt(lastOne.substring(lastOne.indexOf('-') + 1));
          for (int j=start; j <= end; j++) {
            join.joinMembers.lsMembers.add(first3 + "." + String.valueOf(j));
          }
        }
      }
    }
  }
}
