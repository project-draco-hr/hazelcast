{
  final String NO_NEAR_CAHED_MAP="testIssue833";
  final String NEAR_CACHED_MAP="testNearCache";
  final Config config=new Config();
  final NearCacheConfig nearCacheConfig=new NearCacheConfig();
  nearCacheConfig.setInMemoryFormat(MapConfig.InMemoryFormat.BINARY);
  config.getMapConfig(NEAR_CACHED_MAP).setNearCacheConfig(nearCacheConfig).setBackupCount(0);
  config.getMapConfig(NO_NEAR_CAHED_MAP).setBackupCount(0);
  final int n=2;
  final TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(n);
  final HazelcastInstance h[]=factory.newInstances(config);
  final IMap<String,String> noNearCached=h[0].getMap(NO_NEAR_CAHED_MAP);
  noNearCached.put("key","value");
  noNearCached.put("key1","value1");
  noNearCached.put("key2","value2");
  noNearCached.put("key3","value3");
  final IMap<String,String> nearCachedMap=h[0].getMap(NEAR_CACHED_MAP);
  nearCachedMap.put("key","value");
  nearCachedMap.put("key1","value1");
  nearCachedMap.put("key2","value2");
  nearCachedMap.put("key3","value3");
  for (int i=0; i < 100; i++) {
    nearCachedMap.get("key");
    nearCachedMap.get("key1");
    nearCachedMap.get("key2");
    nearCachedMap.get("key3");
  }
  Assert.assertTrue(nearCachedMap.getLocalMapStats().getHeapCost() > noNearCached.getLocalMapStats().getHeapCost());
  for (int i=0; i < n; i++) {
    h[i].getLifecycleService().shutdown();
  }
}
