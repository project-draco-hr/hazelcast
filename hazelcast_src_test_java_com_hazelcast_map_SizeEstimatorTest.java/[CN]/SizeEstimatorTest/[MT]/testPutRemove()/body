{
  final String MAP_NAME="default";
  final Config config=new Config();
  config.getMapConfig(MAP_NAME).setBackupCount(1).setInMemoryFormat(MapConfig.InMemoryFormat.BINARY);
  final TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  final HazelcastInstance h[]=factory.newInstances(config);
  final IMap<String,String> map=h[0].getMap(MAP_NAME);
  map.put("key","value");
  Thread.sleep(5000);
  System.err.println(h[0].getMap(MAP_NAME).getLocalMapStats().getHeapCost());
  System.err.println(h[1].getMap(MAP_NAME).getLocalMapStats().getHeapCost());
  System.err.println(h[0].getMap(MAP_NAME).getLocalMapStats().getBackupHeapCost());
  System.err.println(h[1].getMap(MAP_NAME).getLocalMapStats().getBackupHeapCost());
  Assert.assertTrue(h[0].getMap(MAP_NAME).getLocalMapStats().getHeapCost() == 0);
  Assert.assertTrue(h[0].getMap(MAP_NAME).getLocalMapStats().getBackupHeapCost() > 0);
  Assert.assertTrue(h[1].getMap(MAP_NAME).getLocalMapStats().getHeapCost() > 0);
  Assert.assertTrue(h[1].getMap(MAP_NAME).getLocalMapStats().getBackupHeapCost() > 0);
  Thread.sleep(1000);
  map.remove("key");
  Thread.sleep(1000);
  Assert.assertTrue(map.getLocalMapStats().getHeapCost() == 0);
  Assert.assertTrue(h[1].getMap(MAP_NAME).getLocalMapStats().getBackupHeapCost() == 0);
  h[0].getLifecycleService().shutdown();
  h[1].getLifecycleService().shutdown();
}
