{
  final String name=randomString();
  final Config config=getConfig();
  config.getMapConfig(name).setBackupCount(1);
  final HazelcastInstance h[]=factory.newInstances(config);
  warmUpPartitions(h);
  final IMap<String,String> map1=h[0].getMap(name);
  final IMap<String,String> map2=h[1].getMap(name);
  long map1Cost=map1.getLocalMapStats().getHeapCost();
  long map2Cost=map2.getLocalMapStats().getHeapCost();
  assertEquals("map1 initial heap cost must be zero..." + map1Cost,0,map1Cost);
  assertEquals("map2 initial heap cost must be zero..." + map2Cost,0,map2Cost);
  map1.put("key","value");
  long map1Size=map1.size();
  long map2Size=map2.size();
  assertEquals("map1 size must be one..." + map1Size,1,map1Size);
  assertEquals("map2 size must be one..." + map2Size,1,map2Size);
  map1Cost=map1.getLocalMapStats().getHeapCost();
  map2Cost=map2.getLocalMapStats().getHeapCost();
  assertTrue("map1 cost should be greater than zero....: " + map1Cost,map1Cost > 0);
  assertTrue("map2 cost should be greater than zero.... : " + map2Cost,map2Cost > 0);
  assertEquals(map1Cost,map2Cost);
  map1.remove("key");
  map1Size=map1.size();
  map2Size=map2.size();
  assertEquals("map1 size must be zero..." + map1Size,0,map1Size);
  assertEquals("map2 size must be zero..." + map2Size,0,map2Size);
  map1Cost=map1.getLocalMapStats().getHeapCost();
  map2Cost=map2.getLocalMapStats().getHeapCost();
  assertTrue("map1 cost should zero....: " + map1Cost,map1Cost == 0);
  assertTrue("map2 cost should zero....: " + map2Cost,map2Cost == 0);
}
