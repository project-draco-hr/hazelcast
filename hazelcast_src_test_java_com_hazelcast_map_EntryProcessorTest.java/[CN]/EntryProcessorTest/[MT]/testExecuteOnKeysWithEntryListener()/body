{
  HazelcastInstance instance=createHazelcastInstance(getConfig());
  IMap<String,String> map=instance.getMap("map");
  map.put("key","value");
  final CountDownLatch latch=new CountDownLatch(1);
  map.addEntryListener(new EntryUpdatedListener<String,String>(){
    @Override public void entryUpdated(    EntryEvent<String,String> event){
      String val=event.getValue();
      String oldValue=event.getOldValue();
      if ("newValue".equals(val) && "value".equals(oldValue)) {
        latch.countDown();
      }
    }
  }
,true);
  HashSet<String> keys=new HashSet<String>();
  keys.add("key");
  map.executeOnKeys(keys,new AbstractEntryProcessor<String,String>(){
    @Override public Object process(    Map.Entry<String,String> entry){
      entry.setValue("newValue");
      return 5;
    }
  }
);
  assertOpenEventually(latch,5);
}
