{
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);
  Config cfg=getConfig();
  cfg.getMapConfig("default").setInMemoryFormat(InMemoryFormat.OBJECT);
  HazelcastInstance instance1=nodeFactory.newHazelcastInstance(cfg);
  HazelcastInstance instance2=nodeFactory.newHazelcastInstance(cfg);
  try {
    IMap<Integer,Employee> map=instance1.getMap("testMapEntryProcessor");
    int size=10;
    for (int i=0; i < size; i++) {
      map.put(i,new Employee(i,"",0,false,0D,SampleObjects.State.STATE1));
    }
    EntryProcessor entryProcessor=new ChangeStateEntryProcessor();
    EntryObject entryObject=new PredicateBuilder().getEntryObject();
    Predicate predicate=entryObject.get("id").lessThan(5);
    Map<Integer,Object> res=map.executeOnEntries(entryProcessor,predicate);
    for (int i=0; i < 5; i++) {
      assertEquals(SampleObjects.State.STATE2,map.get(i).getState());
    }
    for (int i=5; i < size; i++) {
      assertEquals(SampleObjects.State.STATE1,map.get(i).getState());
    }
    for (int i=0; i < 5; i++) {
      assertEquals(((Employee)res.get(i)).getState(),SampleObjects.State.STATE2);
    }
  }
  finally {
    instance1.shutdown();
    instance2.shutdown();
  }
}
