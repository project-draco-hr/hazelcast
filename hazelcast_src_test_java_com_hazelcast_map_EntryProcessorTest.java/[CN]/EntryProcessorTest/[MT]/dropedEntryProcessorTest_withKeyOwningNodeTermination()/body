{
  String mapName=randomString();
  Config cfg=new Config();
  cfg.getMapConfig(mapName).setInMemoryFormat(InMemoryFormat.OBJECT);
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(101);
  HazelcastInstance instance1=factory.newHazelcastInstance(cfg);
  for (int go=0; go < 100; go++) {
    System.out.println("======================" + go + "==============================");
    HazelcastInstance instance2=factory.newHazelcastInstance(cfg);
    final int maxTasks=20;
    final Object key=generateKeyOwnedBy(instance2);
    final IMap<Object,List<Integer>> processorMap=instance1.getMap(mapName);
    processorMap.put(key,new ArrayList<Integer>());
    for (int i=0; i < maxTasks; i++) {
      processorMap.submitToKey(key,new SimpleEntryProcessor(i));
      if (i == maxTasks / 2) {
        instance2.getLifecycleService().terminate();
      }
    }
    assertTrueEventually(new AssertTask(){
      public void run() throws Exception {
        List<Integer> actualOrder=processorMap.get(key);
        System.out.println("list at assert = " + actualOrder + "size "+ actualOrder.size());
        assertEquals(actualOrder.size(),maxTasks);
      }
    }
);
  }
}
