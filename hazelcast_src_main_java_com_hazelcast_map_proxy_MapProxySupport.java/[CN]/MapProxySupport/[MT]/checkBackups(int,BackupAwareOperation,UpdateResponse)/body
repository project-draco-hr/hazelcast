{
  int backupCount=updateResponse.getBackupCount();
  if (backupCount > 0) {
    boolean backupsComplete=true;
    for (int i=0; i < backupCount; i++) {
      BlockingQueue backupResponses=mapService.getBackupCallQueue(operation.getBackupCallId());
      Object backupResponse=backupResponses.poll(3,TimeUnit.SECONDS);
      if (backupResponse == null) {
        backupsComplete=false;
      }
    }
    if (!backupsComplete) {
      final Future[] backupResponses=new Future[backupCount];
      for (int i=0; i < backupCount; i++) {
        GenericBackupOperation backupOp=new GenericBackupOperation(name,operation,updateResponse.getVersion());
        backupOp.setInvocation(true);
        Invocation backupInv=nodeService.createInvocationBuilder(MAP_SERVICE_NAME,backupOp,partitionId).setReplicaIndex(i).build();
        backupResponses[i]=backupInv.invoke();
      }
      for (      Future response : backupResponses) {
        response.get(5,TimeUnit.SECONDS);
      }
    }
  }
}
