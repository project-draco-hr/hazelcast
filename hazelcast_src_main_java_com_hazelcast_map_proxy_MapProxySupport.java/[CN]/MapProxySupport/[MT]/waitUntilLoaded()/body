{
  final NodeEngine nodeEngine=getNodeEngine();
  try {
    Map<Integer,Object> results=nodeEngine.getOperationService().invokeOnAllPartitions(SERVICE_NAME,new PartitionCheckIfLoadedOperationFactory(name));
    final Set<Integer> partitions=results.keySet();
    Iterator<Integer> iterator=partitions.iterator();
    boolean isFinished=false;
    final Set<Integer> retrySet=new HashSet<Integer>();
    while (!isFinished) {
      while (iterator.hasNext()) {
        final Integer partitionId=iterator.next();
        if ((Boolean)results.get(partitionId) == true) {
          iterator.remove();
        }
 else {
          retrySet.add(partitionId);
        }
      }
      if (retrySet.size() > 0) {
        results=retryPartitions(retrySet);
        iterator=results.keySet().iterator();
        Thread.sleep(1000);
        retrySet.clear();
      }
 else {
        isFinished=true;
      }
    }
  }
 catch (  Throwable t) {
    throw ExceptionUtil.rethrow(t);
  }
}
