{
  assertThat(valueOf(findNextPositivePowerOfTwo(Integer.MIN_VALUE)),is(valueOf(Integer.MIN_VALUE)));
  assertThat(valueOf(findNextPositivePowerOfTwo(Integer.MIN_VALUE + 1)),is(valueOf(1)));
  assertThat(valueOf(findNextPositivePowerOfTwo(-1)),is(valueOf(1)));
  assertThat(valueOf(findNextPositivePowerOfTwo(0)),is(valueOf(1)));
  assertThat(valueOf(findNextPositivePowerOfTwo(1)),is(valueOf(1)));
  assertThat(valueOf(findNextPositivePowerOfTwo(2)),is(valueOf(2)));
  assertThat(valueOf(findNextPositivePowerOfTwo(3)),is(valueOf(4)));
  assertThat(valueOf(findNextPositivePowerOfTwo(4)),is(valueOf(4)));
  assertThat(valueOf(findNextPositivePowerOfTwo(31)),is(valueOf(32)));
  assertThat(valueOf(findNextPositivePowerOfTwo(32)),is(valueOf(32)));
  assertThat(valueOf(findNextPositivePowerOfTwo(1 << 30)),is(valueOf(1 << 30)));
  assertThat(valueOf(findNextPositivePowerOfTwo((1 << 30) + 1)),is(valueOf(Integer.MIN_VALUE)));
}
