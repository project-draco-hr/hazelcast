{
  Visitor mockVisitor=mock(Visitor.class);
  Predicate[] predicates=new Predicate[3];
  Predicate p1=mock(Predicate.class);
  predicates[0]=p1;
  Predicate transformed=mock(Predicate.class);
  Predicate p2=createMockVisitablePredicate(transformed);
  predicates[1]=p2;
  Predicate p3=mock(Predicate.class);
  predicates[2]=p3;
  Predicate[] result=VisitorUtils.acceptVisitor(predicates,mockVisitor,mockIndexes);
  assertThat(result,not(sameInstance(predicates)));
  assertThat(result,arrayWithSize(3));
  assertThat(result,arrayContainingInAnyOrder(p1,transformed,p3));
}
