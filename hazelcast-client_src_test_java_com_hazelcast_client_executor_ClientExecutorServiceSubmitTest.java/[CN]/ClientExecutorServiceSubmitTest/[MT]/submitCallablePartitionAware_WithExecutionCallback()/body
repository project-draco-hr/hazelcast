{
  final IExecutorService service=client.getExecutorService(randomString());
  final String mapName=randomString();
  final IMap map=client.getMap(mapName);
  final String key=HazelcastTestSupport.generateKeyOwnedBy(instance2);
  final Member member=instance2.getCluster().getLocalMember();
  final Callable<String> runnable=new MapPutPartitionAwareCallable<String,String>(mapName,key);
  final AtomicReference<String> result=new AtomicReference<String>();
  final CountDownLatch responseLatch=new CountDownLatch(1);
  service.submit(runnable,new ExecutionCallback<String>(){
    public void onResponse(    String response){
      result.set(response);
      responseLatch.countDown();
    }
    public void onFailure(    Throwable t){
    }
  }
);
  assertOpenEventually("responseLatch",responseLatch);
  assertEquals(member.getUuid(),result.get());
  assertTrue(map.containsKey(member.getUuid()));
}
