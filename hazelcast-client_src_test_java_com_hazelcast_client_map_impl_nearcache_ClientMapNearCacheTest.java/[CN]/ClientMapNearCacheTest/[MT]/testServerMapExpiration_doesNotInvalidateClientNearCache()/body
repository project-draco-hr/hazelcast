{
  String mapName=randomMapName(NEAR_CACHE_WITH_LONG_MAX_IDLE_TIME);
  IMap<Integer,Integer> serverMap=server.getMap(mapName);
  IMap<Integer,Integer> clientMap=client.getMap(mapName);
  final CountDownLatch expiredEventLatch=new CountDownLatch(2);
  EntryExpiredListener listener=new EntryExpiredListener(){
    @Override public void entryExpired(    EntryEvent event){
      expiredEventLatch.countDown();
    }
  }
;
  serverMap.addEntryListener(listener,false);
  clientMap.addEntryListener(listener,false);
  final CountDownLatch eventAddedLatch=new CountDownLatch(1);
  addNearCacheInvalidateListener(clientMap,eventAddedLatch);
  serverMap.put(1,23,6,TimeUnit.SECONDS);
  assertNotNull(serverMap.get(1));
  assertOpenEventually(eventAddedLatch);
  assertThatOwnedEntryCountEquals(clientMap,0);
  assertNotNull(clientMap.get(1));
  assertThatOwnedEntryCountEquals(clientMap,1);
  assertOpenEventually(expiredEventLatch);
  assertNull(serverMap.get(1));
  assertNotNull(clientMap.get(1));
  assertThatOwnedEntryCountEquals(clientMap,1);
}
