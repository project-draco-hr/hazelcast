{
  if (!packetWritten) {
    if (socketBuffer.remaining() < 4) {
      return false;
    }
    int size=cipher.getOutputSize(packet.size());
    socketBuffer.putInt(size);
    if (packetBuffer.capacity() < packet.size()) {
      packetBuffer=ByteBuffer.allocate(packet.size());
    }
    if (!packet.writeTo(packetBuffer)) {
      throw new HazelcastException("Packet didn't fit into the buffer!");
    }
    packetBuffer.flip();
    packetWritten=true;
  }
  if (socketBuffer.hasRemaining()) {
    int outputSize=cipher.getOutputSize(packetBuffer.remaining());
    if (outputSize <= socketBuffer.remaining()) {
      cipher.update(packetBuffer,socketBuffer);
    }
 else {
      int min=Math.min(packetBuffer.remaining(),socketBuffer.remaining());
      int len=min / 2;
      if (len > 0) {
        int limitOld=packetBuffer.limit();
        packetBuffer.limit(packetBuffer.position() + len);
        cipher.update(packetBuffer,socketBuffer);
        packetBuffer.limit(limitOld);
      }
    }
    if (!packetBuffer.hasRemaining()) {
      if (socketBuffer.remaining() >= cipher.getOutputSize(0)) {
        socketBuffer.put(cipher.doFinal());
        packetWritten=false;
        packetBuffer.clear();
        return true;
      }
    }
  }
  return false;
}
