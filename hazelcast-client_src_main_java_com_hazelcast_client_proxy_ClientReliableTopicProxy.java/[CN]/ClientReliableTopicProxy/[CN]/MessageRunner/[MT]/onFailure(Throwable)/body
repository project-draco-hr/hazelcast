{
  if (cancelled) {
    return;
  }
  if (t instanceof ExecutionException && t.getCause() instanceof StaleSequenceException) {
    long remoteHeadSeq=ringbuffer.headSequence();
    if (listener.isLossTolerant()) {
      if (logger.isFinestEnabled()) {
        logger.finest("MessageListener " + listener + " on topic: "+ name+ " ran into a stale sequence. "+ "Jumping from oldSequence: "+ sequence+ " to sequence: "+ remoteHeadSeq);
      }
      sequence=remoteHeadSeq;
      next();
      return;
    }
    logger.warning("Terminating MessageListener:" + listener + " on topic: "+ name+ ". "+ "Reason: The listener was too slow or the retention period of the message has been violated. "+ "head: "+ remoteHeadSeq+ " sequence:"+ sequence);
  }
 else   if (t instanceof HazelcastInstanceNotActiveException) {
    if (logger.isFinestEnabled()) {
      logger.finest("Terminating MessageListener " + listener + " on topic: "+ name+ ". "+ " Reason: HazelcastInstance is shutting down");
    }
  }
 else   if (t instanceof DistributedObjectDestroyedException) {
    if (logger.isFinestEnabled()) {
      logger.finest("Terminating MessageListener " + listener + " on topic: "+ name+ ". "+ "Reason: Topic is destroyed");
    }
  }
 else {
    logger.warning("Terminating MessageListener " + listener + " on topic: "+ name+ ". "+ "Reason: Unhandled exception, message: "+ t.getMessage(),t);
  }
  cancel();
}
