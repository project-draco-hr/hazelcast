{
  try {
    if (inv.operation == OP_RESPONSE) {
      handleResponse(inv);
    }
 else     if (inv.operation == OP_HEARTBEAT) {
      inv.returnToContainer();
    }
 else     if (inv.operation == OP_REMOTELY_PROCESS_AND_RESPOND) {
      Data data=inv.doTake(inv.data);
      RemotelyProcessable rp=(RemotelyProcessable)ThreadContext.get().toObject(data);
      rp.setConnection(inv.conn);
      rp.process();
      sendResponse(inv);
    }
 else     if (inv.operation == OP_REMOTELY_PROCESS) {
      Data data=inv.doTake(inv.data);
      RemotelyProcessable rp=(RemotelyProcessable)ThreadContext.get().toObject(data);
      rp.setConnection(inv.conn);
      rp.process();
      inv.returnToContainer();
    }
 else     if (inv.operation == OP_REMOTELY_BOOLEAN_CALLABLE) {
      Boolean result=null;
      try {
        Data data=inv.doTake(inv.data);
        AbstractRemotelyCallable<Boolean> callable=(AbstractRemotelyCallable<Boolean>)ThreadContext.get().toObject(data);
        callable.setConnection(inv.conn);
        result=callable.call();
      }
 catch (      Exception e) {
        e.printStackTrace(System.out);
        result=Boolean.FALSE;
      }
      if (result == Boolean.TRUE) {
        sendResponse(inv);
      }
 else {
        sendResponseFailure(inv);
      }
    }
 else     if (inv.operation == OP_REMOTELY_OBJECT_CALLABLE) {
      Object result=null;
      try {
        Data data=inv.doTake(inv.data);
        AbstractRemotelyCallable callable=(AbstractRemotelyCallable)ThreadContext.get().toObject(data);
        callable.setConnection(inv.conn);
        result=callable.call();
      }
 catch (      Exception e) {
        e.printStackTrace(System.out);
        result=null;
      }
      if (result != null) {
        Data value=null;
        if (result instanceof Data) {
          value=(Data)result;
        }
 else {
          value=ThreadContext.get().toData(result);
        }
        inv.doSet(value,inv.data);
      }
      sendResponse(inv);
    }
 else     throw new RuntimeException("Unhandled message " + inv.name);
  }
 catch (  Exception e) {
    log(e);
    e.printStackTrace();
  }
}
