{
  MapService service=getService();
  InternalPartitionService partitionService=getNodeEngine().getPartitionService();
  MapServiceContext mapServiceContext=service.getMapServiceContext();
  int partitionStateVersion=partitionService.getPartitionStateVersion();
  Collection<Integer> initialPartitions=mapServiceContext.getOwnedPartitions();
  IndexService indexService=mapServiceContext.getMapContainer(name).getIndexService();
  Set<QueryableEntry> entries=null;
  if (!partitionService.hasOnGoingMigrationLocal()) {
    entries=indexService.query(predicate);
  }
  result=new QueryResult();
  if (entries != null) {
    addQueryEntriesToResult(entries);
  }
 else {
    if (pagingPredicate != null) {
      runParallelForPaging(initialPartitions);
    }
 else {
      runParallel(initialPartitions);
    }
  }
  Collection<Integer> finalPartitions=mapServiceContext.getOwnedPartitions();
  if (initialPartitions.equals(finalPartitions)) {
    result.setPartitionIds(finalPartitions);
  }
  if (mapContainer.getMapConfig().isStatisticsEnabled()) {
    LocalMapStatsImpl localMapStatsImpl=mapServiceContext.getLocalMapStatsProvider().getLocalMapStatsImpl(name);
    localMapStatsImpl.incrementOtherOperations();
  }
  checkPartitionStateChanges(partitionService,partitionStateVersion);
}
