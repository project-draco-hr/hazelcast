{
  Config config=new Config();
  config.addListenerConfig(new ListenerConfig(new CountdownMembershipListener()));
  final InstanceListener instanceListener=new CountdownInstanceListener();
  config.addListenerConfig(new ListenerConfig(instanceListener));
  final String configName="testConfigListenerInitialization-";
  MapConfig mapConfig=config.getMapConfig(configName + "*");
  mapConfig.addEntryListenerConfig(new EntryListenerConfig(new CountdownEntryListener(),false,true));
  QueueConfig queueConfig=config.getQueueConfig(configName + "*");
  queueConfig.addItemListenerConfig(new ItemListenerConfig(new CountdownItemListener(),true));
  TopicConfig topicConfig=config.getTopicConfig(configName + "*");
  topicConfig.addMessageListenerConfig(new ListenerConfig(new CountdownMessageListener()));
  MultiMapConfig multiMapConfig=config.getMultiMapConfig(configName + "*");
  multiMapConfig.addEntryListenerConfig(new EntryListenerConfig(new CountdownMultimapEntryListener(),false,false));
  HazelcastInstance hz=null;
  for (int i=0; i < CountdownMembershipListener.MEMBERS; i++) {
    hz=Hazelcast.newHazelcastInstance(config);
  }
  assertTrue(CountdownMembershipListener.LATCH.await(5,TimeUnit.SECONDS));
  for (int i=0; i < CountdownInstanceListener.INSTANCES; i++) {
    Map map=hz.getMap(configName + i);
    for (int j=0; j < CountdownEntryListener.ENTRIES; j++) {
      map.put(j,j);
    }
    MultiMap mm=hz.getMultiMap(configName + i);
    for (int j=0; j < CountdownMultimapEntryListener.ENTRIES; j++) {
      mm.put(j,j);
    }
    Queue q=hz.getQueue(configName + i);
    for (int j=0; j < CountdownItemListener.ENTRIES; j++) {
      q.offer(j);
    }
    ITopic t=hz.getTopic(configName + i);
    for (int j=0; j < CountdownMessageListener.MESSAGES; j++) {
      t.publish(j);
    }
  }
  assertTrue(CountdownInstanceListener.LATCH.await(5,TimeUnit.SECONDS));
  assertTrue("Remaining: " + CountdownEntryListener.LATCH.getCount(),CountdownEntryListener.LATCH.await(5,TimeUnit.SECONDS));
  assertTrue("Remaining: " + CountdownMultimapEntryListener.LATCH.getCount(),CountdownMultimapEntryListener.LATCH.await(5,TimeUnit.SECONDS));
  assertTrue("Remaining: " + CountdownItemListener.LATCH.getCount(),CountdownItemListener.LATCH.await(5,TimeUnit.SECONDS));
  assertTrue("Remaining: " + CountdownMessageListener.LATCH.getCount(),CountdownMessageListener.LATCH.await(5,TimeUnit.SECONDS));
}
