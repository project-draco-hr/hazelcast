{
  if (nodes.size() == 1) {
    PartitionTable table=nodeTables.iterator().next();
    while (!partitionQ.isEmpty()) {
      table.add(index,partitionQ.poll());
    }
  }
 else {
    List<PartitionTable> underLoadedStates=new LinkedList<PartitionTable>();
    int avgCount=slimDownNodesToAvgPartitionTableSize(index,underLoadedStates);
    if (!partitionQ.isEmpty()) {
      for (      PartitionTable table : underLoadedStates) {
        while (table.size(index) < avgCount) {
          table.add(index,partitionQ.poll());
        }
      }
    }
    while (!partitionQ.isEmpty()) {
      for (      PartitionTable table : nodeTables) {
        table.add(index,partitionQ.poll());
        if (partitionQ.isEmpty()) {
          break;
        }
      }
    }
  }
}
