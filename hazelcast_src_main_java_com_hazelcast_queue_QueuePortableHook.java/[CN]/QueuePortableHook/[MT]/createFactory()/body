{
  ConstructorFunction<Integer,Portable> constructors[]=new ConstructorFunction[13];
  constructors[OFFER]=new ConstructorFunction<Integer,Portable>(){
    @Override public Portable createNew(    Integer arg){
      return new OfferRequest();
    }
  }
;
  constructors[SIZE]=new ConstructorFunction<Integer,Portable>(){
    @Override public Portable createNew(    Integer arg){
      return new SizeRequest();
    }
  }
;
  constructors[REMOVE]=new ConstructorFunction<Integer,Portable>(){
    @Override public Portable createNew(    Integer arg){
      return new RemoveRequest();
    }
  }
;
  constructors[POLL]=new ConstructorFunction<Integer,Portable>(){
    @Override public Portable createNew(    Integer arg){
      return new PollRequest();
    }
  }
;
  constructors[PEEK]=new ConstructorFunction<Integer,Portable>(){
    @Override public Portable createNew(    Integer arg){
      return new PeekRequest();
    }
  }
;
  constructors[ITERATOR]=new ConstructorFunction<Integer,Portable>(){
    @Override public Portable createNew(    Integer arg){
      return new IteratorRequest();
    }
  }
;
  constructors[DRAIN]=new ConstructorFunction<Integer,Portable>(){
    @Override public Portable createNew(    Integer arg){
      return new DrainRequest();
    }
  }
;
  constructors[CONTAINS]=new ConstructorFunction<Integer,Portable>(){
    @Override public Portable createNew(    Integer arg){
      return new ContainsRequest();
    }
  }
;
  constructors[COMPARE_AND_REMOVE]=new ConstructorFunction<Integer,Portable>(){
    @Override public Portable createNew(    Integer arg){
      return new CompareAndRemoveRequest();
    }
  }
;
  constructors[CLEAR]=new ConstructorFunction<Integer,Portable>(){
    @Override public Portable createNew(    Integer arg){
      return new ClearRequest();
    }
  }
;
  constructors[ADD_ALL]=new ConstructorFunction<Integer,Portable>(){
    @Override public Portable createNew(    Integer arg){
      return new AddAllRequest();
    }
  }
;
  constructors[ADD_LISTENER]=new ConstructorFunction<Integer,Portable>(){
    @Override public Portable createNew(    Integer arg){
      return new AddListenerRequest();
    }
  }
;
  return new ArrayPortableFactory(constructors);
}
