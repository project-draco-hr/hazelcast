{
  final String cacheName="simpleCache";
  final CacheManager cacheManager=cachingProvider.getCacheManager();
  CacheConfig<Integer,String> config=new CacheConfig<Integer,String>();
  SimpleEntryListener<Integer,String> listener=new SimpleEntryListener<Integer,String>();
  final MutableCacheEntryListenerConfiguration<Integer,String> listenerConfiguration=new MutableCacheEntryListenerConfiguration<Integer,String>(FactoryBuilder.factoryOf(listener),null,true,true);
  config.addCacheEntryListenerConfiguration(listenerConfiguration);
  Cache<Integer,String> cache=cacheManager.createCache(cacheName,config);
  assertNotNull(cache);
  Integer key1=1;
  String value1="value1";
  cache.put(key1,value1);
  assertEquals(1,listener.created.get());
  Integer key2=2;
  String value2="value2";
  cache.put(key2,value2);
  assertEquals(2,listener.created.get());
  Set<Integer> keys=new HashSet<Integer>();
  keys.add(key1);
  keys.add(key2);
  cache.removeAll(keys);
  assertEquals(2,listener.removed.get());
}
