{
  final CacheManager cacheManager=Caching.getCachingProvider().getCacheManager();
  CacheConfig<Integer,String> config=new CacheConfig<Integer,String>();
  config.setName("SimpleCache");
  ICache<Integer,String> cache=(ICache<Integer,String>)cacheManager.createCache("simpleCache",config);
  int testSize=1007;
  for (int i=0; i < testSize; i++) {
    Integer key=i;
    String value1="value" + i;
    cache.put(key,value1);
  }
  assertEquals(testSize,cache.size());
  final Iterator<Cache.Entry<Integer,String>> iterator=cache.iterator();
  assertNotNull(iterator);
  HashMap<Integer,String> resultMap=new HashMap<Integer,String>();
  int c=0;
  while (iterator.hasNext()) {
    final Cache.Entry<Integer,String> next=iterator.next();
    final Integer key=next.getKey();
    final String value=next.getValue();
    resultMap.put(key,value);
    c++;
  }
  assertEquals(testSize,c);
}
