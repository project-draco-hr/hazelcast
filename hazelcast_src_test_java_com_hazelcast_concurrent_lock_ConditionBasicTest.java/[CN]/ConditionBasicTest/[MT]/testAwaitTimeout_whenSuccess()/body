{
  final ILock lock=callerInstance.getLock(newName());
  final ICondition condition=lock.newCondition(newName());
  final CountDownLatch locked=new CountDownLatch(1);
  final AtomicBoolean signalledCorrectly=new AtomicBoolean(false);
  new Thread(new Runnable(){
    @Override public void run(){
      lock.lock();
      locked.countDown();
      try {
        if (condition.await(10,TimeUnit.SECONDS)) {
          signalledCorrectly.set(true);
        }
      }
 catch (      InterruptedException e) {
        ignore(e);
      }
    }
  }
).start();
  locked.await();
  signal(lock,condition);
  assertAtomicEventually("awaiting thread should have been signalled",true,signalledCorrectly,THIRTY_SECONDS);
}
