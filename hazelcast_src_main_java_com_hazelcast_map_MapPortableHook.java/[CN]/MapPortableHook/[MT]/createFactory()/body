{
  return new PortableFactory(){
    final ConstructorFunction<Integer,Portable> constructors[]=new ConstructorFunction[39];
{
      constructors[GET - 1]=new ConstructorFunction<Integer,Portable>(){
        public Portable createNew(        Integer arg){
          return new MapGetRequest();
        }
      }
;
      constructors[PUT - 1]=new ConstructorFunction<Integer,Portable>(){
        public Portable createNew(        Integer arg){
          return new MapPutRequest();
        }
      }
;
      constructors[PUT_IF_ABSENT - 1]=new ConstructorFunction<Integer,Portable>(){
        public Portable createNew(        Integer arg){
          return new MapPutIfAbsentRequest();
        }
      }
;
      constructors[TRY_PUT - 1]=new ConstructorFunction<Integer,Portable>(){
        public Portable createNew(        Integer arg){
          return new MapTryPutRequest();
        }
      }
;
      constructors[PUT_TRANSIENT - 1]=new ConstructorFunction<Integer,Portable>(){
        public Portable createNew(        Integer arg){
          return new MapPutTransientRequest();
        }
      }
;
    }
    public Portable create(    int classId){
switch (classId) {
case GET:
        return new MapGetRequest();
case PUT:
      return new MapPutRequest();
case PUT_IF_ABSENT:
    return new MapPutIfAbsentRequest();
case TRY_PUT:
  return new MapTryPutRequest();
case PUT_TRANSIENT:
return new MapPutTransientRequest();
case SET:
return new MapSetRequest();
case CONTAINS_KEY:
return new MapContainsKeyRequest();
case CONTAINS_VALUE:
return new MapContainsValueRequest();
case REMOVE:
return new MapRemoveRequest();
case REMOVE_IF_SAME:
return new MapRemoveIfSameRequest();
case DELETE:
return new MapDeleteRequest();
case FLUSH:
return new MapFlushRequest();
case GET_ALL:
return new MapGetAllRequest();
case TRY_REMOVE:
return new MapTryRemoveRequest();
case REPLACE:
return new MapReplaceRequest();
case REPLACE_IF_SAME:
return new MapReplaceIfSameRequest();
case LOCK:
return new MapLockRequest();
case IS_LOCKED:
return new MapIsLockedRequest();
case TRY_LOCK:
return new MapTryLockRequest();
case UNLOCK:
return new MapUnlockRequest();
case ADD_LOCAL_ENTRY_LISTENER:
return new MapAddLocalEntryListenerRequest();
case ADD_INTERCEPTOR:
return new MapAddInterceptorRequest();
case REMOVE_INTERCEPTOR:
return new MapRemoveInterceptorRequest();
case ADD_ENTRY_LISTENER:
return new MapAddEntryListenerRequest();
case REMOVE_ENTRY_LISTENER:
return new MapRemoveEntryListenerRequest();
case GET_ENTRY_VIEW:
return new MapGetEntryViewRequest();
case EVICT:
return new MapEvictRequest();
case KEYSET:
return new MapKeysetRequest();
case VALUES:
return new MapValuesRequest();
case ENTRY_SET:
return new MapEntrySetRequest();
case KEYSET_QUERY:
return new MapKeysetQueryRequest();
case ENTRY_SET_QUERY:
return new MapEntrySetQueryRequest();
case VALUES_QUERY:
return new MapValuesQueryRequest();
case LOCAL_KEYSET:
return new MapLocalKeysetRequest();
case LOCAL_KEYSET_QUERY:
return new MapLocalKeysetQueryRequest();
case ADD_INDEX:
return new MapAddIndexRequest();
case GET_LOCAL_MAP_STATS:
return new MapGetLocalMapStatsRequest();
case EXECUTE_ON_KEY:
return new MapExecuteOnKeyRequest();
case EXECUTE_ON_ALL_KEYS:
return new MapExecuteOnAllKeysRequest();
}
return null;
}
}
;
}
