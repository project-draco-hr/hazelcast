{
  assertTrue(memberCount > 0);
  Config config=new Config();
  config.setProperty(GroupProperties.PROP_OPERATION_CALL_TIMEOUT_MILLIS,"3000");
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(memberCount);
  HazelcastInstance[] instances=factory.newInstances(config);
  warmUpPartitions(instances);
  final HazelcastInstance hz=instances[memberCount - 1];
  Node node=TestUtil.getNode(hz);
  NodeEngine nodeEngine=node.nodeEngine;
  OperationService operationService=nodeEngine.getOperationService();
  int partitionId=(int)(Math.random() * node.getPartitionService().getPartitionCount());
  InternalCompletableFuture<Object> future=operationService.invokeOnPartition(null,new TimedOutBackupAwareOperation(),partitionId);
  try {
    future.getSafely();
    fail("Should throw OperationTimeoutException!");
  }
 catch (  OperationTimeoutException ignored) {
  }
  for (  HazelcastInstance instance : instances) {
    assertNoLitterInOpService(instance);
  }
}
