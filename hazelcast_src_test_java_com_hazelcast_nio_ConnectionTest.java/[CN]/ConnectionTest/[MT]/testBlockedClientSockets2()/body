{
  final ServerSocket serverSocket=new ServerSocket(13131);
  final int count=100;
  final CountDownLatch latch=new CountDownLatch(count);
  final AtomicInteger connected=new AtomicInteger();
  final AtomicInteger cc=new AtomicInteger();
  final AtomicBoolean flag=new AtomicBoolean(false);
  for (int i=0; i < count; i++) {
    final Socket clientSocket=new Socket();
    Thread t=new Thread("client-socket-" + i){
      public void run(){
        try {
          if (cc.incrementAndGet() > count / 5 && Math.random() > .87f && flag.compareAndSet(false,true)) {
            serverSocket.close();
          }
 else {
            clientSocket.setSoTimeout(1000 * 5);
            clientSocket.connect(new InetSocketAddress(13131));
            connected.incrementAndGet();
            InputStream in=clientSocket.getInputStream();
            in.read();
          }
        }
 catch (        IOException ignored) {
        }
 finally {
          latch.countDown();
        }
      }
    }
;
    t.setDaemon(true);
    t.start();
  }
  try {
    Assert.assertTrue(latch.await(1,TimeUnit.MINUTES));
  }
 catch (  AssertionError e) {
    System.err.println(ThreadDumpGenerator.newInstance().dumpAllThreads());
    throw e;
  }
}
