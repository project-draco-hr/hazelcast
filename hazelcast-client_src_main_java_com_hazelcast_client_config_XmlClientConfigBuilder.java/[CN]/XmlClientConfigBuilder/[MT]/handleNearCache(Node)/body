{
  final String name=getAttribute(node,"name");
  final NearCacheConfig nearCacheConfig=new NearCacheConfig();
  for (  Node child : new IterableNodeList(node.getChildNodes())) {
    final String nodeName=cleanNodeName(child);
    String value=getTextContent(child).trim();
    if ("max-size".equals(nodeName)) {
      nearCacheConfig.setMaxSize(Integer.parseInt(value));
    }
 else     if ("time-to-live-seconds".equals(nodeName)) {
      nearCacheConfig.setTimeToLiveSeconds(Integer.parseInt(value));
    }
 else     if ("max-idle-seconds".equals(nodeName)) {
      nearCacheConfig.setMaxIdleSeconds(Integer.parseInt(value));
    }
 else     if ("eviction-policy".equals(nodeName)) {
      nearCacheConfig.setEvictionPolicy(value);
    }
 else     if ("in-memory-format".equals(nodeName)) {
      nearCacheConfig.setInMemoryFormat(InMemoryFormat.valueOf(upperCaseInternal(value)));
    }
 else     if ("invalidate-on-change".equals(nodeName)) {
      nearCacheConfig.setInvalidateOnChange(Boolean.parseBoolean(value));
    }
 else     if ("cache-local-entries".equals(nodeName)) {
      nearCacheConfig.setCacheLocalEntries(Boolean.parseBoolean(value));
    }
 else     if ("local-update-policy".equals(nodeName)) {
      NearCacheConfig.LocalUpdatePolicy policy=NearCacheConfig.LocalUpdatePolicy.valueOf(value);
      nearCacheConfig.setLocalUpdatePolicy(policy);
    }
 else     if ("eviction".equals(nodeName)) {
      nearCacheConfig.setEvictionConfig(getEvictionConfig(child));
    }
  }
  clientConfig.addNearCacheConfig(name,nearCacheConfig);
}
