{
  type=in.readInt();
  final int classId=in.readInt();
  if (classId != NO_CLASS_ID) {
    final int factoryId=in.readInt();
    final int version=in.readInt();
    SerializationContext context=((SerializationContextAware)in).getSerializationContext();
    classDefinition=context.lookup(factoryId,classId,version);
    int classDefSize=in.readInt();
    if (classDefinition != null) {
      final int skipped=in.skipBytes(classDefSize);
      if (skipped != classDefSize) {
        throw new HazelcastSerializationException("Not able to skip " + classDefSize + " bytes");
      }
    }
 else {
      byte[] classDefBytes=new byte[classDefSize];
      in.readFully(classDefBytes);
      classDefinition=context.createClassDefinition(factoryId,classDefBytes);
    }
  }
  int size=in.readInt();
  if (size > 0) {
    buffer=new byte[size];
    in.readFully(buffer);
  }
  partitionHash=in.readInt();
}
