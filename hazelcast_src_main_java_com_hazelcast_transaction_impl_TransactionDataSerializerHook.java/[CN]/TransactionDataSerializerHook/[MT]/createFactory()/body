{
  return new DataSerializableFactory(){
    @Override public IdentifiedDataSerializable create(    int typeId){
switch (typeId) {
case CREATE_TX_BACKUP_LOG:
        return new CreateTxBackupLogOperation();
case BROADCAST_TX_ROLLBACK:
      return new BroadcastTxRollbackOperation();
case PURGE_TX_BACKUP_LOG:
    return new PurgeTxBackupLogOperation();
case REPLICATE_TX_BACKUP_LOG:
  return new ReplicateTxBackupLogOperation();
case ROLLBACK_TX_BACKUP_LOG:
return new RollbackTxBackupLogOperation();
case CREATE_ALLOWED_DURING_PASSIVE_STATE_TX_BACKUP_LOG:
return new CreateAllowedDuringPassiveStateTxBackupLogOperation();
case PURGE_ALLOWED_DURING_PASSIVE_STATE_TX_BACKUP_LOG:
return new PurgeAllowedDuringPassiveStateTxBackupLogOperation();
case REPLICATE_ALLOWED_DURING_PASSIVE_STATE_TX_BACKUP_LOG:
return new ReplicateAllowedDuringPassiveStateTxBackupLogOperation();
case ROLLBACK_ALLOWED_DURING_PASSIVE_STATE_TX_BACKUP_LOG:
return new RollbackAllowedDuringPassiveStateTxBackupLogOperation();
case COLLECT_REMOTE_TX_FACTORY:
return new CollectRemoteTransactionsOperationFactory();
case CLEAR_REMOTE_TX_BACKUP:
return new ClearRemoteTransactionBackupOperation();
case CLEAR_REMOTE_TX:
return new ClearRemoteTransactionOperation();
case COLLECT_REMOTE_TX:
return new CollectRemoteTransactionsOperation();
case FINALIZE_REMOTE_TX_BACKUP:
return new FinalizeRemoteTransactionBackupOperation();
case FINALIZE_REMOTE_TX:
return new FinalizeRemoteTransactionOperation();
case PUT_REMOTE_TX_BACKUP:
return new PutRemoteTransactionBackupOperation();
case PUT_REMOTE_TX:
return new PutRemoteTransactionOperation();
case XA_REPLICATION:
return new XaReplicationOperation();
default :
return null;
}
}
}
;
}
