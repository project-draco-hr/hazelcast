{
  if (transaction.getState() != Transaction.State.ACTIVE) {
    throw new TransactionNotActiveException("No transaction is found while accessing " + "transactional object -> " + serviceName + "["+ id+ "]!");
  }
  TransactionalObjectKey key=new TransactionalObjectKey(serviceName,id);
  TransactionalObject obj=txnObjectMap.get(key);
  if (obj == null) {
    final Object service=nodeEngine.getService(serviceName);
    if (service instanceof TransactionalService) {
      nodeEngine.getProxyService().initializeDistributedObject(serviceName,id);
      obj=((TransactionalService)service).createTransactionalObject(id,transaction);
      txnObjectMap.put(key,obj);
    }
 else {
      if (service == null) {
        if (!nodeEngine.isActive()) {
          throw new HazelcastInstanceNotActiveException();
        }
        throw new IllegalArgumentException("Unknown Service[" + serviceName + "]!");
      }
      throw new IllegalArgumentException("Service[" + serviceName + "] is not transactional!");
    }
  }
  return obj;
}
