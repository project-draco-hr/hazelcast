{
  MapService mapService=getService();
  if (data != null) {
    for (    Entry<String,Set<RecordReplicationInfo>> dataEntry : data.entrySet()) {
      Set<RecordReplicationInfo> recordReplicationInfos=dataEntry.getValue();
      final String mapName=dataEntry.getKey();
      RecordStore recordStore=mapService.getRecordStore(getPartitionId(),mapName);
      for (      RecordReplicationInfo recordReplicationInfo : recordReplicationInfos) {
        Record inputRecord=recordReplicationInfo.getRecord();
        Data key=inputRecord.getKey();
        Record record=mapService.createRecord(mapName,key,inputRecord.getValue(),-1,false);
        record.setStatistics(inputRecord.getStatistics());
        recordStore.getRecords().put(key,record);
        if (recordReplicationInfo.getIdleDelayMillis() >= 0) {
          mapService.scheduleIdleEviction(mapName,key,recordReplicationInfo.getIdleDelayMillis());
        }
        if (recordReplicationInfo.getTtlDelayMillis() >= 0) {
          mapService.scheduleTtlEviction(mapName,record,recordReplicationInfo.getTtlDelayMillis());
        }
        if (recordReplicationInfo.getMapStoreWriteDelayMillis() >= 0) {
          mapService.scheduleMapStoreWrite(mapName,key,record.getValue(),recordReplicationInfo.getMapStoreWriteDelayMillis());
        }
        if (recordReplicationInfo.getMapStoreDeleteDelayMillis() >= 0) {
          mapService.scheduleMapStoreDelete(mapName,key,recordReplicationInfo.getMapStoreDeleteDelayMillis());
        }
      }
    }
  }
  if (mapInitialLoadInfo != null) {
    for (    String mapName : mapInitialLoadInfo.keySet()) {
      RecordStore recordStore=mapService.getRecordStore(getPartitionId(),mapName);
      recordStore.setLoaded(mapInitialLoadInfo.get(mapName));
    }
  }
}
