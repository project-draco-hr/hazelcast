{
  this.setPartitionId(partitionId).setReplicaIndex(replicaIndex);
  data=new HashMap<String,Set<RecordReplicationInfo>>(container.getMaps().size());
  mapInitialLoadInfo=new HashMap<String,Boolean>(container.getMaps().size());
  for (  Entry<String,RecordStore> entry : container.getMaps().entrySet()) {
    RecordStore recordStore=entry.getValue();
    MapContainer mapContainer=recordStore.getMapContainer();
    final MapConfig mapConfig=mapContainer.getMapConfig();
    if (mapConfig.getTotalBackupCount() < replicaIndex) {
      continue;
    }
    String name=entry.getKey();
    if (mapContainer.getStore() != null) {
      mapInitialLoadInfo.put(name,replicaIndex > 0 || recordStore.isLoaded());
    }
    Set<RecordReplicationInfo> recordSet=new HashSet<RecordReplicationInfo>();
    for (    Entry<Data,Record> recordEntry : recordStore.getReadonlyRecordMap().entrySet()) {
      Record record=recordEntry.getValue();
      RecordReplicationInfo recordReplicationInfo;
      recordReplicationInfo=createRecordReplicationInfo(record);
      recordSet.add(recordReplicationInfo);
    }
    data.put(name,recordSet);
  }
  readDelayedEntries(container);
}
