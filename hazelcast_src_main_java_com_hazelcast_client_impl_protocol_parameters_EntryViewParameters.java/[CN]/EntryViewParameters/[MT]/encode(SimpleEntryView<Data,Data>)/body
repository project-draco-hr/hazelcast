{
  final int requiredDataSize=calculateDataSize(dataEntryView);
  ClientMessage clientMessage=ClientMessage.createForEncode(requiredDataSize);
  clientMessage.setMessageType(TYPE.id());
  boolean isNull;
  if (dataEntryView == null) {
    isNull=true;
    clientMessage.set(isNull);
    clientMessage.updateFrameLength();
    return clientMessage;
  }
  isNull=false;
  Data key=dataEntryView.getKey();
  Data value=dataEntryView.getValue();
  long cost=dataEntryView.getCost();
  long creationTime=dataEntryView.getCreationTime();
  long expirationTime=dataEntryView.getExpirationTime();
  long hits=dataEntryView.getHits();
  long lastAccessTime=dataEntryView.getLastAccessTime();
  long lastStoredTime=dataEntryView.getLastStoredTime();
  long lastUpdateTime=dataEntryView.getLastUpdateTime();
  long version=dataEntryView.getVersion();
  long ttl=dataEntryView.getTtl();
  long evictionCriteriaNumber=dataEntryView.getEvictionCriteriaNumber();
  clientMessage.set(isNull).set(key).set(value).set(cost).set(creationTime).set(expirationTime).set(hits).set(lastAccessTime).set(lastStoredTime).set(lastUpdateTime).set(version).set(evictionCriteriaNumber).set(ttl);
  clientMessage.updateFrameLength();
  return clientMessage;
}
