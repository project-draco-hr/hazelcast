{
  flushCounters=new HashMap<String,Integer>(container.getMaps().size());
  delayedEntries=new HashMap<String,Collection<DelayedEntry>>(container.getMaps().size());
  for (  Entry<String,RecordStore> entry : container.getMaps().entrySet()) {
    RecordStore recordStore=entry.getValue();
    MapContainer mapContainer=recordStore.getMapContainer();
    if (!mapContainer.getMapStoreContext().isWriteBehindMapStoreEnabled()) {
      continue;
    }
    WriteBehindStore mapDataStore=(WriteBehindStore)recordStore.getMapDataStore();
    WriteBehindQueue<DelayedEntry> writeBehindQueue=mapDataStore.getWriteBehindQueue();
    Collection<DelayedEntry> entries=writeBehindQueue.asList();
    if (entries != null && entries.size() == 0) {
      continue;
    }
    String mapName=entry.getKey();
    delayedEntries.put(mapName,entries);
    flushCounters.put(mapName,mapDataStore.getNumberOfEntriesToFlush());
  }
}
