{
  final InetSocketAddress isa=address.getInetSocketAddress();
  SocketFactory socketFactory=options.getSocketFactory();
  if (socketFactory == null) {
    socketFactory=new DefaultSocketFactory();
  }
  final Socket socket=socketFactory.createSocket();
  try {
    socket.setKeepAlive(options.isKeepAlive());
    socket.setTcpNoDelay(options.isTcpNoDelay());
    socket.setReuseAddress(options.isReuseAddress());
    if (options.getLingerSeconds() > 0) {
      socket.setSoLinger(true,options.getLingerSeconds());
    }
    if (options.getTimeout() > 0 && !ownerConnection) {
      socket.setSoTimeout(options.getTimeout());
    }
    int bufferSize=options.getBufferSize() * 1024;
    if (bufferSize < 0) {
      bufferSize=BUFFER_SIZE;
    }
    socket.setSendBufferSize(bufferSize);
    socket.setReceiveBufferSize(bufferSize);
    socket.connect(isa,3000);
    this.socket=socket;
    out=serializationService.createObjectDataOutputStream(new BufferedOutputStream(socket.getOutputStream(),bufferSize));
    in=serializationService.createObjectDataInputStream(new BufferedInputStream(socket.getInputStream(),bufferSize));
  }
 catch (  IOException e) {
    socket.close();
    throw e;
  }
}
