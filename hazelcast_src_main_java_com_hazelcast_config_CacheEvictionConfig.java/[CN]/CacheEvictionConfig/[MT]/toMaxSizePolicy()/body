{
switch (this) {
case ENTRY_COUNT:
    return MaxSizePolicy.ENTRY_COUNT;
case USED_NATIVE_MEMORY_SIZE:
  return MaxSizePolicy.USED_NATIVE_MEMORY_SIZE;
case USED_NATIVE_MEMORY_PERCENTAGE:
return MaxSizePolicy.USED_NATIVE_MEMORY_PERCENTAGE;
case FREE_NATIVE_MEMORY_SIZE:
return MaxSizePolicy.FREE_NATIVE_MEMORY_SIZE;
case FREE_NATIVE_MEMORY_PERCENTAGE:
return MaxSizePolicy.FREE_NATIVE_MEMORY_PERCENTAGE;
default :
throw new IllegalArgumentException("Invalid Cache Max-Size policy for converting to MaxSizePolicy");
}
}
