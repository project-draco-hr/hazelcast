{
  try {
    textCommandService.lock(mapName,key);
  }
 catch (  Exception e) {
    setCommand.setResponse(TextCommandConstants.NOT_STORED);
    if (setCommand.shouldReply()) {
      textCommandService.sendResponse(setCommand);
    }
    return;
  }
  Object oldValue=textCommandService.get(mapName,key);
  MemcacheEntry entry=null;
  if (oldValue != null) {
    if (oldValue instanceof MemcacheEntry) {
      final MemcacheEntry oldEntry=(MemcacheEntry)oldValue;
      entry=new MemcacheEntry(setCommand.getKey(),concatenate(setCommand.getValue(),oldEntry.getValue()),oldEntry.getFlag());
    }
 else     if (oldValue instanceof byte[]) {
      entry=new MemcacheEntry(setCommand.getKey(),concatenate(setCommand.getValue(),((byte[])oldValue)),0);
    }
 else     if (oldValue instanceof String) {
      entry=new MemcacheEntry(setCommand.getKey(),concatenate(setCommand.getValue(),stringToBytes((String)oldValue)),0);
    }
 else {
      try {
        entry=new MemcacheEntry(setCommand.getKey(),concatenate(setCommand.getValue(),textCommandService.toByteArray(oldValue)),0);
      }
 catch (      Exception e) {
        logger.warning(e);
      }
    }
    textCommandService.put(mapName,key,entry,ttl);
    setCommand.setResponse(TextCommandConstants.STORED);
  }
 else {
    setCommand.setResponse(TextCommandConstants.NOT_STORED);
  }
  textCommandService.unlock(mapName,key);
}
