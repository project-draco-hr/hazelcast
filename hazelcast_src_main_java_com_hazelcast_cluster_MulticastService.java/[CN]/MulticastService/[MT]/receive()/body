{
  try {
    try {
      multicastSocket.receive(datagramPacketReceive);
    }
 catch (    IOException ignore) {
      return null;
    }
    try {
      final byte[] data=datagramPacketReceive.getData();
      final int offset=datagramPacketReceive.getOffset();
      final int length=datagramPacketReceive.getLength();
      final BufferObjectDataInput input=node.getSerializationService().createObjectDataInput(data);
      input.position(offset);
      final byte packetVersion=input.readByte();
      if (packetVersion != Packet.PACKET_VERSION) {
        logger.log(Level.WARNING,"Received a JoinRequest with different packet version: " + packetVersion);
        return null;
      }
      try {
        return input.readObject();
      }
  finally {
        input.close();
      }
    }
 catch (    Exception e) {
      if (e instanceof EOFException) {
        logger.log(Level.WARNING,"Received data format is invalid." + " (An old version of Hazelcast may be running here.)",e);
      }
 else {
        throw e;
      }
    }
  }
 catch (  Exception e) {
    logger.log(Level.WARNING,e.getMessage(),e);
  }
  return null;
}
