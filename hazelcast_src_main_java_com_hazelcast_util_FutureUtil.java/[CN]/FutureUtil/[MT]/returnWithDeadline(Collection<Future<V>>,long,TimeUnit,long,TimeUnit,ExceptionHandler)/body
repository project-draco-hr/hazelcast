{
  long overallTimeoutNanos=calculateTimeout(overallTimeout,overallTimeUnit);
  long perFutureTimeoutNanos=calculateTimeout(perFutureTimeout,perFutureTimeUnit);
  long deadline=System.nanoTime() + overallTimeoutNanos;
  List<V> results=new ArrayList<V>(futures.size());
  for (  Future<V> future : futures) {
    try {
      long timeoutNanos=calculateFutureTimeout(perFutureTimeoutNanos,deadline);
      V value=executeWithDeadline(future,timeoutNanos);
      if (value != null) {
        results.add(value);
      }
    }
 catch (    Exception e) {
      exceptionHandler.handleException(e);
    }
  }
  return results;
}
