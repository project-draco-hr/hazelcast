{
  String groupName=generateRandomString(10);
  final CountDownLatch latch=new CountDownLatch(1);
  Config config1=new Config();
  config1.getNetworkConfig().setPort(5901);
  config1.getGroupConfig().setName(groupName);
  config1.setProperty(GroupProperty.WAIT_SECONDS_BEFORE_JOIN.getName(),"5");
  config1.setProperty(GroupProperty.MERGE_FIRST_RUN_DELAY_SECONDS.getName(),"0");
  config1.setProperty(GroupProperty.MERGE_NEXT_RUN_DELAY_SECONDS.getName(),"0");
  config1.addListenerConfig(new ListenerConfig(new LifecycleListener(){
    public void stateChanged(    final LifecycleEvent event){
switch (event.getState()) {
case MERGING:
case MERGED:
        latch.countDown();
default :
      break;
  }
}
}
));
Hazelcast.newHazelcastInstance(config1);
Thread.sleep(5000);
Config config2=new Config();
config2.getGroupConfig().setName(groupName);
config2.getNetworkConfig().setPort(5701);
config2.setProperty(GroupProperty.WAIT_SECONDS_BEFORE_JOIN.getName(),"5");
config2.setProperty(GroupProperty.MERGE_FIRST_RUN_DELAY_SECONDS.getName(),"0");
config2.setProperty(GroupProperty.MERGE_NEXT_RUN_DELAY_SECONDS.getName(),"0");
Hazelcast.newHazelcastInstance(config2);
assertFalse("Latch should not be countdown!",latch.await(3,TimeUnit.SECONDS));
}
