{
  int clusterSize=partitionService.getMemberPartitionsMap().size();
  Iterator<Object> keys=null;
  Throwable loadError=null;
  try {
    Iterable<Object> allKeys=mapStoreContext.loadAllKeys();
    keys=allKeys.iterator();
    Iterator<Data> dataKeys=map(keys,toData);
    int mapMaxSize=clusterSize * maxSizePerNode;
    if (mapMaxSize > 0) {
      dataKeys=limit(dataKeys,mapMaxSize);
    }
    Iterator<Entry<Integer,Data>> partitionsAndKeys=map(dataKeys,toPartition(partitionService));
    Iterator<Map<Integer,List<Data>>> batches=toBatches(partitionsAndKeys,maxBatch);
    while (batches.hasNext()) {
      Map<Integer,List<Data>> batch=batches.next();
      sendBatch(batch,replaceExistingValues);
    }
  }
 catch (  Exception caught) {
    loadError=caught;
  }
 finally {
    sendLoadCompleted(clusterSize,partitionService.getPartitionCount(),replaceExistingValues,loadError);
    if (keys instanceof Closeable) {
      closeResource((Closeable)keys);
    }
  }
}
