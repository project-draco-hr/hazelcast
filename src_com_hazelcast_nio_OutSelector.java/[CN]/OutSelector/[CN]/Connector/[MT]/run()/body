{
  try {
    socketChannel=SocketChannel.open();
    final Address thisAddress=Node.get().getThisAddress();
    final int addition=(thisAddress.getPort() - Config.get().port);
    localPort=10000 + addition;
    boolean bindOk=false;
    while (!bindOk) {
      try {
        localPort+=20;
        if (boundPorts.size() > 2000 || localPort > 60000) {
          boundPorts.clear();
          final Connection[] conns=ConnectionManager.get().getConnections();
          for (          final Connection conn : conns) {
            boundPorts.add(conn.localPort);
          }
        }
        if (boundPorts.add(localPort)) {
          socketChannel.socket().bind(new InetSocketAddress(thisAddress.getInetAddress(),localPort));
          bindOk=true;
          socketChannel.configureBlocking(false);
          if (DEBUG)           logger.log(Level.INFO,"connecting to " + address);
          socketChannel.connect(new InetSocketAddress(address.getInetAddress(),address.getPort()));
        }
      }
 catch (      final Exception e) {
      }
    }
    socketChannel.register(selector,SelectionKey.OP_CONNECT,Connector.this);
  }
 catch (  final Exception e) {
    try {
      socketChannel.close();
    }
 catch (    final IOException ignored) {
    }
    if (numberOfConnectionError++ < 5) {
      if (DEBUG) {
        logger.log(Level.INFO,"Couldn't register connect! will trying again. cause: " + e.getMessage());
      }
      run();
    }
 else {
      ConnectionManager.get().failedConnection(address);
    }
  }
}
