{
  return new PortableFactory(){
    @Override public Portable create(    int classId){
switch (classId) {
case OFFER:
        return new OfferRequest();
case SIZE:
      return new SizeRequest();
case REMOVE:
    return new RemoveRequest();
case POLL:
  return new PollRequest();
case PEEK:
return new PeekRequest();
case ITERATOR:
return new IteratorRequest();
case DRAIN:
return new DrainRequest();
case CONTAINS:
return new ContainsRequest();
case COMPARE_AND_REMOVE:
return new CompareAndRemoveRequest();
case CLEAR:
return new ClearRequest();
case ADD_ALL:
return new AddAllRequest();
case ADD_LISTENER:
return new AddListenerRequest();
case REMAINING_CAPACITY:
return new RemainingCapacityRequest();
case TXN_OFFER:
return new TxnOfferRequest();
case TXN_POLL:
return new TxnPollRequest();
case TXN_SIZE:
return new TxnSizeRequest();
case TXN_PEEK:
return new TxnPeekRequest();
case REMOVE_LISTENER:
return new RemoveListenerRequest();
case IS_EMPTY:
return new IsEmptyRequest();
default :
return null;
}
}
}
;
}
