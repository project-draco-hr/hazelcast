{
  Config config=new Config();
  final String name="defMM";
  config.getMultiMapConfig(name).setValueCollectionType(MultiMapConfig.ValueCollectionType.LIST);
  final int insCount=4;
  StaticNodeFactory factory=createNodeFactory(insCount);
  final HazelcastInstance[] instances=factory.newInstances(config);
  final Set keys=new HashSet();
  EntryListener listener=new EntryListener(){
    public void entryAdded(    EntryEvent event){
      keys.add(event.getKey());
    }
    public void entryRemoved(    EntryEvent event){
      keys.remove(event.getKey());
    }
    public void entryUpdated(    EntryEvent event){
    }
    public void entryEvicted(    EntryEvent event){
    }
  }
;
  final String id=instances[0].getMultiMap(name).addLocalEntryListener(listener);
  instances[0].getMultiMap(name).put("key1","val1");
  instances[0].getMultiMap(name).put("key2","val2");
  instances[0].getMultiMap(name).put("key3","val3");
  instances[0].getMultiMap(name).put("key4","val4");
  instances[0].getMultiMap(name).put("key5","val5");
  instances[0].getMultiMap(name).put("key6","val6");
  instances[0].getMultiMap(name).put("key7","val7");
  instances[0].getMultiMap(name).put("key8","val8");
  Thread.sleep(1500);
  assertTrue(instances[0].getMultiMap(name).localKeySet().containsAll(keys));
  if (keys.size() != 0) {
    instances[0].getMultiMap(name).remove(keys.iterator().next());
  }
  Thread.sleep(1500);
  assertTrue(instances[0].getMultiMap(name).localKeySet().containsAll(keys));
  instances[0].getMultiMap(name).removeEntryListener(id);
  getMultiMap(instances,name).clear();
  keys.clear();
  final String id2=instances[0].getMultiMap(name).addEntryListener(listener,true);
  getMultiMap(instances,name).put("key3","val3");
  getMultiMap(instances,name).put("key3","val33");
  getMultiMap(instances,name).put("key4","val4");
  getMultiMap(instances,name).remove("key3","val33");
  Thread.sleep(1500);
  assertEquals(1,keys.size());
  getMultiMap(instances,name).clear();
  Thread.sleep(1500);
  assertEquals(0,keys.size());
  instances[0].getMultiMap(name).removeEntryListener(id2);
  instances[0].getMultiMap(name).addEntryListener(listener,"key7",true);
  getMultiMap(instances,name).put("key2","val2");
  getMultiMap(instances,name).put("key3","val3");
  getMultiMap(instances,name).put("key7","val7");
  Thread.sleep(1500);
  assertEquals(1,keys.size());
}
