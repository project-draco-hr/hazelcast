{
  final int ENTRY_COUNT=100;
  final int SAMPLE_COUNT=15;
  SampleableConcurrentHashMap<Integer,Integer> sampleableConcurrentHashMap=new SampleableConcurrentHashMap<Integer,Integer>(ENTRY_COUNT);
  for (int i=0; i < ENTRY_COUNT; i++) {
    sampleableConcurrentHashMap.put(i,i);
  }
  Iterable<SampleableConcurrentHashMap.SamplingEntry<Integer,Integer>> samples=sampleableConcurrentHashMap.getRandomSamples(SAMPLE_COUNT);
  assertNotNull(samples);
  int sampleCount=0;
  Map<Integer,Integer> map=new HashMap<Integer,Integer>();
  for (  SampleableConcurrentHashMap.SamplingEntry<Integer,Integer> sample : samples) {
    map.put(sample.getKey(),sample.getValue());
    sampleCount++;
  }
  assertEquals(SAMPLE_COUNT,sampleCount);
  assertEquals(SAMPLE_COUNT,map.size());
}
