{
  final long startTime=Clock.currentTimeMillis();
  final TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);
  final HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);
  final HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);
  warmUpPartitions(instance1,instance2);
  final String mapName=randomMapName();
  final ReplicatedMap<String,String> map1=instance1.getReplicatedMap(mapName);
  final ReplicatedMap<String,String> map2=instance2.getReplicatedMap(mapName);
  final int partitionCount=getPartitionService(instance1).getPartitionCount();
  final Set<String> keys=generateRandomKeys(instance1,partitionCount);
  for (  String key : keys) {
    map1.put(key,"bar");
  }
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      for (      Map.Entry<String,String> entry : map1.entrySet()) {
        assertRecord(getReplicatedRecord(map1,entry.getKey()),startTime);
      }
    }
  }
);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      for (      Map.Entry<String,String> entry : map2.entrySet()) {
        assertRecord(getReplicatedRecord(map2,entry.getKey()),startTime);
      }
    }
  }
);
}
