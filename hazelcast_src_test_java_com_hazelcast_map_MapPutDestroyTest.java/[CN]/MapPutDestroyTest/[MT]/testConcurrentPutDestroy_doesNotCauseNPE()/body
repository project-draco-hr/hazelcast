{
  final HazelcastInstance instance=createHazelcastInstance(getConfig());
  final String name=randomString();
  final AtomicReference<Throwable> error=new AtomicReference<Throwable>(null);
  final AtomicBoolean stop=new AtomicBoolean();
  Thread t1=new Thread(new Runnable(){
    @Override public void run(){
      try {
        while (!stop.get()) {
          IMap<Object,Object> map=instance.getMap(name);
          map.put(System.currentTimeMillis(),Boolean.TRUE);
        }
      }
 catch (      Throwable e) {
        error.set(e);
      }
    }
  }
);
  Thread t2=new Thread(new Runnable(){
    @Override public void run(){
      try {
        while (!stop.get()) {
          IMap<Object,Object> map=instance.getMap(name);
          map.destroy();
        }
      }
 catch (      Throwable e) {
        error.set(e);
      }
    }
  }
);
  t1.start();
  t2.start();
  sleepSeconds(10);
  stop.set(true);
  try {
    t1.join();
  }
 catch (  Throwable e) {
    e.printStackTrace();
  }
  try {
    t2.join();
  }
 catch (  Throwable e) {
    e.printStackTrace();
  }
  Throwable object=error.get();
  if (object != null) {
    object.printStackTrace(System.out);
    fail(object.getMessage());
  }
}
