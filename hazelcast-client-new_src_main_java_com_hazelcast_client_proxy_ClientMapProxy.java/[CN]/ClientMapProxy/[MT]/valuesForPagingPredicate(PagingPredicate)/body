{
  pagingPredicate.setIterationType(IterationType.VALUE);
  ClientMessage request=MapValuesWithPagingPredicateCodec.encodeRequest(name,toData(pagingPredicate));
  ClientMessage response=invoke(request);
  MapValuesWithPagingPredicateCodec.ResponseParameters resultParameters=MapValuesWithPagingPredicateCodec.decodeResponse(response);
  List<Entry> resultList=new ArrayList<Entry>(resultParameters.map.size());
  for (  Entry<Data,Data> entry : resultParameters.map.entrySet()) {
    K key=toObject(entry.getKey());
    V value=toObject(entry.getValue());
    resultList.add(new AbstractMap.SimpleImmutableEntry<K,V>(key,value));
  }
  return (Collection)getSortedQueryResultSet(resultList,pagingPredicate,IterationType.VALUE);
}
