{
  if (queue.size() == 0) {
    return Collections.emptyList();
  }
  final List<DelayedEntry> sortedDelayedEntries=queue.fetchAndRemoveAll();
  Collections.sort(sortedDelayedEntries,DELAYED_ENTRY_COMPARATOR);
  final Map<Integer,Collection<DelayedEntry>> failedStoreOpPerPartition=new HashMap<Integer,Collection<DelayedEntry>>();
  mapStoreManager.process(sortedDelayedEntries,failedStoreOpPerPartition);
  if (failedStoreOpPerPartition.size() > 0) {
    printErrorLog(failedStoreOpPerPartition);
  }
  queue.clear();
  return getDataKeys(sortedDelayedEntries);
}
