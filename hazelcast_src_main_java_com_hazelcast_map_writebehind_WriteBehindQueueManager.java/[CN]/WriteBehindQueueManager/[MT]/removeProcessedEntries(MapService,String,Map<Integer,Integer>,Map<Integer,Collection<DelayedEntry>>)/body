{
  for (  Map.Entry<Integer,Integer> entry : partitionToEntryCountHolder.entrySet()) {
    final Integer partitionId=entry.getKey();
    final PartitionContainer partitionContainer=mapService.getPartitionContainer(partitionId);
    final RecordStore recordStore=partitionContainer.getExistingRecordStore(mapName);
    if (recordStore == null) {
      continue;
    }
    final WriteBehindQueue<DelayedEntry> queue=recordStore.getWriteBehindQueue();
    removeProcessed(queue,partitionToEntryCountHolder.get(partitionId));
    final Collection<DelayedEntry> fails=failsPerPartition.get(partitionId);
    if (fails == null || fails.isEmpty()) {
      continue;
    }
    queue.addFront(fails);
  }
}
