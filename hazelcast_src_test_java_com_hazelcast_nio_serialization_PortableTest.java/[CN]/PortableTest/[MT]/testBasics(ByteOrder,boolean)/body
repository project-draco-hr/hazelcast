{
  final SerializationService serializationService=createSerializationService(1,order,allowUnsafe);
  final SerializationService serializationService2=createSerializationService(2,order,allowUnsafe);
  Data data;
  NamedPortable[] nn=new NamedPortable[5];
  for (int i=0; i < nn.length; i++) {
    nn[i]=new NamedPortable("named-portable-" + i,i);
  }
  NamedPortable np=nn[0];
  data=serializationService.toData(np);
  assertEquals(np,serializationService.toObject(data));
  transferClassDefinition(data,serializationService,serializationService2);
  assertEquals(np,serializationService2.toObject(data));
  InnerPortable inner=new InnerPortable(new byte[]{0,1,2},new char[]{'c','h','a','r'},new short[]{3,4,5},new int[]{9,8,7,6},new long[]{0,1,5,7,9,11},new float[]{0.6543f,-3.56f,45.67f},new double[]{456.456,789.789,321.321},nn);
  data=serializationService.toData(inner);
  assertEquals(inner,serializationService.toObject(data));
  transferClassDefinition(data,serializationService,serializationService2);
  assertEquals(inner,serializationService2.toObject(data));
  MainPortable main=new MainPortable((byte)113,true,'x',(short)-500,56789,-50992225L,900.5678f,-897543.3678909d,"this is main portable object created for testing!",inner);
  data=serializationService.toData(main);
  assertEquals(main,serializationService.toObject(data));
  transferClassDefinition(data,serializationService,serializationService2);
  assertEquals(main,serializationService2.toObject(data));
}
