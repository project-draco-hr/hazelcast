{
  SerializationService ss=new DefaultSerializationServiceBuilder().addPortableFactory(FACTORY_ID,new PortableFactory(){
    @Override public Portable create(    int classId){
      return new NamedPortableV2();
    }
  }
).build();
  SerializationService ss2=new DefaultSerializationServiceBuilder().addPortableFactory(FACTORY_ID,new PortableFactory(){
    @Override public Portable create(    int classId){
      return new NamedPortable();
    }
  }
).setVersion(5).build();
  Object o1=new ComplexDataSerializable(new NamedPortableV2("test",123),new ByteArrayDataSerializable(new byte[3]),null);
  Data data=ss.toData(o1);
  transferClassDefinition(data,ss,ss2);
  Object o2=ss2.toObject(data);
  assertEquals(o1,o2);
}
