{
  NamedPortableV2 p=new NamedPortableV2("test-portable",123456789);
  Data data=ss.toData(p);
  byte[] metadata=data.getHeader();
  assertNotNull(metadata);
  boolean bigEndian=ss.getByteOrder() == ByteOrder.BIG_ENDIAN;
  assertEquals(p.getFactoryId(),Bits.readInt(metadata,0,bigEndian));
  assertEquals(p.getClassId(),Bits.readInt(metadata,4,bigEndian));
  assertEquals(p.getClassVersion(),Bits.readInt(metadata,8,bigEndian));
  assertEquals(p.getFactoryId(),data.readIntHeader(0,ss.getByteOrder()));
  assertEquals(p.getClassId(),data.readIntHeader(4,ss.getByteOrder()));
  assertEquals(p.getClassVersion(),data.readIntHeader(8,ss.getByteOrder()));
  PortableContext portableContext=ss.getPortableContext();
  ClassDefinition cd=portableContext.lookupClassDefinition(data);
  assertEquals(p.getFactoryId(),cd.getFactoryId());
  assertEquals(p.getClassId(),cd.getClassId());
  assertEquals(p.getClassVersion(),cd.getVersion());
}
