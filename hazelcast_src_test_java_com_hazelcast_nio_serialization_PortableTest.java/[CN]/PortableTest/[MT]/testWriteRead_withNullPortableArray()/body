{
  ClassDefinitionBuilder builder0=new ClassDefinitionBuilder(PORTABLE_FACTORY_ID,1);
  ClassDefinitionBuilder builder1=new ClassDefinitionBuilder(PORTABLE_FACTORY_ID,2);
  builder0.addPortableArrayField("list",builder1.build());
  SerializationService ss=new DefaultSerializationServiceBuilder().addClassDefinition(builder0.build()).addClassDefinition(builder1.build()).build();
  Data data=ss.toData(new TestObject1());
  SerializationService ss2=new DefaultSerializationServiceBuilder().addPortableFactory(1,new PortableFactory(){
    @Override public Portable create(    int classId){
switch (classId) {
case 1:
        return new TestObject1();
case 2:
      return new TestObject2();
  }
  return null;
}
}
).build();
Object object=ss2.toObject(data);
assertNotNull(object);
assertTrue(object instanceof TestObject1);
}
