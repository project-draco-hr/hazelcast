{
  final Config config=new Config();
  final BlockingQueue<Integer> counts=new ArrayBlockingQueue<Integer>(2);
  final HazelcastInstance[] instances=new HazelcastInstance[2];
  for (int i=0; i < 2; i++) {
    instances[i]=Hazelcast.newHazelcastInstance(config);
  }
  for (int j=0; j < 2; j++) {
    final int instanceIndex=j;
    new Thread(new Runnable(){
      public void run(){
        final HazelcastInstance h=instances[instanceIndex];
        for (int i=0; i < 3000; i++) {
          h.getMap("default").put(i,"value");
        }
        counts.offer(getLocalPartitions(h).size());
      }
    }
).start();
  }
  int first=counts.take();
  int second=counts.take();
  assertTrue("Found " + first,first > 134);
  assertTrue("Found " + second,second > 134);
  assertEquals(271,second + first);
}
