{
  final HazelcastInstance instance=createHazelcastInstance();
  final String name=randomString();
  IList<Integer> list=instance.getList(name);
  list.add(1);
  list.add(2);
  list.add(3);
  TransactionContext firstContext=instance.newTransactionContext();
  firstContext.beginTransaction();
  firstContext.getList(name).remove(1);
  final CountDownLatch latch=new CountDownLatch(1);
  Thread thread=new Thread(){
    @Override public void run(){
      TransactionContext secondContext=instance.newTransactionContext();
      secondContext.beginTransaction();
      secondContext.getList(name).remove(2);
      try {
        latch.await();
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
      secondContext.rollbackTransaction();
    }
  }
;
  thread.start();
  firstContext.rollbackTransaction();
  latch.countDown();
  thread.join();
  assertEquals(1,list.get(0).intValue());
  assertEquals(2,list.get(1).intValue());
  assertEquals(3,list.get(2).intValue());
}
