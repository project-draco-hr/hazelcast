{
  final PartitionContainer container=mapService.getMapServiceContext().getPartitionContainer(partition);
  final RecordStore recordStore=container.getRecordStore(name);
  LinkedList<QueryableEntry> partitionResult=new LinkedList<QueryableEntry>();
  final Iterator<Record> iterator=recordStore.loadAwareIterator();
  while (iterator.hasNext()) {
    final Record record=iterator.next();
    final Data key=record.getKey();
    final Object value=getValueOrCachedValue(record);
    if (value == null) {
      continue;
    }
    final QueryEntry queryEntry=new QueryEntry(ss,key,key,value);
    if (predicate.apply(queryEntry)) {
      if (pagingPredicate != null) {
        Map.Entry anchor=pagingPredicate.getAnchor();
        final Comparator comparator=pagingPredicate.getComparator();
        if (anchor != null && SortingUtil.compare(comparator,pagingPredicate.getIterationType(),anchor,queryEntry) >= 0) {
          continue;
        }
      }
      partitionResult.add(queryEntry);
    }
  }
  if (pagingPredicate != null) {
    Collections.sort(partitionResult,wrapperComparator);
    if (partitionResult.size() > pagingPredicate.getPageSize()) {
      return partitionResult.subList(0,pagingPredicate.getPageSize());
    }
  }
  return partitionResult;
}
