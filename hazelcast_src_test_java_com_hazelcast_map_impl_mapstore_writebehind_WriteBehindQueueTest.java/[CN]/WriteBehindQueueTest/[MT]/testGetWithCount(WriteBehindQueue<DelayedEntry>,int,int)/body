{
  final List<DelayedEntry> delayedEntries=createDelayedEntryList(queueSize);
  for (  DelayedEntry entry : delayedEntries) {
    queue.addLast(entry);
  }
  List<DelayedEntry> entries=new ArrayList<DelayedEntry>();
  queue.filter(new IPredicate<DelayedEntry>(){
    int count=0;
    @Override public boolean test(    DelayedEntry delayedEntry){
      return count++ < fetchNumberOfEntries;
    }
  }
,entries);
  int expectedFetchedEntryCount=Math.min(queueSize,fetchNumberOfEntries);
  assertEquals(expectedFetchedEntryCount,entries.size());
}
