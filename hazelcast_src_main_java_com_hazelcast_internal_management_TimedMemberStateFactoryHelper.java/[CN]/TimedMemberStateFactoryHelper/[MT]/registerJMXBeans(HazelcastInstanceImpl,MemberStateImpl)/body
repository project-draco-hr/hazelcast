{
  final EventService es=instance.node.nodeEngine.getEventService();
  final InternalOperationService os=instance.node.nodeEngine.getOperationService();
  final ConnectionManager cm=instance.node.connectionManager;
  final InternalPartitionService ps=instance.node.partitionService;
  final ProxyService proxyService=instance.node.nodeEngine.getProxyService();
  final ExecutionService executionService=instance.node.nodeEngine.getExecutionService();
  final MXBeansDTO beans=new MXBeansDTO();
  final EventServiceDTO esBean=new EventServiceDTO(es);
  beans.setEventServiceBean(esBean);
  final OperationServiceDTO osBean=new OperationServiceDTO(os);
  beans.setOperationServiceBean(osBean);
  final ConnectionManagerDTO cmBean=new ConnectionManagerDTO(cm);
  beans.setConnectionManagerBean(cmBean);
  final PartitionServiceBeanDTO psBean=new PartitionServiceBeanDTO(ps,instance);
  beans.setPartitionServiceBean(psBean);
  final ProxyServiceDTO proxyServiceBean=new ProxyServiceDTO(proxyService);
  beans.setProxyServiceBean(proxyServiceBean);
  final ManagedExecutorService systemExecutor=executionService.getExecutor(ExecutionService.SYSTEM_EXECUTOR);
  final ManagedExecutorService asyncExecutor=executionService.getExecutor(ExecutionService.ASYNC_EXECUTOR);
  final ManagedExecutorService scheduledExecutor=executionService.getExecutor(ExecutionService.SCHEDULED_EXECUTOR);
  final ManagedExecutorService clientExecutor=executionService.getExecutor(ExecutionService.CLIENT_EXECUTOR);
  final ManagedExecutorService queryExecutor=executionService.getExecutor(ExecutionService.QUERY_EXECUTOR);
  final ManagedExecutorService ioExecutor=executionService.getExecutor(ExecutionService.IO_EXECUTOR);
  final ManagedExecutorDTO systemExecutorDTO=new ManagedExecutorDTO(systemExecutor);
  final ManagedExecutorDTO asyncExecutorDTO=new ManagedExecutorDTO(asyncExecutor);
  final ManagedExecutorDTO scheduledExecutorDTO=new ManagedExecutorDTO(scheduledExecutor);
  final ManagedExecutorDTO clientExecutorDTO=new ManagedExecutorDTO(clientExecutor);
  final ManagedExecutorDTO queryExecutorDTO=new ManagedExecutorDTO(queryExecutor);
  final ManagedExecutorDTO ioExecutorDTO=new ManagedExecutorDTO(ioExecutor);
  beans.putManagedExecutor(ExecutionService.SYSTEM_EXECUTOR,systemExecutorDTO);
  beans.putManagedExecutor(ExecutionService.ASYNC_EXECUTOR,asyncExecutorDTO);
  beans.putManagedExecutor(ExecutionService.SCHEDULED_EXECUTOR,scheduledExecutorDTO);
  beans.putManagedExecutor(ExecutionService.CLIENT_EXECUTOR,clientExecutorDTO);
  beans.putManagedExecutor(ExecutionService.QUERY_EXECUTOR,queryExecutorDTO);
  beans.putManagedExecutor(ExecutionService.IO_EXECUTOR,ioExecutorDTO);
  memberState.setBeans(beans);
}
