{
  final String item="offered1";
  final String queueName=randomString();
  final IQueue queue1=client.getQueue(queueName);
  final CountDownLatch justBeforeBlocked=new CountDownLatch(1);
  new Thread(){
    public void run(){
      try {
        justBeforeBlocked.await();
        sleepSeconds(1);
        queue1.offer(item);
      }
 catch (      InterruptedException e) {
        fail("failed" + e);
      }
    }
  }
.start();
  final TransactionContext context=client.newTransactionContext();
  context.beginTransaction();
  TransactionalQueue txnQueue1=context.getQueue(queueName);
  try {
    justBeforeBlocked.countDown();
    Object result=txnQueue1.poll(5,TimeUnit.SECONDS);
    assertEquals("TransactionalQueue should get item offered from client queue",item,result);
  }
 catch (  InterruptedException e) {
    fail("TransactionalQueue did not get item offered from client queue" + e);
  }
  context.commitTransaction();
}
