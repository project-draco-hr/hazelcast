{
  String propName="hazelcast.compat.serializers.use.default.constructor.only";
  String origProperty=System.getProperty(propName);
  try {
    System.setProperty(propName,"true");
    SerializerConfig serializerConfig=new SerializerConfig();
    serializerConfig.setClassName("com.hazelcast.internal.serialization.impl.TestSerializerHook$TestSerializerWithTypeConstructor");
    serializerConfig.setTypeClassName("com.hazelcast.nio.serialization.SampleIdentifiedDataSerializable");
    SerializationConfig serializationConfig=getConfig().getSerializationConfig();
    serializationConfig.addSerializerConfig(serializerConfig);
    SerializerHookLoader hook=new SerializerHookLoader(serializationConfig,classLoader);
    Map<Class,Object> serializers=hook.getSerializers();
    TestSerializerHook.TestSerializerWithTypeConstructor serializer=(TestSerializerHook.TestSerializerWithTypeConstructor)serializers.get(SampleIdentifiedDataSerializable.class);
    assertNull(serializer.getClazz());
  }
  finally {
    if (origProperty != null) {
      System.setProperty(propName,origProperty);
    }
 else     System.clearProperty(propName);
  }
}
