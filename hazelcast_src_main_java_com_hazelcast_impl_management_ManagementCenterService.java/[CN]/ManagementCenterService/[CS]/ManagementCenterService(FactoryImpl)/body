{
  this.factory=factoryImpl;
  logger=factory.node.getLogger(ManagementCenterService.class.getName());
  final ManagementCenterConfig config=factory.node.config.getManagementCenterConfig();
  if (config == null) {
    throw new IllegalStateException("ManagementCenterConfig should not be null!");
  }
  this.instanceFilterMap=new StatsInstanceFilter(factoryImpl.node.getGroupProperties().MC_MAP_EXCLUDES.getString());
  this.instanceFilterQueue=new StatsInstanceFilter(factoryImpl.node.getGroupProperties().MC_QUEUE_EXCLUDES.getString());
  this.instanceFilterTopic=new StatsInstanceFilter(factoryImpl.node.getGroupProperties().MC_TOPIC_EXCLUDES.getString());
  this.instanceFilterAtomicNumber=new StatsInstanceFilter(factoryImpl.node.getGroupProperties().MC_ATOMIC_NUMBER_EXCLUDES.getString());
  this.instanceFilterCountDownLatch=new StatsInstanceFilter(factoryImpl.node.getGroupProperties().MC_COUNT_DOWN_LATCH_EXCLUDES.getString());
  this.instanceFilterSemaphore=new StatsInstanceFilter(factoryImpl.node.getGroupProperties().MC_SEMAPHORE_EXCLUDES.getString());
  maxVisibleInstanceCount=factory.node.groupProperties.MC_MAX_INSTANCE_COUNT.getInteger();
  commandHandler=new ConsoleCommandHandler(factory);
  String tmpWebServerUrl=config != null ? config.getUrl() : null;
  webServerUrl=tmpWebServerUrl != null ? (!tmpWebServerUrl.endsWith("/") ? tmpWebServerUrl + '/' : tmpWebServerUrl) : tmpWebServerUrl;
  updateIntervalMs=(config != null && config.getUpdateInterval() > 0) ? config.getUpdateInterval() * 1000 : 5000;
  taskPoller=new TaskPoller();
  stateSender=new StateSender();
}
