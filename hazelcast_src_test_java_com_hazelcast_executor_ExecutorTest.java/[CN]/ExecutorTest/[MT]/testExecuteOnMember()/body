{
  final int k=4;
  final HazelcastInstance[] instances=StaticNodeFactory.newInstances(new Config(),k);
  for (int i=0; i < k; i++) {
    final HazelcastInstance instance=instances[k - i - 1];
    final IExecutorService service=instance.getExecutorService("testExecuteOnMember");
    final String script="if(!hazelcast.getCluster().getLocalMember().equals(member)) " + "hazelcast.getAtomicLong('testExecuteOnMember').incrementAndGet();";
    final HashMap map=new HashMap();
    map.put("member",instance.getCluster().getLocalMember());
    service.executeOnMember(new ScriptRunnable(script,map),instance.getCluster().getLocalMember());
  }
  try {
    Thread.sleep(2000);
  }
 catch (  InterruptedException e) {
    e.printStackTrace();
  }
  Assert.assertEquals(0,instances[0].getAtomicLong("testExecuteOnMember").get());
}
