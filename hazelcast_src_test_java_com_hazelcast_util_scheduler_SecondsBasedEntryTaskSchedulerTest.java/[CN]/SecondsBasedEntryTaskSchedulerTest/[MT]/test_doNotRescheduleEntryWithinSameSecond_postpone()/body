{
  scheduler=new SecondsBasedEntryTaskScheduler<Integer,Integer>(executorService,entryProcessor,POSTPONE);
  int delayMillis=0;
  int startSecond;
  boolean firstResult;
  boolean secondResult;
  int stopSecond;
  do {
    startSecond=findRelativeSecond(delayMillis);
    firstResult=scheduler.schedule(delayMillis,1,1);
    secondResult=scheduler.schedule(delayMillis,1,1);
    stopSecond=findRelativeSecond(delayMillis);
  }
 while (startSecond != stopSecond);
  assertTrue("First schedule() call should always be successful",firstResult);
  assertFalse("Second schedule() call should not be successful within the same second",secondResult);
  assertNotNull(scheduler.get(1));
  assertEquals(1,scheduler.size());
}
