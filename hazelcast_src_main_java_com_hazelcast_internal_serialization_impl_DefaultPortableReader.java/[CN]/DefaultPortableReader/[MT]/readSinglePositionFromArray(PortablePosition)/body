{
switch (position.getType()) {
case BYTE:
case BYTE_ARRAY:
    return (T)Byte.valueOf(in.readByte(position.getStreamPosition()));
case SHORT:
case SHORT_ARRAY:
  return (T)Short.valueOf(in.readShort(position.getStreamPosition()));
case INT:
case INT_ARRAY:
return (T)Integer.valueOf(in.readInt(position.getStreamPosition()));
case LONG:
case LONG_ARRAY:
return (T)Long.valueOf(in.readLong(position.getStreamPosition()));
case FLOAT:
case FLOAT_ARRAY:
return (T)Float.valueOf(in.readFloat(position.getStreamPosition()));
case DOUBLE:
case DOUBLE_ARRAY:
return (T)Double.valueOf(in.readDouble(position.getStreamPosition()));
case BOOLEAN:
case BOOLEAN_ARRAY:
return (T)Boolean.valueOf(in.readBoolean(position.getStreamPosition()));
case CHAR:
case CHAR_ARRAY:
return (T)Character.valueOf(in.readChar(position.getStreamPosition()));
case UTF:
case UTF_ARRAY:
in.position(position.getStreamPosition());
return (T)in.readUTF();
case PORTABLE:
case PORTABLE_ARRAY:
in.position(position.getStreamPosition());
return (T)serializer.readAndInitialize(in,position.getFactoryId(),position.getClassId());
default :
throw new IllegalArgumentException("Unsupported type " + position.getType());
}
}
