{
  ServerSocketChannel serverSocketChannel=null;
  SocketChannelWrapper socketChannel=null;
  final ExecutorService ex=Executors.newCachedThreadPool();
  try {
    final int count=1000;
    serverSocketChannel=ServerSocketChannel.open();
    ex.execute(new ServerSocketChannelProcessor(serverSocketChannel,count,ex));
    final AtomicReference<Error> error=new AtomicReference<Error>();
    SSLContext clientContext=createClientSslContext();
    socketChannel=new SSLSocketChannelWrapper(clientContext,SocketChannel.open(),true);
    socketChannel.connect(new InetSocketAddress(PORT));
    final CountDownLatch latch=new CountDownLatch(2);
    ex.execute(new ChannelWriter(socketChannel,count,latch){
      int prepareData(      int i) throws Exception {
        return i;
      }
    }
);
    ex.execute(new ChannelReader(socketChannel,count,latch){
      void processData(      int i,      int data) throws Exception {
        try {
          assertEquals(i * 2 + 1,data);
        }
 catch (        AssertionError e) {
          error.compareAndSet(null,e);
          throw e;
        }
      }
    }
);
    latch.await(2,TimeUnit.MINUTES);
    Error e=error.get();
    if (e != null) {
      throw e;
    }
  }
  finally {
    ex.shutdownNow();
    IOUtil.closeResource(socketChannel);
    IOUtil.closeResource(serverSocketChannel);
  }
}
