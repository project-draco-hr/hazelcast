{
  SocketChannel socketChannel=SocketChannel.open();
  connectionManager.initSocket(socketChannel.socket());
  if (ioService.isSocketBind()) {
    bindSocket(socketChannel);
  }
  Level level=silent ? Level.FINEST : Level.INFO;
  if (logger.isLoggable(level)) {
    logger.log(level,"Connecting to " + socketAddress + ", timeout: "+ timeout+ ", bind-any: "+ ioService.isSocketBindAny());
  }
  try {
    socketChannel.configureBlocking(true);
    connectSocketChannel(socketAddress,timeout,socketChannel);
    if (logger.isFinestEnabled()) {
      logger.finest("Successfully connected to: " + address + " using socket "+ socketChannel.socket());
    }
    SocketChannelWrapper socketChannelWrapper=connectionManager.wrapSocketChannel(socketChannel,true);
    connectionManager.interceptSocket(socketChannel.socket(),false);
    socketChannelWrapper.configureBlocking(false);
    TcpIpConnection connection=connectionManager.newConnection(socketChannelWrapper,address);
    connection.getSocketWriter().setProtocol(Protocols.CLUSTER);
    connectionManager.sendBindRequest(connection,address,true);
  }
 catch (  Exception e) {
    closeSocket(socketChannel);
    logger.log(level,"Could not connect to: " + socketAddress + ". Reason: "+ e.getClass().getSimpleName()+ "["+ e.getMessage()+ "]");
    throw e;
  }
}
