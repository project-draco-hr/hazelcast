{
  return new DataSerializableFactory(){
    public IdentifiedDataSerializable create(    int typeId){
      if (typeId == GET) {
        return new CacheGetOperation();
      }
 else       if (typeId == CONTAINS_KEY) {
        return new CacheContainsKeyOperation();
      }
 else       if (typeId == PUT) {
        return new CachePutOperation();
      }
 else       if (typeId == PUT_IF_ABSENT) {
        return new CachePutIfAbsentOperation();
      }
 else       if (typeId == REMOVE) {
        return new CacheRemoveOperation();
      }
 else       if (typeId == GET_AND_REMOVE) {
        return new CacheGetAndRemoveOperation();
      }
 else       if (typeId == REPLACE) {
        return new CacheReplaceOperation();
      }
 else       if (typeId == GET_AND_REPLACE) {
        return new CacheGetAndReplaceOperation();
      }
 else       if (typeId == PUT_BACKUP) {
        return new CachePutBackupOperation();
      }
 else       if (typeId == REMOVE_BACKUP) {
        return new CacheRemoveBackupOperation();
      }
 else       if (typeId == CLEAR_BACKUP) {
        return new CacheClearBackupOperation();
      }
 else       if (typeId == SIZE) {
        return new CacheSizeOperation();
      }
 else       if (typeId == SIZE_FACTORY) {
        return new CacheSizeOperationFactory();
      }
 else       if (typeId == CLEAR) {
        return new CacheClearOperation();
      }
 else       if (typeId == CLEAR_FACTORY) {
        return new CacheClearOperationFactory();
      }
 else       if (typeId == GET_STATS) {
      }
 else       if (typeId == GET_STATS_FACTORY) {
      }
 else       if (typeId == GET_ALL) {
        return new CacheGetAllOperation();
      }
 else       if (typeId == GET_ALL_FACTORY) {
        return new CacheGetAllOperationFactory();
      }
 else       if (typeId == EVENT) {
      }
 else       if (typeId == KEY_ITERATOR) {
        return new CacheKeyIteratorOperation();
      }
 else       if (typeId == KEY_ITERATION_RESULT) {
        return new CacheKeyIteratorResult();
      }
 else       if (typeId == ENTRY_PROCESSOR) {
        return new CacheEntryProcessorOperation();
      }
 else       if (typeId == CLEAR_RESPONSE) {
        return new CacheClearResponse();
      }
      throw new IllegalArgumentException("Unknown type-id: " + typeId);
    }
  }
;
}
