{
  ensureOpen();
  validateNotNull(key,value);
  validateConfiguredTypes(true,key,value);
  final Data k=serializationService.toData(key);
  final Data v=serializationService.toData(value);
  final Integer completionId=registerCompletionLatch(1);
  final Operation op=new CacheGetAndReplaceOperation(getDistributedObjectName(),k,v,expiryPolicy,completionId);
  final InternalCompletableFuture<Object> f=nodeEngine.getOperationService().invokeOnPartition(getServiceName(),op,getPartitionId(nodeEngine,k));
  try {
    final Object oldValue=f.get();
    waitCompletionLatch(completionId);
    return serializationService.toObject(oldValue);
  }
 catch (  Throwable e) {
    deregisterCompletionLatch(completionId);
    throw ExceptionUtil.rethrowAllowedTypeFirst(e,CacheException.class);
  }
}
