{
  NodeEngine nodeEngine=mapService.getNodeEngine();
  int chunkSize=nodeEngine.getGroupProperties().MAP_LOAD_CHUNK_SIZE.getInteger();
  Set keys=store.loadAllKeys();
  if (keys == null || keys.isEmpty())   return;
  Map<Data,Object> chunk=new HashMap<Data,Object>();
  for (  Object key : keys) {
    Data dataKey=mapService.toData(key);
    int partitionId=nodeEngine.getPartitionService().getPartitionId(dataKey);
    if (nodeEngine.getPartitionService().getPartitionOwner(partitionId).equals(nodeEngine.getClusterService().getThisAddress())) {
      chunk.put(dataKey,key);
      if (chunk.size() >= chunkSize) {
        nodeEngine.getExecutionService().submit("hz:map-load-all",new MapLoadAllTask(chunk));
        chunk=new HashMap<Data,Object>();
      }
    }
  }
  if (chunk.size() > 0) {
    try {
      nodeEngine.getExecutionService().submit("hz:map-load-all",new MapLoadAllTask(chunk));
    }
 catch (    Throwable t) {
      ExceptionUtil.rethrow(t);
    }
  }
}
