{
  if (isClosed()) {
    throw new IllegalStateException();
  }
  if (keyType == null) {
    throw new NullPointerException("keyType can not be null");
  }
  if (valueType == null) {
    throw new NullPointerException("valueType can not be null");
  }
synchronized (caches) {
    final String cacheNameWithPrefix=getCacheNameWithPrefix(cacheName);
    ICache<?,?> cache=caches.get(cacheNameWithPrefix);
    Configuration<?,?> configuration=null;
    if (cache != null) {
      configuration=cache.getConfiguration(CacheConfig.class);
    }
 else {
      final CacheGetConfigOperation cacheCreateConfigOperation=new CacheGetConfigOperation(cacheNameWithPrefix);
      int partitionId=nodeEngine.getPartitionService().getPartitionId(cacheNameWithPrefix);
      final InternalCompletableFuture<CacheConfig> f=nodeEngine.getOperationService().invokeOnPartition(CacheService.SERVICE_NAME,cacheCreateConfigOperation,partitionId);
      configuration=f.getSafely();
    }
    if (configuration == null) {
      return null;
    }
    if (configuration.getKeyType() != null && configuration.getKeyType().equals(keyType)) {
      if (configuration.getValueType() != null && configuration.getValueType().equals(valueType)) {
        return (ICache<K,V>)cache;
      }
 else {
        throw new ClassCastException("Incompatible cache value types specified, expected " + configuration.getValueType() + " but "+ valueType+ " was specified");
      }
    }
 else {
      throw new ClassCastException("Incompatible cache key types specified, expected " + configuration.getKeyType() + " but "+ keyType+ " was specified");
    }
  }
}
