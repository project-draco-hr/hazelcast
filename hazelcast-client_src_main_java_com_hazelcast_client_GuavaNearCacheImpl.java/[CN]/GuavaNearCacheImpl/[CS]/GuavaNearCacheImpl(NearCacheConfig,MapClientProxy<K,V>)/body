{
  this.map=map;
  CacheBuilder cacheBuilder=CacheBuilder.newBuilder();
  if (nc.getMaxSize() > 0)   cacheBuilder.maximumSize(nc.getMaxSize());
  if (nc.getTimeToLiveSeconds() > 0)   cacheBuilder.expireAfterWrite(nc.getTimeToLiveSeconds(),TimeUnit.SECONDS);
  if (nc.getMaxIdleSeconds() > 0)   cacheBuilder.expireAfterAccess(nc.getMaxIdleSeconds(),TimeUnit.SECONDS);
  cache=cacheBuilder.build(new CacheLoader(){
    @Override public Object load(    Object o) throws Exception {
      try {
        return map.get0(o);
      }
 catch (      Exception e) {
        throw new ExecutionException(e);
      }
    }
  }
);
}
