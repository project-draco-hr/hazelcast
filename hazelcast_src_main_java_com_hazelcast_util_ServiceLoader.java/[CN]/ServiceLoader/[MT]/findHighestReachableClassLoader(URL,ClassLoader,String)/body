{
  if (classLoader.getParent() == null) {
    return classLoader;
  }
  ClassLoader highestClassLoader=classLoader;
  ClassLoader current=classLoader;
  while (current.getParent() != null) {
    if (FILTERING_CLASS_LOADER.equals(current.getClass().getCanonicalName())) {
      break;
    }
    ClassLoader parent=current.getParent();
    try {
      Enumeration<URL> resources=parent.getResources(resourceName);
      if (resources != null) {
        while (resources.hasMoreElements()) {
          URL resourceURL=resources.nextElement();
          if (url.toURI().equals(resourceURL.toURI())) {
            highestClassLoader=parent;
          }
        }
      }
    }
 catch (    IOException ignore) {
      EmptyStatement.ignore(ignore);
    }
catch (    URISyntaxException ignore) {
      EmptyStatement.ignore(ignore);
    }
    current=current.getParent();
  }
  return highestClassLoader;
}
