{
  final Set<ServiceDefinition> classDefinitions=parse(factoryId,classLoader);
  if (classLoader != null && ServiceLoader.class.getClassLoader() != classLoader) {
    classDefinitions.addAll(parse(factoryId,ServiceLoader.class.getClassLoader()));
  }
  return new Iterator<T>(){
    final Iterator<ServiceDefinition> classIter=classDefinitions.iterator();
    public boolean hasNext(){
      return classIter.hasNext();
    }
    public T next(){
      final ServiceDefinition classDefinition=classIter.next();
      try {
        String className=classDefinition.className;
        ClassLoader classLoader=classDefinition.classLoader;
        return clazz.cast(ClassLoaderUtil.newInstance(classLoader,className));
      }
 catch (      Exception e) {
        throw new HazelcastException(e);
      }
    }
    public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
