{
  long heapCost=0;
  long backupEntryCount=0;
  long backupEntryMemoryCost=0;
  for (int replica=1; replica <= backupCount; replica++) {
    final Address replicaAddress=getReplicaAddress(replica,partition,clusterService,backupCount);
    if (notGotReplicaAddress(replicaAddress,clusterService,backupCount)) {
      printWarning(partition,replica);
      continue;
    }
    if (gotReplicaAddress(replicaAddress,thisAddress)) {
      RecordStore recordStore=getRecordStoreOrNull(mapName,partitionId);
      if (recordStore != null) {
        Map<Data,Record> records=recordStore.getReadonlyRecordMap();
        heapCost+=recordStore.getHeapCost();
        backupEntryCount+=records.size();
        backupEntryMemoryCost+=getMemoryCost(records);
      }
    }
  }
  localMapStats.incrementHeapCost(heapCost);
  localMapStats.incrementBackupEntryCount(backupEntryCount);
  localMapStats.incrementBackupEntryMemoryCost(backupEntryMemoryCost);
}
