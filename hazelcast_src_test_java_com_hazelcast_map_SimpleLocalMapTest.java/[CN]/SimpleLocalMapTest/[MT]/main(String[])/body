{
  try {
    InputStream in=Thread.currentThread().getContextClassLoader().getResourceAsStream("logging.properties");
    LogManager.getLogManager().readConfiguration(in);
    in.close();
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
  int instanceCount=2;
  int threadCount=10;
  int entryCount=10 * 1000;
  int valueSize=1000;
  int getPercentage=40;
  int putPercentage=40;
  boolean load=false;
  if (input != null && input.length > 0) {
    for (    String arg : input) {
      arg=arg.trim();
      if (arg.startsWith("i")) {
        instanceCount=Integer.parseInt(arg.substring(1));
      }
 else       if (arg.startsWith("t")) {
        threadCount=Integer.parseInt(arg.substring(1));
      }
 else       if (arg.startsWith("c")) {
        entryCount=Integer.parseInt(arg.substring(1));
      }
 else       if (arg.startsWith("v")) {
        valueSize=Integer.parseInt(arg.substring(1));
      }
 else       if (arg.startsWith("g")) {
        getPercentage=Integer.parseInt(arg.substring(1));
      }
 else       if (arg.startsWith("p")) {
        putPercentage=Integer.parseInt(arg.substring(1));
      }
 else       if (arg.startsWith("load")) {
        load=true;
      }
    }
  }
 else {
    System.out.println("Help: sh test.sh t200 v130 p10 g85 ");
    System.out.println("means 200 threads, value-size 130 bytes, 10% put, 85% get");
    System.out.println();
  }
  StaticNodeFactory factory=new StaticNodeFactory(instanceCount);
  Config cfg=new Config();
  cfg.getMapConfig("default").setInMemoryFormat(MapConfig.InMemoryFormat.DATA);
  for (int i=0; i < instanceCount; i++) {
    SimpleLocalMapTest test=new SimpleLocalMapTest(factory.newHazelcastInstance(cfg),threadCount,entryCount,valueSize,getPercentage,putPercentage,load);
    test.start();
  }
}
