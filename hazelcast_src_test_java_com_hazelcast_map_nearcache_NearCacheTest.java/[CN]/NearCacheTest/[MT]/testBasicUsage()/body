{
  int n=3;
  String mapName="test";
  Config config=new Config();
  config.getMapConfig(mapName).setNearCacheConfig(new NearCacheConfig().setInvalidateOnChange(true));
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(n);
  HazelcastInstance[] instances=factory.newInstances(config);
  IMap<Object,Object> map=instances[0].getMap(mapName);
  int count=5000;
  for (int i=0; i < count; i++) {
    map.put(i,i);
  }
  for (  HazelcastInstance instance : instances) {
    IMap<Object,Object> m=instance.getMap(mapName);
    for (int i=0; i < count; i++) {
      Assert.assertNotNull(m.get(i));
    }
  }
  for (int i=0; i < count; i++) {
    map.put(i,i * 2);
  }
  for (  HazelcastInstance instance : instances) {
    IMap<Object,Object> m=instance.getMap(mapName);
    for (int i=0; i < count; i++) {
      Assert.assertNotNull(m.get(i));
    }
  }
  for (  HazelcastInstance instance : instances) {
    NearCache nearCache=getNearCache(mapName,instance);
    int size=nearCache.size();
    assertTrue("NearCache size should be > 0 but was " + size,size > 0);
  }
  map.clear();
  for (  HazelcastInstance instance : instances) {
    NearCache nearCache=getNearCache(mapName,instance);
    int size=nearCache.size();
    assertEquals("NearCache size should be 0 but was " + size,0,size);
  }
}
