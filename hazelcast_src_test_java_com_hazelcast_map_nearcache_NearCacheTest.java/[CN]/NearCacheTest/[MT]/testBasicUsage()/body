{
  int clusterSize=3;
  int mapSize=5000;
  String mapName="testBasicUsage";
  Config config=getConfig();
  config.getMapConfig(mapName).setNearCacheConfig(newNearCacheConfig().setInvalidateOnChange(true));
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(clusterSize);
  HazelcastInstance[] instances=factory.newInstances(config);
  IMap<Integer,Integer> map=instances[0].getMap(mapName);
  populateMap(map,mapSize);
  for (  HazelcastInstance instance : instances) {
    IMap<Integer,Integer> instanceMap=instance.getMap(mapName);
    for (int i=0; i < mapSize; i++) {
      assertNotNull(instanceMap.get(i));
    }
  }
  for (int i=0; i < mapSize; i++) {
    map.put(i,i * 2);
  }
  for (  HazelcastInstance instance : instances) {
    IMap<Object,Object> m=instance.getMap(mapName);
    for (int i=0; i < mapSize; i++) {
      assertNotNull(m.get(i));
    }
  }
  for (  HazelcastInstance instance : instances) {
    int nearCacheSize=getNearCache(mapName,instance).size();
    assertTrue("Near Cache size should be > 0 but was " + nearCacheSize,nearCacheSize > 0);
  }
  map.clear();
  for (  HazelcastInstance instance : instances) {
    NearCache nearCache=getNearCache(mapName,instance);
    int size=nearCache.size();
    assertEquals("Near Cache size should be 0 but was " + size,0,size);
  }
}
