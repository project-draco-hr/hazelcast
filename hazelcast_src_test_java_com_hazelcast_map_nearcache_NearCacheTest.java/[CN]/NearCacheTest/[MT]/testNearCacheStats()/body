{
  int mapSize=1000;
  String mapName=randomMapName();
  Config config=getConfig();
  config.getMapConfig(mapName).setNearCacheConfig(newNearCacheConfig().setInvalidateOnChange(false));
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  HazelcastInstance[] instances=factory.newInstances(config);
  IMap<Integer,Integer> map=instances[0].getMap(mapName);
  for (int i=0; i < mapSize; i++) {
    map.put(i,i);
  }
  for (int i=0; i < mapSize; i++) {
    map.get(i);
  }
  NearCacheStats stats=map.getLocalMapStats().getNearCacheStats();
  assertTrue(format("Near Cache misses should be > %d but were %d",400,stats.getOwnedEntryCount()),stats.getOwnedEntryCount() > 400);
  assertEquals(format("Near Cache misses should be %d but were %d",mapSize,stats.getMisses()),mapSize,stats.getMisses());
  for (int i=0; i < mapSize; i++) {
    map.get(i);
  }
  stats=map.getLocalMapStats().getNearCacheStats();
  assertTrue(format("Near Cache hits should be > %d but were %d",400,stats.getHits()),stats.getHits() > 400);
  assertTrue(format("Near Cache misses should be > %d but were %d",400,stats.getMisses()),stats.getMisses() > 400);
  long hitsAndMisses=stats.getHits() + stats.getMisses();
  assertEquals(format("Near Cache hits + misses should be %s but were %d",mapSize * 2,hitsAndMisses),mapSize * 2,hitsAndMisses);
}
