{
  int mapSize=10;
  String mapName=randomMapName();
  Config config=createNearCachedMapConfig(mapName);
  HazelcastInstance instance=createHazelcastInstance(config);
  IMap<Integer,Employee> map=instance.getMap(mapName);
  for (int i=0; i < mapSize; i++) {
    map.put(i,new Employee(i,"",0,true,0D));
  }
  populateNearCache(map,mapSize);
  EntryObject e=new PredicateBuilder().getEntryObject();
  Predicate predicate=e.get("salary").equal(0);
  map.executeOnEntries(new AbstractEntryProcessor<Integer,Employee>(){
    @Override public Object process(    Map.Entry<Integer,Employee> entry){
      Employee employee=entry.getValue();
      double currentSalary=employee.getSalary();
      double newSalary=currentSalary + 10;
      employee.setSalary(newSalary);
      return newSalary;
    }
  }
,predicate);
  assertEquals(0,getNearCacheStats(map).getOwnedEntryCount());
}
