{
  Record record;
  MapContainer mapContainer=getMapContainer(name);
  final MapConfig.InMemoryFormat inMemoryFormat=mapContainer.getMapConfig().getInMemoryFormat();
  boolean statisticsEnabled=mapContainer.getMapConfig().isStatisticsEnabled();
switch (inMemoryFormat) {
case BINARY:
    record=new DataRecord(dataKey,toData(value),statisticsEnabled);
  break;
case OBJECT:
record=new ObjectRecord(dataKey,toObject(value),statisticsEnabled);
break;
case CACHED:
record=new CachedDataRecord(dataKey,toData(value),statisticsEnabled);
break;
default :
throw new IllegalArgumentException("Unrecognized InMemoryFormat: " + inMemoryFormat);
}
if (shouldSchedule) {
if (ttl < 0 && mapContainer.getMapConfig().getTimeToLiveSeconds() > 0) {
scheduleTtlEviction(name,record,mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000);
}
if (ttl > 0) {
scheduleTtlEviction(name,record,ttl);
}
if (mapContainer.getMapConfig().getMaxIdleSeconds() > 0) {
scheduleIdleEviction(name,dataKey,mapContainer.getMapConfig().getMaxIdleSeconds() * 1000);
}
}
return record;
}
