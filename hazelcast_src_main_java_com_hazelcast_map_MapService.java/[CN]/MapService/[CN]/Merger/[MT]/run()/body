{
  for (  final MapContainer mapContainer : recordMap.keySet()) {
    Collection<Record> recordList=recordMap.get(mapContainer);
    String mergePolicyName=mapContainer.getMapConfig().getMergePolicy();
    MapMergePolicy mergePolicy=getMergePolicy(mergePolicyName);
    final MapMergePolicy finalMergePolicy=mergePolicy;
    for (    final Record record : recordList) {
      nodeEngine.getExecutionService().submit("hz:map-merge",new Runnable(){
        public void run(){
          SimpleEntryView entryView=new SimpleEntryView(record.getKey(),toData(record.getValue()),record.getStatistics(),record.getVersion());
          MergeOperation operation=new MergeOperation(mapContainer.getName(),record.getKey(),entryView,finalMergePolicy);
          try {
            int partitionId=nodeEngine.getPartitionService().getPartitionId(record.getKey());
            Invocation invocation=nodeEngine.getOperationService().createInvocationBuilder(SERVICE_NAME,operation,partitionId).build();
            invocation.invoke().get();
          }
 catch (          Throwable t) {
            ExceptionUtil.rethrow(t);
          }
        }
      }
);
    }
  }
}
