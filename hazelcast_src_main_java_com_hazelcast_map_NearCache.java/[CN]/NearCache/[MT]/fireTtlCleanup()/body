{
  if (Clock.currentTimeMillis() < (lastCleanup + cleanupInterval))   return;
  if (canCleanUp.compareAndSet(true,false)) {
    try {
      nodeEngine.getExecutionService().execute("hz:near-cache",new Runnable(){
        public void run(){
          try {
            lastCleanup=Clock.currentTimeMillis();
            Iterator<Map.Entry<Data,CacheRecord>> iterator=cache.entrySet().iterator();
            while (iterator.hasNext()) {
              Map.Entry<Data,CacheRecord> entry=iterator.next();
              if (entry.getValue().expired()) {
                cache.remove(entry.getKey());
              }
            }
          }
  finally {
            canCleanUp.set(true);
          }
        }
      }
);
    }
 catch (    RejectedExecutionException e) {
      canCleanUp.set(true);
    }
catch (    Exception e) {
      ExceptionUtil.rethrow(e);
    }
  }
}
