{
  HazelcastInstance h1=Hazelcast.newHazelcastInstance(new Config());
  HazelcastInstance h2=Hazelcast.newHazelcastInstance(new Config());
  final IQueue q1=h1.getQueue("default");
  final IQueue q2=h2.getQueue("default");
  Thread.sleep(1000);
  new Thread(new Runnable(){
    public void run(){
      for (int i=0; i < 100; i++) {
        assertTrue(q1.offer("item"));
        assertTrue(q2.offer("item"));
      }
    }
  }
).start();
  final ExecutorService es=Executors.newFixedThreadPool(50);
  final CountDownLatch latch=new CountDownLatch(200);
  Thread.sleep(3000);
  for (int i=0; i < 100; i++) {
    es.execute(new Runnable(){
      public void run(){
        try {
          assertEquals("item",q1.poll(5,TimeUnit.SECONDS));
          latch.countDown();
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
      }
    }
);
    es.execute(new Runnable(){
      public void run(){
        try {
          assertEquals("item",q2.poll(5,TimeUnit.SECONDS));
          latch.countDown();
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
      }
    }
);
  }
  assertTrue(latch.await(100,TimeUnit.SECONDS));
  es.shutdown();
}
