{
  for (int i=0; i < instances.size(); i++) {
    final HazelcastInstance instance=instances.get(i);
    final Node node=getNode(instance);
    final Address address=node.getThisAddress();
    final InternalPartitionService partitionService=node.getPartitionService();
    for (    InternalPartition partition : partitionService.getPartitions()) {
      final int partitionId=partition.getPartitionId();
      final long[] replicaVersions=partitionService.getPartitionReplicaVersions(partitionId);
      if (address.equals(partition.getOwnerOrNull())) {
        final long[] replicaVersionsCopy=Arrays.copyOf(replicaVersions,replicaVersions.length);
        replicaVersionsByPartitionId.put(partitionId,replicaVersionsCopy);
      }
      if (i >= numberOfNodesToCrash) {
        for (int j=0; j < replicaVersions.length; j++) {
          if (address.equals(partition.getReplicaAddress(j))) {
            Integer smallestSurvivingReplicaIndex=smallestSurvivingReplicaIndexByPartitionId.get(partitionId);
            smallestSurvivingReplicaIndex=smallestSurvivingReplicaIndex != null ? min(smallestSurvivingReplicaIndex,j) : j;
            smallestSurvivingReplicaIndexByPartitionId.put(partitionId,smallestSurvivingReplicaIndex);
          }
        }
      }
    }
  }
}
