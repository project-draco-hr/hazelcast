{
  final String serviceName=eventPacket.serviceName;
  final EventServiceSegment segment=getSegment(serviceName,true);
  boolean sync=segment.incrementPublish() % EVENT_SYNC_FREQUENCY == 0;
  if (sync) {
    SendEventOperation op=new SendEventOperation(eventPacket,orderKey);
    Future f=nodeEngine.getOperationService().createInvocationBuilder(serviceName,op,subscriber).setTryCount(SEND_RETRY_COUNT).invoke();
    try {
      f.get(SEND_EVENT_TIMEOUT_SECONDS,TimeUnit.SECONDS);
    }
 catch (    Exception ignored) {
      ignore(ignored);
    }
  }
 else {
    final Packet packet=new Packet(nodeEngine.toData(eventPacket),orderKey);
    packet.setHeader(Packet.HEADER_EVENT);
    if (!nodeEngine.getPacketTransceiver().transmit(packet,subscriber)) {
      if (nodeEngine.isActive()) {
        logFailure("IO Queue overloaded! Failed to send event packet to: %s",subscriber);
      }
    }
  }
}
