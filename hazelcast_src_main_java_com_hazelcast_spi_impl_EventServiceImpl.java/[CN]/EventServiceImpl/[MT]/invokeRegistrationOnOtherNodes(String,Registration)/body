{
  Collection<MemberImpl> members=nodeEngine.getClusterService().getMemberList();
  Collection<Future> calls=new ArrayList<Future>(members.size());
  for (  MemberImpl member : members) {
    if (!member.localMember()) {
      Future f=nodeEngine.getOperationService().invokeOnTarget(serviceName,new RegistrationOperation(reg),member.getAddress());
      calls.add(f);
    }
  }
  for (  Future f : calls) {
    try {
      f.get(5,TimeUnit.SECONDS);
    }
 catch (    InterruptedException ignored) {
    }
catch (    TimeoutException ignored) {
    }
catch (    MemberLeftException e) {
      logger.finest("Member left while registering listener...",e);
    }
catch (    ExecutionException e) {
      throw new HazelcastException(e);
    }
  }
}
