{
  final String cacheName=randomName();
  HazelcastInstance instance=hazelcastFactory.newHazelcastInstance();
  final HazelcastInstance client=hazelcastFactory.newHazelcastClient();
  final HazelcastServerCachingProvider cachingProvider=createCachingProvider(instance);
  final CacheManager cacheManager=cachingProvider.getCacheManager();
  final CacheConfig<Integer,String> config=new CacheConfig<Integer,String>();
  config.setBackupCount(0);
  cacheManager.createCache(cacheName,config);
  final CachingProvider clientCachingProvider=HazelcastClientCachingProvider.createCachingProvider(client);
  final CacheManager clientCacheManager=clientCachingProvider.getCacheManager();
  final Cache<Integer,String> cache=clientCacheManager.getCache(cacheName);
  final ICache iCache=cache.unwrap(ICache.class);
  final EventCollectingCachePartitionLostListener listener=new EventCollectingCachePartitionLostListener();
  iCache.addPartitionLostListener(listener);
  final CacheService cacheService=getNode(instance).getNodeEngine().getService(CacheService.SERVICE_NAME);
  final int partitionId=5;
  cacheService.onPartitionLost(new InternalPartitionLostEvent(partitionId,0,null));
  assertCachePartitionLostEventEventually(listener,partitionId);
}
