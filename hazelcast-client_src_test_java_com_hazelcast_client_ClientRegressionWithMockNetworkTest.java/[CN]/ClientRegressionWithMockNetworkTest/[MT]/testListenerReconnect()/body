{
  final HazelcastInstance instance1=hazelcastFactory.newHazelcastInstance();
  final HazelcastInstance client=hazelcastFactory.newHazelcastClient();
  final CountDownLatch latch=new CountDownLatch(2);
  final IMap<Object,Object> m=client.getMap("m");
  final String id=m.addEntryListener(new EntryAdapter(){
    public void entryAdded(    EntryEvent event){
      latch.countDown();
    }
    @Override public void entryUpdated(    EntryEvent event){
      latch.countDown();
    }
  }
,true);
  m.put("key1","value1");
  final HazelcastInstance instance2=hazelcastFactory.newHazelcastInstance();
  instance1.shutdown();
  final Thread thread=new Thread(){
    @Override public void run(){
      while (!isInterrupted()) {
        m.put("key2","value2");
        try {
          Thread.sleep(100);
        }
 catch (        InterruptedException ignored) {
        }
      }
    }
  }
;
  thread.start();
  assertOpenEventually(latch,10);
  thread.interrupt();
  assertTrue(m.removeEntryListener(id));
  assertFalse(m.removeEntryListener("foo"));
}
