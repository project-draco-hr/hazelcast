{
  try {
    ZipOutputStream out=new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(dest)));
    ZipFile zipFile=new ZipFile(src);
    Enumeration entries=zipFile.entries();
    String jarLocation=null;
    if (src.getName().endsWith("war"))     jarLocation="WEB-INF/lib/";
    while (entries.hasMoreElements()) {
      ZipEntry entry=(ZipEntry)entries.nextElement();
      log("entry name " + entry.getName());
      out.putNextEntry(new ZipEntry(entry.getName()));
      if (entry.isDirectory()) {
        continue;
      }
      String name=entry.getName();
      if (jarLocation == null) {
        if (name.endsWith(".jar")) {
          int slashIndex=name.lastIndexOf('/');
          if (slashIndex == -1) {
            jarLocation="";
          }
 else {
            jarLocation=name.substring(0,slashIndex) + "/";
          }
        }
      }
      InputStream in=zipFile.getInputStream(entry);
      if (name.endsWith(".war")) {
        modifyWar(in,out);
      }
 else       if (name.equals("WEB-INF/web.xml")) {
        readModifyWrite(in,out);
      }
 else       if (entry.getName().endsWith(".jsp")) {
        modifyJSP(in,out);
      }
 else {
        Util.copyStream(in,out);
      }
      in.close();
    }
    if (jarLocation == null)     jarLocation="";
    if (isAddHazellib()) {
      log("Jar Location " + jarLocation);
      ZipEntry hazelcastZip=new ZipEntry(jarLocation + "hazelcast.jar");
      out.putNextEntry(hazelcastZip);
      InputStream in=new FileInputStream("hazelcast.jar");
      Util.copyStream(in,out);
      in.close();
    }
    out.flush();
    out.close();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
