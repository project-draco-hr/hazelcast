{
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(2);
  HazelcastInstance local=factory.newHazelcastInstance();
  HazelcastInstance remote=factory.newHazelcastInstance();
  warmUpPartitions(local,remote);
  OperationService service=getNode(local).nodeEngine.getOperationService();
  Operation op=new TargetOperation();
  Address address=new Address(remote.getCluster().getLocalMember().getSocketAddress());
  Future f=service.createInvocationBuilder(null,op,address).invoke();
  sleepSeconds(1);
  remote.getLifecycleService().terminate();
  try {
    f.get();
    fail();
  }
 catch (  MemberLeftException expected) {
  }
}
