{
  final HazelcastInstance instance=Hazelcast.newHazelcastInstance(config);
  MemcachedClient client=getMemcacheClient(instance);
  final String prefix="testMemcacheWithIMap:";
  try {
    final IMap<String,Object> map=instance.getMap("hz_memcache_testMemcacheWithIMap");
    for (int i=0; i < 100; i++) {
      map.put(String.valueOf(i),String.valueOf(i));
    }
    for (int i=0; i < 100; i++) {
      assertEquals(String.valueOf(i),client.get(prefix + String.valueOf(i)));
      final OperationFuture<Boolean> future=client.set(prefix + String.valueOf(i),0,String.valueOf(i * 10));
      future.get();
    }
    for (int i=0; i < 100; i++) {
      final MemcacheEntry memcacheEntry=(MemcacheEntry)map.get(String.valueOf(i));
      final MemcacheEntry expected=new MemcacheEntry(prefix + String.valueOf(i),String.valueOf(i * 10).getBytes(),0);
      assertEquals(expected,memcacheEntry);
    }
    final OperationFuture<Boolean> future=client.delete(prefix);
    future.get();
    for (int i=0; i < 100; i++) {
      assertEquals(null,client.get(prefix + String.valueOf(i)));
    }
  }
  finally {
    client.shutdown();
  }
}
