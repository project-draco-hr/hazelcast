{
  int indexBefore=lsMembersBefore.indexOf(thisMember);
  int indexNow=lsMembers.indexOf(thisMember);
  for (int i=1; i < distance + 1; i++) {
    Member before=memberAt(lsMembersBefore,(indexBefore + i) % lsMembersBefore.size());
    Member now=memberAt(lsMembers,(indexNow + i) % lsMembers.size());
    if (before == null && now == null) {
    }
 else     if (before == null || now == null || !now.equals(before) || now.isSuperClient() || before.isSuperClient()) {
      return true;
    }
  }
  return false;
}
