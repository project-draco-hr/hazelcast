{
  TimeUnit timeUnit=TimeUnit.MILLISECONDS;
  TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory();
  HazelcastInstance[] instances=factory.newInstances(null,nodeCount);
  String mapName=randomMapName();
  List<ReplicatedMap> maps=createMapOnEachInstance(instances,mapName);
  ArrayList<Integer> keys=generateRandomIntegerList(keyCount);
  Thread[] threads=createThreads(threadCount,maps,keys,ttl,timeUnit,operationCount);
  for (  Thread thread : threads) {
    thread.start();
  }
  HazelcastInstance instance=null;
  if (causeMigration) {
    instance=factory.newHazelcastInstance();
  }
  for (  Thread thread : threads) {
    thread.join();
  }
  if (causeMigration) {
    ReplicatedMap<Object,Object> map=instance.getReplicatedMap(mapName);
    maps.add(map);
  }
  for (  ReplicatedMap map : maps) {
    assertSizeEventually(0,map,60);
  }
}
