{
  final Node node=instance.node;
  Address thisAddress=node.getThisAddress();
  InternalPartitionService partitionService=node.getPartitionService();
  InternalPartition[] partitions=partitionService.getPartitions();
  final HashSet<SerializableClientEndPoint> serializableClientEndPoints=new HashSet<SerializableClientEndPoint>();
  for (  Client client : instance.node.clientEngine.getClients()) {
    serializableClientEndPoints.add(new SerializableClientEndPoint(client));
  }
  memberState.setClients(serializableClientEndPoints);
  memberState.setAddress(thisAddress.getHost() + ":" + thisAddress.getPort());
  TimedMemberStateFactoryHelper.registerJMXBeans(instance,memberState);
  MemberPartitionStateImpl memberPartitionState=(MemberPartitionStateImpl)memberState.getMemberPartitionState();
  List<Integer> partitionList=memberPartitionState.getPartitions();
  for (  InternalPartition partition : partitions) {
    if (partition.isLocal()) {
      partitionList.add(partition.getPartitionId());
    }
  }
  memberPartitionState.setMigrationQueueSize(partitionService.getMigrationQueueSize());
  memberPartitionState.setMemberStateSafe(memberStateSafe);
  memberState.setLocalMemoryStats(getMemoryStats());
  TimedMemberStateFactoryHelper.createRuntimeProps(memberState);
  createMemState(memberState,services);
}
