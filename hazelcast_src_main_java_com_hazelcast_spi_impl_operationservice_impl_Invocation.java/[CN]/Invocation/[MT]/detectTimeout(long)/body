{
  if (pendingResponse != VOID) {
    return NO_TIMEOUT__RESPONSE_AVAILABLE;
  }
  long callTimeoutMillis=op.getCallTimeout();
  if (callTimeoutMillis <= 0 || callTimeoutMillis == Long.MAX_VALUE) {
    return NO_TIMEOUT__CALL_TIMEOUT_DISABLED;
  }
  long deadlineMillis=op.getInvocationTime() + callTimeoutMillis;
  if (deadlineMillis > nodeEngine.getClusterService().getClusterClock().getClusterTime()) {
    return NO_TIMEOUT__CALL_TIMEOUT_NOT_EXPIRED;
  }
  long lastHeartbeatMillis=this.lastHeartbeatMillis;
  long heartBeatExpirationTimeMillis=lastHeartbeatMillis == 0 ? op.getInvocationTime() + callTimeoutMillis + heartbeatTimeoutMillis : lastHeartbeatMillis + heartbeatTimeoutMillis;
  if (heartBeatExpirationTimeMillis > Clock.currentTimeMillis()) {
    return NO_TIMEOUT__HEARTBEAT_TIMEOUT_NOT_EXPIRED;
  }
  return TIMEOUT;
}
