{
  Address thisAddress=nodeEngine.getThisAddress();
  invTarget=getTarget();
  if (invTarget == null) {
    remote=false;
    if (nodeEngine.isActive()) {
      notify(new WrongTargetException(thisAddress,null,partitionId,replicaIndex,op.getClass().getName(),serviceName));
    }
 else {
      notify(new HazelcastInstanceNotActiveException());
    }
    return false;
  }
  invTargetMember=nodeEngine.getClusterService().getMember(invTarget);
  if (!isJoinOperation(op) && invTargetMember == null) {
    notify(new TargetNotMemberException(invTarget,partitionId,op.getClass().getName(),serviceName));
    return false;
  }
  if (op.getPartitionId() != partitionId) {
    notify(new IllegalStateException("Partition id of operation: " + op.getPartitionId() + " is not equal to the partition id of invocation: "+ partitionId));
    return false;
  }
  if (op.getReplicaIndex() != replicaIndex) {
    notify(new IllegalStateException("Replica index of operation: " + op.getReplicaIndex() + " is not equal to the replica index of invocation: "+ replicaIndex));
    return false;
  }
  remote=!thisAddress.equals(invTarget);
  return true;
}
