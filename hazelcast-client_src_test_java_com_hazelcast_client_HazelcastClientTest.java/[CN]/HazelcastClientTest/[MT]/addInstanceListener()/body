{
  final CountDownLatch destroyedLatch=new CountDownLatch(1);
  final CountDownLatch createdLatch=new CountDownLatch(1);
  final IMap<Integer,Integer> instance=getHazelcastClient().getMap("addDistributedObjectListener");
  DistributedObjectListener listener=new DistributedObjectListener(){
    public void instanceDestroyed(    DistributedObjectEvent event){
      assertEquals(DistributedObjectEvent.EventType.DESTROYED,event.getEventType());
      assertEquals(instance,event.getDistributedObject());
      destroyedLatch.countDown();
    }
    public void instanceCreated(    DistributedObjectEvent event){
      assertEquals(DistributedObjectEvent.EventType.CREATED,event.getEventType());
      IMap<Integer,Integer> map=(IMap<Integer,Integer>)event.getDistributedObject();
      assertEquals(instance.getName(),map.getName());
      createdLatch.countDown();
    }
  }
;
  getHazelcastClient().addDistributedObjectListener(listener);
  instance.put(1,1);
  assertEquals(1,instance.size());
  assertTrue(createdLatch.await(10,TimeUnit.SECONDS));
  instance.destroy();
  assertTrue(destroyedLatch.await(10,TimeUnit.SECONDS));
  getHazelcastClient().removeDistributedObjectListener(listener);
}
