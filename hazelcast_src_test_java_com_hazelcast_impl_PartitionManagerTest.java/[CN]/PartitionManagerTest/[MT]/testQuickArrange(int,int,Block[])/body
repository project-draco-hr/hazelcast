{
  LinkedList<MemberImpl> members=createMembers(NODE_COUNT);
  Address thisAddress=new Address("localhost",5701);
  PartitionManager partitionManager=init(BLOCK_COUNT,blocks,members,thisAddress);
  partitionManager.doQuickBlockRearrangement();
  Map<Address,Integer> counter=new HashMap<Address,Integer>();
  for (int i=0; i < BLOCK_COUNT; i++) {
    Integer count=counter.get(blocks[i].getOwner());
    count=(count == null) ? 0 : count;
    count++;
    counter.put(blocks[i].getOwner(),count);
  }
  int partitionsPerMember=BLOCK_COUNT / NODE_COUNT;
  for (  Address address : counter.keySet()) {
    int c=counter.get(address);
    assertTrue(c == partitionsPerMember || c == (partitionsPerMember + 1));
  }
  partitionManager.reArrangeBlocks();
  assertEquals(0,partitionManager.lsBlocksToMigrate.size());
}
