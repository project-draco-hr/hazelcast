{
  if (isValid()) {
    super.run();
    final ClusterServiceImpl clusterService=getService();
    final NodeEngineImpl nodeEngine=clusterService.getNodeEngine();
    final Operation[] postJoinOperations=nodeEngine.getPostJoinOperations();
    Collection<Future> calls=null;
    if (postJoinOperations != null && postJoinOperations.length > 0) {
      final PostJoinOperation localPJOp=new PostJoinOperation(postJoinOperations);
      final Collection<MemberImpl> members=clusterService.getMemberList();
      calls=new ArrayList<Future>(members.size());
      for (      MemberImpl member : members) {
        if (!member.localMember()) {
          Future f=nodeEngine.getOperationService().createInvocationBuilder(ClusterServiceImpl.SERVICE_NAME,localPJOp,member.getAddress()).setTryCount(10).setTryPauseMillis(100).build().invoke();
          calls.add(f);
        }
      }
    }
    if (postJoinOp != null) {
      postJoinOp.setNodeEngine(nodeEngine).setCallerAddress(getCallerAddress()).setConnection(getConnection());
      postJoinOp.setResponseHandler(ResponseHandlerFactory.createEmptyResponseHandler());
      nodeEngine.getOperationService().runOperation(postJoinOp);
    }
    if (calls != null) {
      for (      Future f : calls) {
        try {
          f.get(1,TimeUnit.SECONDS);
        }
 catch (        InterruptedException ignored) {
        }
catch (        TimeoutException ignored) {
        }
catch (        ExecutionException e) {
          final ILogger logger=nodeEngine.getLogger(FinalizeJoinOperation.class);
          logger.log(Level.FINEST,"Error while executing post-join operations -> " + e.getClass().getSimpleName() + "["+ e.getMessage()+ "]");
        }
      }
    }
  }
}
