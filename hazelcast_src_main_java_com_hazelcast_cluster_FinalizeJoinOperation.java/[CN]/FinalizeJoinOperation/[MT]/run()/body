{
  if (isValid()) {
    processMemberUpdate();
    final ClusterServiceImpl clusterService=getService();
    final NodeEngineImpl nodeEngine=clusterService.getNodeEngine();
    final Operation[] postJoinOperations=nodeEngine.getPostJoinOperations();
    final OperationService operationService=nodeEngine.getOperationService();
    Collection<Future> calls=null;
    if (postJoinOperations != null && postJoinOperations.length > 0) {
      final Collection<MemberImpl> members=clusterService.getMemberList();
      calls=new ArrayList<Future>(members.size());
      for (      MemberImpl member : members) {
        if (!member.localMember()) {
          PostJoinOperation operation=new PostJoinOperation(postJoinOperations);
          Future f=operationService.createInvocationBuilder(ClusterServiceImpl.SERVICE_NAME,operation,member.getAddress()).setTryCount(10).setTryPauseMillis(100).invoke();
          calls.add(f);
        }
      }
    }
    if (postJoinOp != null) {
      postJoinOp.setNodeEngine(nodeEngine);
      OperationAccessor.setCallerAddress(postJoinOp,getCallerAddress());
      OperationAccessor.setConnection(postJoinOp,getConnection());
      postJoinOp.setResponseHandler(ResponseHandlerFactory.createEmptyResponseHandler());
      operationService.runOperationOnCallingThread(postJoinOp);
    }
    if (calls != null) {
      FutureUtil.waitWithDeadline(calls,Math.min(calls.size(),FINALIZE_JOIN_MAX_TIMEOUT),TimeUnit.SECONDS,new FinalizeJoinExceptionHandler());
    }
  }
}
