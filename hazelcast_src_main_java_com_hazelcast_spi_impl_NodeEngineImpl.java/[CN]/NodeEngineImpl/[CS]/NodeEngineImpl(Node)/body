{
  this.node=node;
  this.loggingService=node.loggingService;
  this.serializationService=node.getSerializationService();
  this.logger=node.getLogger(NodeEngine.class.getName());
  ProbeLevel probeLevel=node.getGroupProperties().getEnum(PERFORMANCE_METRICS_LEVEL,ProbeLevel.class);
  this.metricsRegistry=new MetricsRegistryImpl(node.getLogger(MetricsRegistryImpl.class),probeLevel);
  this.proxyService=new ProxyServiceImpl(this);
  this.serviceManager=new ServiceManagerImpl(this);
  this.executionService=new ExecutionServiceImpl(this);
  this.operationService=new OperationServiceImpl(this);
  this.eventService=new EventServiceImpl(this);
  this.waitNotifyService=new WaitNotifyServiceImpl(this);
  this.transactionManagerService=new TransactionManagerServiceImpl(this);
  this.wanReplicationService=node.getNodeExtension().createService(WanReplicationService.class);
  this.packetDispatcher=new PacketDispatcherImpl(logger,operationService,eventService,wanReplicationService,new ConnectionManagerPacketHandler());
  this.quorumService=new QuorumServiceImpl(this);
  this.performanceMonitor=new PerformanceMonitor(node.hazelcastInstance,loggingService.getLogger(PerformanceMonitor.class),node.getHazelcastThreadGroup(),node.groupProperties);
}
