{
  final Collection<Operation> postJoinOps=new LinkedList<Operation>();
  Operation eventPostJoinOp=eventService.getPostJoinOperation();
  if (eventPostJoinOp != null) {
    postJoinOps.add(eventPostJoinOp);
  }
  Operation proxyPostJoinOp=proxyService.getPostJoinOperation();
  if (proxyPostJoinOp != null) {
    postJoinOps.add(proxyPostJoinOp);
  }
  Collection<PostJoinAwareService> services=getServices(PostJoinAwareService.class);
  for (  PostJoinAwareService service : services) {
    final Operation pjOp=service.getPostJoinOperation();
    if (pjOp != null) {
      if (pjOp instanceof PartitionAwareOperation) {
        logger.severe("Post-join operations cannot implement PartitionAwareOperation!" + " Service: " + service + ", Operation: "+ pjOp);
        continue;
      }
      postJoinOps.add(pjOp);
    }
  }
  return postJoinOps.isEmpty() ? null : postJoinOps.toArray(new Operation[postJoinOps.size()]);
}
