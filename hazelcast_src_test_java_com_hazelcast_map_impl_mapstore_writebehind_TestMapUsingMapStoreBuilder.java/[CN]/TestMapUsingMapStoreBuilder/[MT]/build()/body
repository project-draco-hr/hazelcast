{
  if (backupCount != 0 && backupCount > nodeCount - 1) {
    throw new IllegalArgumentException("backupCount > nodeCount - 1");
  }
  final MapStoreConfig mapStoreConfig=new MapStoreConfig();
  mapStoreConfig.setImplementation(mapStore).setWriteDelaySeconds(writeDelaySeconds).setWriteBatchSize(writeBatchSize).setWriteCoalescing(writeCoalescing);
  final Config config=new Config();
  config.getMapConfig(mapName).setBackupCount(backupCount).setMapStoreConfig(mapStoreConfig).setInMemoryFormat(inMemoryFormat);
  if (writeBehindQueueCapacity > 0) {
    config.setProperty(GroupProperty.MAP_WRITE_BEHIND_QUEUE_CAPACITY,String.valueOf(writeBehindQueueCapacity));
  }
  config.setProperty(GroupProperty.PARTITION_COUNT,String.valueOf(partitionCount));
  if (backupDelaySeconds > 0) {
    config.setProperty(GroupProperty.MAP_REPLICA_SCHEDULED_TASK_DELAY_SECONDS,String.valueOf(backupDelaySeconds));
  }
  nodes=new HazelcastInstance[nodeCount];
  for (int i=0; i < nodeCount; i++) {
    nodes[i]=instanceFactory.newHazelcastInstance(config);
  }
  return nodes[0].getMap(mapName);
}
