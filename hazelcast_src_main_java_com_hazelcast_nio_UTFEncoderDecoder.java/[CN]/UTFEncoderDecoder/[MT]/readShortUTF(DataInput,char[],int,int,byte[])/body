{
  final int utflen=in.readShort();
  int c;
  int char2;
  int char3;
  int count=0;
  int charArrCount=beginIndex;
  while (count < utflen) {
    c=buffered(buffer,count++,utflen,in) & 0xff;
switch (c >> 4) {
case 0:
case 1:
case 2:
case 3:
case 4:
case 5:
case 6:
case 7:
      data[charArrCount++]=(char)c;
    break;
case 12:
case 13:
  if (count + 1 > utflen) {
    throw new UTFDataFormatException("malformed input: partial character at end");
  }
char2=buffered(buffer,count++,utflen,in);
if ((char2 & 0xC0) != 0x80) {
throw new UTFDataFormatException("malformed input around byte " + count);
}
data[charArrCount++]=(char)(((c & 0x1F) << 6) | (char2 & 0x3F));
break;
case 14:
if (count + 2 > utflen) {
throw new UTFDataFormatException("malformed input: partial character at end");
}
char2=buffered(buffer,count++,utflen,in);
char3=buffered(buffer,count++,utflen,in);
if (((char2 & 0xC0) != 0x80) || ((char3 & 0xC0) != 0x80)) {
throw new UTFDataFormatException("malformed input around byte " + (count - 1));
}
data[charArrCount++]=(char)(((c & 0x0F) << 12) | ((char2 & 0x3F) << 6) | ((char3 & 0x3F) << 0));
break;
default :
throw new UTFDataFormatException("malformed input around byte " + count);
}
}
}
