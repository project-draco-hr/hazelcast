{
  long currentBacklogInterval=backlogInterval;
  final Thread thread=Thread.currentThread();
  int k=0;
  while (!thread.isInterrupted() && isLive()) {
    long sleep=100;
    final WorkerTask task=queue.peek();
    if (task != null) {
      if (task.creationTime + currentBacklogInterval < Clock.currentTimeMillis()) {
        addWorkerIfUnderMaxSize();
      }
    }
    try {
      Thread.sleep(sleep);
      if (k++ % 300 == 0) {
        System.err.println("DEBUG: BLOCKING -> Current operation thread count-> " + getActiveThreadCount());
      }
    }
 catch (    InterruptedException e) {
      return;
    }
  }
}
