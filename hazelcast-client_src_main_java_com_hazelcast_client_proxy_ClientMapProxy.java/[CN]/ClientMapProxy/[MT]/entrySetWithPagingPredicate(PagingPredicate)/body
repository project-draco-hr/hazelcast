{
  pagingPredicate.setIterationType(IterationType.ENTRY);
  ClientMessage request=MapEntriesWithPagingPredicateCodec.encodeRequest(name,toData(pagingPredicate));
  ClientMessage response=invoke(request);
  MapEntriesWithPagingPredicateCodec.ResponseParameters resultParameters=MapEntriesWithPagingPredicateCodec.decodeResponse(response);
  ArrayList<Map.Entry> resultList=new ArrayList<Map.Entry>();
  for (  Entry<Data,Data> entry : resultParameters.entrySet) {
    K key=toObject(entry.getKey());
    V value=toObject(entry.getValue());
    resultList.add(new AbstractMap.SimpleEntry<K,V>(key,value));
  }
  return (Set)getSortedQueryResultSet(resultList,pagingPredicate,IterationType.ENTRY);
}
