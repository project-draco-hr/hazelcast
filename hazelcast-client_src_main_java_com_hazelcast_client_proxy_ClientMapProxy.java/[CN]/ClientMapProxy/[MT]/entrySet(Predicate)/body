{
  if (predicate instanceof PagingPredicate) {
    return entrySetWithPagingPredicate((PagingPredicate)predicate);
  }
  ClientMessage request=MapEntriesWithPredicateCodec.encodeRequest(name,toData(predicate));
  ClientMessage response=invoke(request);
  MapEntriesWithPredicateCodec.ResponseParameters resultParameters=MapEntriesWithPredicateCodec.decodeResponse(response);
  InflatableSet.Builder<Entry<K,V>> setBuilder=InflatableSet.newBuilder(resultParameters.response.size());
  InternalSerializationService serializationService=((InternalSerializationService)getContext().getSerializationService());
  for (  Entry<Data,Data> row : resultParameters.response) {
    LazyMapEntry entry=new LazyMapEntry(row.getKey(),row.getValue(),serializationService);
    setBuilder.add(entry);
  }
  return setBuilder.build();
}
