{
  Config config=new Config();
  config.setProperty(GroupProperty.OPERATION_CALL_TIMEOUT_MILLIS.getName(),"1000");
  HazelcastInstance instance=createHazelcastInstance(config);
  final IQueue<Thread> queue=instance.getQueue(randomName());
  final AtomicBoolean interrupted=new AtomicBoolean();
  final CountDownLatch latch=new CountDownLatch(1);
  Thread thread=new Thread(){
    @Override public void run(){
      try {
        latch.countDown();
        queue.take();
      }
 catch (      InterruptedException e) {
        interrupted.set(true);
      }
    }
  }
;
  thread.start();
  latch.await(10,SECONDS);
  thread.interrupt();
  thread.join(5000);
  assertTrue("Expected queue.take() to be interrupted, but interrupted state is: " + interrupted,interrupted.get());
}
