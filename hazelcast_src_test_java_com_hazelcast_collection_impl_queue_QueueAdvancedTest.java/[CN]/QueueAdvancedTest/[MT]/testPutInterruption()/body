{
  Config config=new Config();
  config.setProperty(GroupProperty.OPERATION_CALL_TIMEOUT_MILLIS,"1000");
  config.getQueueConfig("default").setMaxSize(1);
  HazelcastInstance instance=createHazelcastInstance(config);
  final IQueue<String> queue=instance.getQueue(randomName());
  final AtomicBoolean interrupted=new AtomicBoolean();
  assertTrue("Expected queue.offer() to succeed",queue.offer("item"));
  final CountDownLatch latch=new CountDownLatch(1);
  Thread thread=new Thread(){
    @Override public void run(){
      try {
        latch.countDown();
        queue.put("item");
      }
 catch (      InterruptedException e) {
        interrupted.set(true);
      }
    }
  }
;
  thread.start();
  latch.await(10,SECONDS);
  thread.interrupt();
  thread.join(5000);
  assertTrue("Expected queue.put() to be interrupted, but interrupted state is: " + interrupted,interrupted.get());
}
