{
  for (int k=0; k < ringbuffer.capacity(); k++) {
    topic.publish("old");
  }
  long tail=ringbuffer.tailSequence();
  long head=ringbuffer.headSequence();
  try {
    topic.publish("new");
    fail();
  }
 catch (  TopicOverloadException expected) {
    EmptyStatement.ignore(expected);
  }
  assertEquals(tail,ringbuffer.tailSequence());
  assertEquals(head,ringbuffer.headSequence());
}
