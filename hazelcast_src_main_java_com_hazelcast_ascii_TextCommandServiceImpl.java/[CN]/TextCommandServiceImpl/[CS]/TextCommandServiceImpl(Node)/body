{
  this.node=node;
  this.hazelcast=node.hazelcastInstance;
  this.logger=node.getLogger(this.getClass().getName());
  textCommandProcessors[GET.getValue()]=new GetCommandProcessor(this,true);
  textCommandProcessors[PARTIAL_GET.getValue()]=new GetCommandProcessor(this,false);
  textCommandProcessors[SET.getValue()]=new SetCommandProcessor(this);
  textCommandProcessors[APPEND.getValue()]=new SetCommandProcessor(this);
  textCommandProcessors[PREPEND.getValue()]=new SetCommandProcessor(this);
  textCommandProcessors[ADD.getValue()]=new SetCommandProcessor(this);
  textCommandProcessors[REPLACE.getValue()]=new SetCommandProcessor(this);
  textCommandProcessors[GET_END.getValue()]=new NoOpCommandProcessor(this);
  textCommandProcessors[DELETE.getValue()]=new DeleteCommandProcessor(this);
  textCommandProcessors[QUIT.getValue()]=new SimpleCommandProcessor(this);
  textCommandProcessors[STATS.getValue()]=new StatsCommandProcessor(this);
  textCommandProcessors[UNKNOWN.getValue()]=new ErrorCommandProcessor(this);
  textCommandProcessors[VERSION.getValue()]=new VersionCommandProcessor(this);
  textCommandProcessors[TOUCH.getValue()]=new TouchCommandProcessor(this);
  textCommandProcessors[INCREMENT.getValue()]=new IncrementCommandProcessor(this);
  textCommandProcessors[DECREMENT.getValue()]=new IncrementCommandProcessor(this);
  textCommandProcessors[ERROR_CLIENT.getValue()]=new ErrorCommandProcessor(this);
  textCommandProcessors[ERROR_SERVER.getValue()]=new ErrorCommandProcessor(this);
  textCommandProcessors[HTTP_GET.getValue()]=new HttpGetCommandProcessor(this);
  textCommandProcessors[HTTP_POST.getValue()]=new HttpPostCommandProcessor(this);
  textCommandProcessors[HTTP_PUT.getValue()]=new HttpPostCommandProcessor(this);
  textCommandProcessors[HTTP_DELETE.getValue()]=new HttpDeleteCommandProcessor(this);
  textCommandProcessors[NO_OP.getValue()]=new NoOpCommandProcessor(this);
}
