{
  final String cacheName=randomMapName();
  CacheManager cacheManager=clientProvider.getCacheManager();
  assertNotNull(cacheManager);
  assertNull(cacheManager.getCache(cacheName));
  CompleteConfiguration<Integer,Integer> config=new CacheConfig<Integer,Integer>().setTypes(Integer.class,Integer.class).setReadThrough(true).setCacheLoaderFactory(FactoryBuilder.factoryOf(new GetAllAsyncCacheLoader()));
  Cache<Integer,Integer> cache=cacheManager.createCache(cacheName,config);
  assertNotNull(cache);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      CacheManager cm1=serverProvider1.getCacheManager();
      assertNotNull(cm1.getCache(cacheName,Integer.class,Integer.class));
      CacheManager cm2=serverProvider2.getCacheManager();
      assertNotNull(cm2.getCache(cacheName,Integer.class,Integer.class));
    }
  }
);
  Set<Integer> keys=new HashSet<Integer>();
  for (int i=0; i < 150; i++) {
    keys.add(i);
  }
  Map<Integer,Integer> loaded=cache.getAll(keys);
  assertEquals(100,loaded.size());
}
