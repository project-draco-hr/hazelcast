{
  Config config=getConfig();
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(2);
  HazelcastInstance instance1=nodeFactory.newHazelcastInstance(config);
  HazelcastInstance instance2=nodeFactory.newHazelcastInstance(config);
  IMap<String,Employee> map=instance1.getMap("employees");
  map.addIndex("name",false);
  map.addIndex("city",false);
  map.addIndex("age",true);
  map.addIndex("active",false);
  for (int i=0; i < 5000; i++) {
    Employee employee=new Employee(i,"name" + i % 100,"city" + (i % 100),i % 60,((i & 1) == 1),(double)i);
    map.put(String.valueOf(i),employee);
  }
  assertEquals(2,instance1.getCluster().getMembers().size());
  assertEquals(2,instance2.getCluster().getMembers().size());
  map=instance2.getMap("employees");
  map.addIndex("name",false);
  map.addIndex("city",false);
  map.addIndex("age",true);
  map.addIndex("active",false);
  Collection<Employee> entries=map.values(new SqlPredicate("name='name3' and city='city3' and age > 2"));
  assertEquals(50,entries.size());
  for (  Employee employee : entries) {
    assertEquals("name3",employee.getName());
    assertEquals("city3",employee.getCity());
  }
  entries=map.values(new SqlPredicate("name LIKE '%name3' and city like '%city3' and age > 2"));
  assertEquals(50,entries.size());
  for (  Employee employee : entries) {
    assertEquals("name3",employee.getName());
    assertEquals("city3",employee.getCity());
    assertTrue(employee.getAge() > 2);
  }
  entries=map.values(new SqlPredicate("name LIKE '%name3%' and city like '%city30%'"));
  assertEquals(50,entries.size());
  for (  Employee employee : entries) {
    assertTrue(employee.getName().startsWith("name3"));
    assertTrue(employee.getCity().startsWith("city3"));
  }
}
