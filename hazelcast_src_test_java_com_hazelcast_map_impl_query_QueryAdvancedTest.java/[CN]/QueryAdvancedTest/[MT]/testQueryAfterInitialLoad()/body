{
  final int size=100;
  String name="default";
  Config config=getConfig();
  MapStoreConfig mapStoreConfig=new MapStoreConfig();
  mapStoreConfig.setEnabled(true);
  mapStoreConfig.setImplementation(new MapStoreAdapter<Integer,Employee>(){
    @Override public Map<Integer,Employee> loadAll(    Collection<Integer> keys){
      Map<Integer,Employee> map=new HashMap<Integer,Employee>();
      for (      Integer key : keys) {
        Employee emp=new Employee();
        emp.setActive(true);
        map.put(key,emp);
      }
      return map;
    }
    @Override public Set<Integer> loadAllKeys(){
      Set<Integer> set=new HashSet<Integer>();
      for (int i=0; i < size; i++) {
        set.add(i);
      }
      return set;
    }
  }
);
  config.getMapConfig(name).setMapStoreConfig(mapStoreConfig);
  HazelcastInstance instance=createHazelcastInstance(config);
  final IMap map=instance.getMap(name);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      Collection values=map.values(new SqlPredicate("active = true"));
      assertEquals(size,values.size());
    }
  }
);
}
