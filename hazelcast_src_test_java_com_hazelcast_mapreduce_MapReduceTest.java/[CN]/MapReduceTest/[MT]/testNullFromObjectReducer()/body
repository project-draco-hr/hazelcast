{
  TestHazelcastInstanceFactory nodeFactory=createHazelcastInstanceFactory(3);
  HazelcastInstance h1=nodeFactory.newHazelcastInstance();
  HazelcastInstance h2=nodeFactory.newHazelcastInstance();
  HazelcastInstance h3=nodeFactory.newHazelcastInstance();
  try {
    assertClusterSizeEventually(3,h1);
    assertClusterSizeEventually(3,h2);
    assertClusterSizeEventually(3,h3);
    IMap<Integer,Integer> m1=h1.getMap(MAP_NAME);
    for (int i=0; i < 100; i++) {
      m1.put(i,i);
    }
    JobTracker jobTracker=h1.getJobTracker("default");
    Job<Integer,Integer> job=jobTracker.newJob(KeyValueSource.fromMap(m1));
    JobCompletableFuture<Map<String,BigInteger>> future=job.chunkSize(10).mapper(new GroupingTestMapper()).combiner(new ObjectCombinerFactory()).reducer(new NullReducerFactory()).submit();
    Map<String,BigInteger> map=future.get();
    assertEquals(0,map.size());
  }
  finally {
    tripTerminate(h1,h2,h3);
  }
}
