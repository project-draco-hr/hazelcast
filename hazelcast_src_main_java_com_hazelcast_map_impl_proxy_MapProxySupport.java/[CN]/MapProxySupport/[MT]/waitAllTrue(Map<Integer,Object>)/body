{
  Iterator<Entry<Integer,Object>> iterator=results.entrySet().iterator();
  boolean isFinished=false;
  final Set<Integer> retrySet=new HashSet<Integer>();
  while (!isFinished) {
    while (iterator.hasNext()) {
      final Entry<Integer,Object> entry=iterator.next();
      if (Boolean.TRUE.equals(entry.getValue())) {
        iterator.remove();
      }
 else {
        retrySet.add(entry.getKey());
      }
    }
    if (retrySet.size() > 0) {
      results=retryPartitions(retrySet);
      iterator=results.entrySet().iterator();
      final int oneSecond=1000;
      Thread.sleep(oneSecond);
      retrySet.clear();
    }
 else {
      isFinished=true;
    }
  }
}
