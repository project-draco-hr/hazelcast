{
  int initialSize=(int)ceil(putAllInitialSizeFactor * mapSize / partitionCount);
  MapEntries[] entriesPerPartition=new MapEntries[partitionCount];
  for (  Entry entry : map.entrySet()) {
    checkNotNull(entry.getKey(),NULL_KEY_IS_NOT_ALLOWED);
    checkNotNull(entry.getValue(),NULL_VALUE_IS_NOT_ALLOWED);
    Data keyData=toData(entry.getKey(),partitionStrategy);
    int partitionId=partitionService.getPartitionId(keyData);
    MapEntries entries=entriesPerPartition[partitionId];
    if (entries == null) {
      entries=new MapEntries(initialSize);
      entriesPerPartition[partitionId]=entries;
    }
    entries.add(keyData,toData(entry.getValue()));
  }
  for (int partitionId=0; partitionId < partitionCount; partitionId++) {
    MapEntries entries=entriesPerPartition[partitionId];
    if (entries != null) {
      Future future=createPutAllOperationFuture(name,entries,partitionId);
      futures.add(future);
    }
  }
}
