{
  if (keys == null || keys.isEmpty()) {
    return Collections.emptyMap();
  }
  Map<Object,Object> result=new HashMap<Object,Object>();
  if (nearCache != null) {
    getFromNearCache(result,keys);
  }
  if (keys.isEmpty()) {
    return result;
  }
  Collection<Integer> partitions=getPartitionsForKeys(keys);
  Map<Integer,Object> responses;
  try {
    responses=operationService.invokeOnPartitions(SERVICE_NAME,new MapGetAllOperationFactory(name,keys),partitions);
    for (    Object response : responses.values()) {
      Set<Map.Entry<Data,Data>> entries=((MapEntrySet)toObject(response)).getEntrySet();
      for (      Entry<Data,Data> entry : entries) {
        result.put(toObject(entry.getKey()),toObject(entry.getValue()));
        if (nearCache != null) {
          if (notOwnerPartitionForKey(entry.getKey()) || cacheKeyAnyway()) {
            putNearCache(entry.getKey(),entry.getValue());
          }
        }
      }
    }
  }
 catch (  Exception e) {
    throw ExceptionUtil.rethrow(e);
  }
  return result;
}
