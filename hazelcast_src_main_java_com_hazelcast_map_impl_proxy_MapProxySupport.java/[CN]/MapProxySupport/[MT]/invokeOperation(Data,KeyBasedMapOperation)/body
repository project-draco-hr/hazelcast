{
  int partitionId=partitionService.getPartitionId(key);
  operation.setThreadId(ThreadUtil.getThreadId());
  try {
    Object result;
    if (statisticsEnabled) {
      long time=System.currentTimeMillis();
      Future f=operationService.createInvocationBuilder(SERVICE_NAME,operation,partitionId).setResultDeserialized(false).invoke();
      result=f.get();
      if (operation instanceof BasePutOperation) {
        localMapStats.incrementPuts(System.currentTimeMillis() - time);
      }
 else       if (operation instanceof BaseRemoveOperation) {
        localMapStats.incrementRemoves(System.currentTimeMillis() - time);
      }
 else       if (operation instanceof GetOperation) {
        localMapStats.incrementGets(System.currentTimeMillis() - time);
      }
    }
 else {
      Future f=operationService.createInvocationBuilder(SERVICE_NAME,operation,partitionId).setResultDeserialized(false).invoke();
      result=f.get();
    }
    return result;
  }
 catch (  Throwable t) {
    throw ExceptionUtil.rethrow(t);
  }
}
