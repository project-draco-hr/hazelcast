{
  Runtime.getRuntime().addShutdownHook(new Thread(){
    public void run(){
      log("Shutting down " + nodes.size());
      while (nodes.size() > 0) {
        removeNode();
      }
    }
  }
);
  log("Min node size: " + minNodeSize);
  log("Max node size: " + maxNodeSize);
  for (int i=0; i < minNodeSize; i++) {
    addNode();
  }
  while (!Thread.currentThread().isInterrupted()) {
    if (nodes.size() >= maxNodeSize) {
      removeNode();
    }
 else     if (nodes.size() < minNodeSize) {
      addNode();
    }
 else {
      int action=random(3);
switch (action) {
case 0:
        removeNode();
      break;
case 1:
    addNode();
  break;
case 2:
restartNode();
break;
default :
}
}
try {
int nextSeconds=random(nextActionMin,nextActionMax);
log("Next Action after " + nextSeconds + " seconds.");
log("members:" + nodes.size() + ", starts: "+ starts+ ", stops:"+ stops+ ", restart:"+ restarts);
Thread.sleep(nextSeconds * 1000);
}
 catch (InterruptedException e) {
break;
}
}
}
