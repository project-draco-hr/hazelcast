{
  final int maxBackups=node.getClusterService().getSize() - 1;
  final int syncBackupCount=backupAwareOp.getSyncBackupCount() > 0 ? Math.min(maxBackups,backupAwareOp.getSyncBackupCount()) : 0;
  final int asyncBackupCount=(backupAwareOp.getAsyncBackupCount() > 0 && maxBackups > syncBackupCount) ? Math.min(maxBackups - syncBackupCount,backupAwareOp.getAsyncBackupCount()) : 0;
  Collection<Future> syncBackups=null;
  Collection<Future> asyncBackups=null;
  final Operation op=(Operation)backupAwareOp;
  final boolean returnsResponse=op.returnsResponse();
  final Operation backupOp;
  Operation backupResponse=null;
  if ((syncBackupCount + asyncBackupCount > 0) && (backupOp=backupAwareOp.getBackupOperation()) != null) {
    final String serviceName=op.getServiceName();
    final int partitionId=op.getPartitionId();
    final PartitionInfo partitionInfo=nodeEngine.getPartitionService().getPartitionInfo(partitionId);
    if (syncBackupCount > 0) {
      syncBackups=new ArrayList<Future>(syncBackupCount);
      for (int replicaIndex=1; replicaIndex <= syncBackupCount; replicaIndex++) {
        final Address target=partitionInfo.getReplicaAddress(replicaIndex);
        if (target != null) {
          if (target.equals(node.getThisAddress())) {
            throw new IllegalStateException("Normally shouldn't happen!!");
          }
 else {
            if (op.returnsResponse() && target.equals(op.getCaller())) {
              backupOp.setServiceName(serviceName).setReplicaIndex(replicaIndex).setPartitionId(partitionId);
              backupResponse=backupOp;
            }
 else {
              final Future f=createInvocationBuilder(serviceName,backupOp,partitionId).setReplicaIndex(replicaIndex).setTryCount(20).build().invoke();
              if (returnsResponse) {
                syncBackups.add(f);
              }
            }
          }
        }
      }
    }
    if (asyncBackupCount > 0) {
      asyncBackups=new ArrayList<Future>(asyncBackupCount);
      for (int replicaIndex=syncBackupCount + 1; replicaIndex <= asyncBackupCount; replicaIndex++) {
        final Address target=partitionInfo.getReplicaAddress(replicaIndex);
        if (target != null) {
          if (target.equals(node.getThisAddress())) {
            throw new IllegalStateException("Normally shouldn't happen!!");
          }
 else {
            final Future f=createInvocationBuilder(serviceName,backupOp,partitionId).setReplicaIndex(replicaIndex).setTryCount(10).build().invoke();
            if (returnsResponse) {
              asyncBackups.add(f);
            }
          }
        }
      }
    }
  }
  final Object response=op.returnsResponse() ? (backupResponse == null ? op.getResponse() : new MultiResponse(nodeEngine.getSerializationService(),backupResponse,op.getResponse())) : null;
  waitFutureResponses(syncBackups);
  sendResponse(op,response);
  waitFutureResponses(asyncBackups);
}
