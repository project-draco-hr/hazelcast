{
  if (!(op instanceof BackupOperation)) {
    throw new IllegalArgumentException("Op should be BackupOperation!");
  }
  op.setServiceName(serviceName);
  final int retryCount=timeoutSeconds * 2;
  backupCount=Math.min(node.getClusterService().getSize() - 1,backupCount);
  if (backupCount > 0) {
    final List<BackupFuture> backupFutures=new ArrayList<BackupFuture>(backupCount);
    PartitionInfo partitionInfo=nodeEngine.getPartitionService().getPartitionInfo(partitionId);
    for (int i=offset; i < backupCount; i++) {
      int replicaIndex=i + 1;
      Address replicaTarget=partitionInfo.getReplicaAddress(replicaIndex);
      if (replicaTarget != null) {
        if (replicaTarget.equals(node.getThisAddress())) {
          throw new IllegalStateException("Normally shouldn't happen!!");
        }
 else {
          final Future future=createInvocationBuilder(serviceName,op,partitionId).setReplicaIndex(replicaIndex).build().invoke();
          backupFutures.add(new BackupFuture(future,partitionId,replicaIndex,retryCount));
        }
      }
    }
    waitBackupResponses(backupFutures);
  }
}
