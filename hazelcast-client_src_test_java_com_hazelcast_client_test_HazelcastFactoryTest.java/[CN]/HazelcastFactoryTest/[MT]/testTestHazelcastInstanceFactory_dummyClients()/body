{
  TestHazelcastFactory instanceFactory=new TestHazelcastFactory();
  final HazelcastInstance instance1=instanceFactory.newHazelcastInstance();
  final HazelcastInstance instance2=instanceFactory.newHazelcastInstance();
  final HazelcastInstance instance3=instanceFactory.newHazelcastInstance();
  ClientConfig clientConfig=new ClientConfig();
  clientConfig.getNetworkConfig().setSmartRouting(false);
  final HazelcastInstance client1=instanceFactory.newHazelcastClient(clientConfig);
  final HazelcastInstance client2=instanceFactory.newHazelcastClient(clientConfig);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      assertEquals(3,instance1.getCluster().getMembers().size());
      assertEquals(3,instance2.getCluster().getMembers().size());
      assertEquals(3,instance3.getCluster().getMembers().size());
    }
  }
);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      touchRandomNode(client1);
      touchRandomNode(client2);
      int actual=instance1.getClientService().getConnectedClients().size() + instance2.getClientService().getConnectedClients().size() + instance3.getClientService().getConnectedClients().size();
      assertEquals(2,actual);
    }
  }
);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      assertEquals(3,client1.getCluster().getMembers().size());
      assertEquals(3,client1.getCluster().getMembers().size());
    }
  }
);
  instanceFactory.terminateAll();
}
