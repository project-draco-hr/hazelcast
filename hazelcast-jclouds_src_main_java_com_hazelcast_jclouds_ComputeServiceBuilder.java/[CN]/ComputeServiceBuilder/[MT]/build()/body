{
  final String cloudProvider=getOrNull(JCloudsProperties.PROVIDER);
  final String identity=getOrNull(JCloudsProperties.IDENTITY);
  String credential=getOrNull(JCloudsProperties.CREDENTIAL);
  final String credentialPath=getOrNull(JCloudsProperties.CREDENTIAL_PATH);
  checkNotNull(cloudProvider,"Cloud provider is not set");
  checkNotNull(identity,"Cloud provider identity is not set");
  if (credential != null && credentialPath != null) {
    throw new UnsupportedOperationException("Both credential and credentialPath are set. Use only one method.");
  }
  if (credentialPath != null) {
    credential=getCredentialFromFile(credential,credentialPath);
  }
  if (LOGGER.isFinestEnabled()) {
    LOGGER.finest("Using CLOUD_PROVIDER: " + cloudProvider);
  }
  ContextBuilder contextBuilder=newContextBuilder(cloudProvider);
  Properties jcloudsProperties=buildRegionZonesConfig();
  buildTagConfig();
  buildNodeFilter();
  computeService=contextBuilder.overrides(jcloudsProperties).credentials(identity,credential).buildView(ComputeServiceContext.class).getComputeService();
  return computeService;
}
