{
  final AtomicInteger counter=new AtomicInteger(0);
  final WriteBehindQueue<DelayedEntry> queue1=createBoundedWBQ(counter);
  final WriteBehindQueue<DelayedEntry> queue2=createBoundedWBQ(counter);
  final WriteBehindQueue<DelayedEntry> queue3=createBoundedWBQ(counter);
  final WriteBehindQueue<DelayedEntry> queue4=createBoundedWBQ(counter);
  addEnd(10,queue1);
  addEnd(500,queue2);
  addEnd(400,queue3);
  addEnd(91,queue4);
}
