{
  response=new MapEntrySet();
  QueryEntry queryEntry;
  RecordStore recordStore=mapService.getRecordStore(getPartitionId(),name);
  Map<Data,Record> records=recordStore.getRecords();
  for (  Map.Entry<Data,Record> recordEntry : records.entrySet()) {
    Data dataKey=recordEntry.getKey();
    Record record=recordEntry.getValue();
    Object key=mapService.toObject(record.getKey());
    Object value=mapService.toObject(record.getValue());
    queryEntry=new QueryEntry(getNodeEngine().getSerializationService(),dataKey,key,value);
    Object result;
    if (predicate.apply(queryEntry)) {
      Map.Entry mapEntry=new AbstractMap.SimpleEntry(key,value);
      result=entryProcessor.process(mapEntry);
    }
 else     continue;
    if (result != null) {
      response.add(new AbstractMap.SimpleImmutableEntry<Data,Data>(dataKey,mapService.toData(result)));
    }
    if (queryEntry.getValue() == null) {
      recordStore.remove(dataKey);
    }
 else {
      recordStore.put(new AbstractMap.SimpleImmutableEntry<Data,Object>(dataKey,queryEntry.getValue()));
    }
  }
}
