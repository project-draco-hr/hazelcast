{
  final Thread t=new Thread(node.threadGroup,r,namePrefix + threadNumber.getAndIncrement(),0){
    public void run(){
      ThreadContext.get().setCurrentInstance(node.hazelcastInstance);
      try {
        super.run();
      }
 catch (      OutOfMemoryError e) {
        OutOfMemoryErrorDispatcher.onOutOfMemory(e);
      }
 finally {
        try {
          ThreadContext.shutdown(this);
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
      }
    }
  }
;
  t.setContextClassLoader(classLoader);
  if (t.isDaemon()) {
    t.setDaemon(false);
  }
  if (t.getPriority() != Thread.NORM_PRIORITY) {
    t.setPriority(Thread.NORM_PRIORITY);
  }
  return t;
}
