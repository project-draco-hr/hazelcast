{
  long usedMemoryInit=getUsedMemoryAsMB();
  Config config=new Config();
  MapConfig mapConfig=config.getMapConfig("default");
  mapConfig.setTimeToLiveSeconds(15);
  final TestHazelcastInstanceFactory factory=createHazelcastInstanceFactory(4);
  final HazelcastInstance[] instances=factory.newInstances(config);
  IMap map1=instances[0].getMap("default");
  final int size=10000;
  for (int i=0; i < size; i++) {
    map1.put(i,new byte[10000]);
  }
  long usedMemoryStart=getUsedMemoryAsMB();
  assertTrue("UsedMemoryStart: " + usedMemoryStart,usedMemoryStart > 200);
  final ExecutorService es=Executors.newFixedThreadPool(4);
  final CountDownLatch latch=new CountDownLatch(4);
  for (int a=0; a < 4; a++) {
    final int t=a;
    es.execute(new Runnable(){
      public void run(){
        for (int i=0; i < size; i++) {
          instances[t].getMap("default").get(i);
        }
        latch.countDown();
      }
    }
);
  }
  assertTrue(latch.await(20,TimeUnit.SECONDS));
  es.shutdown();
  assertTrue(es.awaitTermination(5,TimeUnit.SECONDS));
  waitForGC(25 + usedMemoryInit,200);
}
