{
  final long tailSequence=in.readLong();
  final long headSequence=in.readLong();
  final int capacity=in.readInt();
  final long ttlMs=in.readLong();
  inMemoryFormat=values()[in.readInt()];
  ringbuffer=new ArrayRingbuffer(capacity);
  ringbuffer.setTailSequence(tailSequence);
  ringbuffer.setHeadSequence(headSequence);
  boolean ttlEnabled=ttlMs != TTL_DISABLED;
  if (ttlEnabled) {
    this.expirationPolicy=new RingbufferExpirationPolicy(capacity,ttlMs);
  }
  long now=System.currentTimeMillis();
  for (long seq=headSequence; seq <= tailSequence; seq++) {
    if (inMemoryFormat == BINARY) {
      ringbuffer.set(seq,in.readData());
    }
 else {
      ringbuffer.set(seq,in.readObject());
    }
    if (ttlEnabled) {
      long delta=in.readLong();
      expirationPolicy.setExpirationAt(seq,delta + now);
    }
  }
}
