{
  Node node=((FactoryImpl)hazelcast).node;
  DataInputStream dis=null;
  try {
    ByteArrayInputStream bais=new ByteArrayInputStream(bytesRecordSet);
    dis=new DataInputStream(new InflaterInputStream(bais));
    int size=dis.readInt();
    RecordSet recordSet=new RecordSet();
    for (int i=0; i < size; i++) {
      DataRecordEntry r=new DataRecordEntry();
      r.readData(dis);
      recordSet.addDataRecordEntry(r);
    }
    node.concurrentMapManager.getPartitionManager().doMigrate(partitionId,replicaIndex,recordSet,from);
    return Boolean.TRUE;
  }
 catch (  Throwable e) {
    Level level=Level.WARNING;
    if (e instanceof IllegalStateException) {
      level=Level.FINEST;
    }
    node.getLogger(MigrationTask.class.getName()).log(level,e.getMessage(),e);
  }
 finally {
    IOUtil.closeResource(dis);
  }
  return Boolean.FALSE;
}
