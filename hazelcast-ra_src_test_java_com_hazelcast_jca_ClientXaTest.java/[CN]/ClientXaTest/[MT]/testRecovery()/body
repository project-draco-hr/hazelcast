{
  final HazelcastInstance instance1=Hazelcast.newHazelcastInstance();
  final HazelcastInstance instance2=Hazelcast.newHazelcastInstance();
  final HazelcastInstance instance3=Hazelcast.newHazelcastInstance();
  final HazelcastInstance client1=HazelcastClient.newHazelcastClient();
  final TransactionContext context1=client1.newTransactionContext(TransactionOptions.getDefault().setDurability(2));
  final XAResource xaResource1=context1.getXaResource();
  final MyXid myXid=new MyXid();
  xaResource1.start(myXid,0);
  final TransactionalMap<Object,Object> map=context1.getMap("map");
  map.put("key","value");
  xaResource1.prepare(myXid);
  client1.shutdown();
  assertNull(instance1.getMap("map").get("key"));
  final HazelcastInstance client2=HazelcastClient.newHazelcastClient();
  final TransactionContext context2=client2.newTransactionContext();
  final XAResource xaResource2=context2.getXaResource();
  final Xid[] recover=xaResource2.recover(0);
  for (  Xid xid : recover) {
    xaResource2.commit(xid,false);
  }
  assertEquals("value",instance1.getMap("map").get("key"));
  try {
    context1.rollbackTransaction();
  }
 catch (  Throwable ignored) {
  }
}
