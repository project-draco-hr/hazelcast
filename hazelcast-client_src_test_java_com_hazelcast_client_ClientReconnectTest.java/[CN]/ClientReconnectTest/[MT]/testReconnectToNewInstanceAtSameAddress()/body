{
  HazelcastInstance instance=hazelcastFactory.newHazelcastInstance();
  Address localAddress=((MemberImpl)instance.getCluster().getLocalMember()).getAddress();
  final HazelcastInstance client=hazelcastFactory.newHazelcastClient();
  final CountDownLatch memberRemovedLatch=new CountDownLatch(1);
  client.getCluster().addMembershipListener(new MembershipAdapter(){
    @Override public void memberRemoved(    MembershipEvent membershipEvent){
      memberRemovedLatch.countDown();
    }
  }
);
  instance.shutdown();
  final HazelcastInstance instance2=hazelcastFactory.newHazelcastInstance(localAddress);
  assertOpenEventually(memberRemovedLatch);
  assertTrueEventually(new AssertTask(){
    @Override public void run() throws Exception {
      assertEquals(1,client.getCluster().getMembers().size());
      Iterator<Member> iterator=client.getCluster().getMembers().iterator();
      Member member=iterator.next();
      assertEquals(instance2.getCluster().getLocalMember(),member);
    }
  }
);
}
