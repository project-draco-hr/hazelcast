{
  Boolean includeValue=true;
  HazelcastClient client=mock(HazelcastClient.class);
  ListenerManager listenerManager=mock(ListenerManager.class);
  ItemListenerManager itemListenerManager=mock(ItemListenerManager.class);
  when(listenerManager.getItemListenerManager()).thenReturn(itemListenerManager);
  when(client.getListenerManager()).thenReturn(listenerManager);
  when(client.getOutRunnable()).thenReturn(new OutRunnable(client,new HashMap(),new PacketWriter()));
  String name="def";
  ProxyHelper proxyHelper=mock(ProxyHelper.class);
  when(proxyHelper.getHazelcastClient()).thenReturn(client);
  Packet request=new Packet();
  request.setName(name);
  request.setOperation(ClusterOperation.ADD_LISTENER);
  when(proxyHelper.createCall(request)).thenReturn(new Call(1,request));
  when(proxyHelper.createRequestPacket(ClusterOperation.ADD_LISTENER,null,null)).thenReturn(request);
  CollectionClientProxy proxy=new SetClientProxy(proxyHelper,name);
  ItemListener listener=new ItemListener(){
    public void itemAdded(    Object item){
    }
    public void itemRemoved(    Object item){
    }
  }
;
  proxy.addItemListener(listener,includeValue);
  verify(itemListenerManager).registerItemListener(name,listener);
  verify(proxyHelper).doCall(argThat(new CallMatcher()));
}
