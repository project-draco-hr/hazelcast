{
  int tryCount=0;
  while (!joined) {
    try {
      logger.log(Level.FINEST,"joining... " + masterAddress);
      masterAddress=null;
      masterAddress=findMaster();
      if (masterAddress == null) {
        if (masterAddress == null || masterAddress.equals(address)) {
          TcpIpConfig tcpIpConfig=config.getNetworkConfig().getJoin().getTcpIpConfig();
          if (tcpIpConfig != null && tcpIpConfig.isEnabled()) {
            masterAddress=null;
            logger.log(Level.FINEST,"Multicast couldn't find cluster. Trying TCP/IP");
            joinWithTCP();
          }
 else {
            setAsMaster();
          }
          return;
        }
      }
      if (tryCount++ > 20) {
        StringBuilder sb=new StringBuilder();
        sb.append("\n");
        sb.append("===========================");
        sb.append("\n");
        sb.append("Couldn't connect to discovered master! tryCount: ").append(tryCount);
        sb.append("\n");
        sb.append("thisAddress: ").append(address);
        sb.append("\n");
        sb.append("masterAddress: ").append(masterAddress);
        sb.append("\n");
        sb.append("connection: ").append(connectionManager.getConnection(masterAddress));
        sb.append("===========================");
        sb.append("\n");
        logger.log(Level.WARNING,sb.toString());
        tryCount=0;
      }
      if (!masterAddress.equals(address)) {
        connectAndSendJoinRequest(masterAddress);
      }
 else {
        masterAddress=null;
        tryCount=0;
      }
      Thread.sleep(500L);
    }
 catch (    final Exception e) {
      logger.log(Level.FINEST,"multicast join",e);
    }
  }
}
