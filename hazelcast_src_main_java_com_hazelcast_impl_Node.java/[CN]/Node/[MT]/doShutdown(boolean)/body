{
  long start=System.currentTimeMillis();
  logger.log(Level.FINE,"** we are being asked to shutdown when active = " + String.valueOf(active));
  if (!force && isActive()) {
    final int maxWaitSeconds=groupProperties.GRACEFUL_SHUTDOWN_MAX_WAIT.getInteger();
    int waitSeconds=0;
    do {
      try {
        Thread.sleep(1000);
      }
 catch (      InterruptedException e) {
      }
    }
 while (concurrentMapManager.partitionManager.hasActiveBackupTask() && ++waitSeconds < maxWaitSeconds);
    if (waitSeconds >= maxWaitSeconds) {
      logger.log(Level.WARNING,"Graceful shutdown could not be completed in " + maxWaitSeconds + " seconds!");
    }
  }
  if (isActive()) {
    joined.set(false);
    setActive(false);
    wanReplicationService.shutdown();
    try {
      Runtime.getRuntime().removeShutdownHook(shutdownHookThread);
    }
 catch (    Throwable ignored) {
    }
    if (managementCenterService != null) {
      managementCenterService.shutdown();
    }
    logger.log(Level.FINEST,"Shutting down the clientService");
    clientService.shutdown();
    logger.log(Level.FINEST,"Shutting down the cluster service");
    concurrentMapManager.shutdown();
    clusterService.stop();
    logger.log(Level.FINEST,"Shutting down the query service");
    if (multicastService != null) {
      multicastService.stop();
    }
    logger.log(Level.FINEST,"Shutting down the connection manager");
    connectionManager.shutdown();
    logger.log(Level.FINEST,"Shutting down the concurrentMapManager");
    logger.log(Level.FINEST,"Shutting down the executorManager");
    executorManager.stop();
    textCommandService.stop();
    masterAddress=null;
    if (securityContext != null) {
      securityContext.destroy();
    }
    initializer.destroy();
    logger.log(Level.FINEST,"Shutting down the cluster manager");
    int numThreads=threadGroup.activeCount();
    Thread[] threads=new Thread[numThreads * 2];
    numThreads=threadGroup.enumerate(threads,false);
    for (int i=0; i < numThreads; i++) {
      Thread thread=threads[i];
      logger.log(Level.FINEST,"Shutting down thread " + thread.getName());
      thread.interrupt();
    }
    logger.log(Level.INFO,"Hazelcast Shutdown is completed in " + (System.currentTimeMillis() - start) + " ms.");
    failedConnections.clear();
    serviceThreadPacketQueue.clear();
  }
}
