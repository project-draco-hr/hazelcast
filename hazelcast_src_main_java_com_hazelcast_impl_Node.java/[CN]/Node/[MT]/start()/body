{
  logger.log(Level.FINEST,"We are asked to start and completelyShutdown is " + String.valueOf(completelyShutdown));
  if (completelyShutdown)   return;
  serviceThread=clusterService.getServiceThread();
  serviceThread.setPriority(groupProperties.SERVICE_THREAD_PRIORITY.getInteger());
  logger.log(Level.FINEST,"Starting thread " + serviceThread.getName());
  serviceThread.start();
  connectionManager.start();
  if (config.getNetworkConfig().getJoin().getMulticastConfig().isEnabled()) {
    final Thread multicastServiceThread=new Thread(threadGroup,multicastService,getThreadNamePrefix("MulticastThread"));
    multicastServiceThread.start();
  }
  setActive(true);
  if (!completelyShutdown) {
    logger.log(Level.FINEST,"Adding ShutdownHook");
    Runtime.getRuntime().addShutdownHook(shutdownHookThread);
  }
  logger.log(Level.FINEST,"finished starting threads, calling join");
  join();
  int clusterSize=clusterImpl.getMembers().size();
  if (address.getPort() >= config.getPort() + clusterSize) {
    StringBuilder sb=new StringBuilder("Config seed port is ");
    sb.append(config.getPort());
    sb.append(" and cluster size is ");
    sb.append(clusterSize);
    sb.append(". Some of the ports seem occupied!");
    logger.log(Level.WARNING,sb.toString());
  }
  try {
    managementCenterService=new ManagementCenterService(factory);
  }
 catch (  Exception e) {
    logger.log(Level.SEVERE,"ManagementCenterService could not be constructed!",e);
  }
  if (groupProperties.MANCENTER_ENABLED.getBoolean() && config.getManagementCenterConfig() != null && config.getManagementCenterConfig().isEnabled()) {
    try {
      managementCenterService.start();
    }
 catch (    Exception e) {
      logger.log(Level.SEVERE,"ManagementCenterService could not be started!",e);
    }
  }
  initializer.afterInitialize(this);
}
