{
  Set<ScheduledEntry<K,V>> res=new HashSet<ScheduledEntry<K,V>>(keys.size());
  Set<TimeKey> candidateKeys=new HashSet<TimeKey>();
  Set<Data> processedKeys=new HashSet<Data>();
  for (  Object key : keys) {
    for (    Object skey : secondsOfKeys.keySet()) {
      TimeKey timeKey=(TimeKey)skey;
      if (key.equals(timeKey.getKey())) {
        candidateKeys.add(timeKey);
      }
    }
  }
  for (  TimeKey timeKey : candidateKeys) {
    final Integer second=secondsOfKeys.remove(timeKey);
    if (second != null) {
      final ConcurrentMap<Object,ScheduledEntry<K,V>> entries=scheduledEntries.get(second);
      if (entries != null) {
        res.add(entries.remove(timeKey));
        processedKeys.add((Data)timeKey.getKey());
      }
    }
  }
  entryProcessor.process(this,res);
  return processedKeys;
}
