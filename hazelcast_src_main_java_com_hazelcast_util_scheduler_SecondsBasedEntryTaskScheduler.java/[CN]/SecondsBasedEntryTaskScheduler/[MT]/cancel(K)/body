{
  ScheduledEntry<K,V> result;
  if (scheduleType.equals(ScheduleType.FOR_EACH)) {
    return cancelComparingTimeKey(key);
  }
  final Integer second=secondsOfKeys.remove(key);
  if (second == null) {
    return null;
  }
  final ConcurrentMap<Object,ScheduledEntry<K,V>> entries=scheduledEntries.get(second);
  if (entries == null) {
    return null;
  }
  result=entries.remove(key);
  if (entries.isEmpty()) {
    scheduledEntries.remove(second);
    ScheduledFuture removed=scheduledTaskMap.remove(second);
    if (removed != null) {
      removed.cancel(false);
    }
  }
  return result;
}
