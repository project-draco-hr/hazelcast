{
  this.ioService=ioService;
  this.threadingModel=tcpIpConnectionThreadingModel;
  this.serverSocketChannel=serverSocketChannel;
  this.loggingService=loggingService;
  this.logger=loggingService.getLogger(TcpIpConnectionManager.class);
  this.socketReceiveBufferSize=ioService.getSocketReceiveBufferSize() * IOService.KILO_BYTE;
  this.socketSendBufferSize=ioService.getSocketSendBufferSize() * IOService.KILO_BYTE;
  this.socketClientReceiveBufferSize=ioService.getSocketClientReceiveBufferSize() * IOService.KILO_BYTE;
  this.socketClientSendBufferSize=ioService.getSocketClientSendBufferSize() * IOService.KILO_BYTE;
  this.socketLingerSeconds=ioService.getSocketLingerSeconds();
  this.socketConnectTimeoutSeconds=ioService.getSocketConnectTimeoutSeconds();
  this.socketKeepAlive=ioService.getSocketKeepAlive();
  this.socketNoDelay=ioService.getSocketNoDelay();
  final Collection<Integer> ports=ioService.getOutboundPorts();
  this.outboundPortCount=ports.size();
  this.outboundPorts.addAll(ports);
  this.socketChannelWrapperFactory=ioService.getSocketChannelWrapperFactory();
  metricsRegistry.scanAndRegister(this,"tcp.connection");
}
