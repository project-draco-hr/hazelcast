{
  this.ioService=ioService;
  this.serverSocketChannel=serverSocketChannel;
  this.logger=ioService.getLogger(TcpIpConnectionManager.class.getName());
  this.socketReceiveBufferSize=ioService.getSocketReceiveBufferSize() * IOService.KILO_BYTE;
  this.socketSendBufferSize=ioService.getSocketSendBufferSize() * IOService.KILO_BYTE;
  this.socketLingerSeconds=ioService.getSocketLingerSeconds();
  this.socketConnectTimeoutSeconds=ioService.getSocketConnectTimeoutSeconds();
  this.socketKeepAlive=ioService.getSocketKeepAlive();
  this.socketNoDelay=ioService.getSocketNoDelay();
  this.selectorThreadCount=ioService.getSelectorThreadCount();
  this.inSelectors=new InSelectorImpl[selectorThreadCount];
  this.outSelectors=new OutSelectorImpl[selectorThreadCount];
  final Collection<Integer> ports=ioService.getOutboundPorts();
  this.outboundPortCount=ports == null ? 0 : ports.size();
  if (ports != null) {
    outboundPorts.addAll(ports);
  }
  this.socketChannelWrapperFactory=ioService.getSocketChannelWrapperFactory();
  this.portableContext=ioService.getPortableContext();
  this.selectorImbalanceWorkaroundEnabled=isSelectorImbalanceEnabled();
  this.selectorIndexPerHostMap=selectorImbalanceWorkaroundEnabled ? new HashMap<String,Integer>() : null;
}
