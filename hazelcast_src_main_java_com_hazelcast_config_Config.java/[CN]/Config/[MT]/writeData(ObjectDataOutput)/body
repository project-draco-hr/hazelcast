{
  getGroupConfig().writeData(out);
  boolean hasMapConfigs=mapConfigs != null && !mapConfigs.isEmpty();
  boolean hasExecutors=executorConfigs != null && !executorConfigs.isEmpty();
  boolean hasTopicConfigs=topicConfigs != null && !topicConfigs.isEmpty();
  boolean hasQueueConfigs=queueConfigs != null && !queueConfigs.isEmpty();
  boolean hasSemaphoreConfigs=semaphoreConfigs != null && !semaphoreConfigs.isEmpty();
  boolean hasProperties=properties != null && !properties.isEmpty();
  out.writeByte(ByteUtil.toByte(checkCompatibility,liteMember));
  out.writeByte(ByteUtil.toByte(hasMapConfigs,hasExecutors,hasTopicConfigs,hasQueueConfigs,hasSemaphoreConfigs,hasProperties));
  networkConfig.writeData(out);
  if (hasMapConfigs) {
    out.writeInt(mapConfigs.size());
    for (    final Entry<String,MapConfig> entry : mapConfigs.entrySet()) {
      final String name=entry.getKey();
      final MapConfig mapConfig=entry.getValue();
      mapConfig.setName(name);
      mapConfig.writeData(out);
    }
  }
  if (hasExecutors) {
    out.writeInt(executorConfigs.size());
    for (    final Entry<String,ExecutorConfig> entry : executorConfigs.entrySet()) {
      final String name=entry.getKey();
      final ExecutorConfig executorConfig=entry.getValue();
      executorConfig.setName(name);
      executorConfig.writeData(out);
    }
  }
  if (hasQueueConfigs) {
    out.writeInt(queueConfigs.size());
    for (    final Entry<String,QueueConfig> entry : queueConfigs.entrySet()) {
      final String name=entry.getKey();
      final QueueConfig queueConfig=entry.getValue();
      queueConfig.setName(name);
      queueConfig.writeData(out);
    }
  }
  if (hasTopicConfigs) {
    out.writeInt(topicConfigs.size());
    for (    final Entry<String,TopicConfig> entry : topicConfigs.entrySet()) {
      final String name=entry.getKey();
      final TopicConfig topicConfig=entry.getValue();
      topicConfig.setName(name);
      topicConfig.writeData(out);
    }
  }
  if (hasProperties) {
    out.writeInt(properties.size());
    for (    final Entry<Object,Object> entry : properties.entrySet()) {
      final String key=(String)entry.getKey();
      final String value=(String)entry.getValue();
      out.writeUTF(key);
      out.writeUTF(value);
    }
  }
}
