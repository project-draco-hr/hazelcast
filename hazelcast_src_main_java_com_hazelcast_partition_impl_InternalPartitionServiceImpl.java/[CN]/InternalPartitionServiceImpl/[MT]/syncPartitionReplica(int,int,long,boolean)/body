{
  if (replicaIndex < 0 || replicaIndex > InternalPartition.MAX_REPLICA_COUNT) {
    throw new IllegalArgumentException("Invalid replica index: " + replicaIndex);
  }
  final InternalPartitionImpl partitionImpl=getPartition(partitionId);
  final Address target=partitionImpl.getOwner();
  if (target != null) {
    if (target.equals(nodeEngine.getThisAddress())) {
      if (force) {
        throw new IllegalStateException("Replica target cannot be this node -> partitionId: " + partitionId + ", replicaIndex: "+ replicaIndex+ ", partition-info: "+ partitionImpl);
      }
 else {
        if (logger.isFinestEnabled()) {
          logger.finest("This node is now owner of partition, cannot sync replica -> partitionId: " + partitionId + ", replicaIndex: "+ replicaIndex+ ", partition-info: "+ partitionImpl);
        }
        return;
      }
    }
    final ReplicaSyncRequest syncRequest=new ReplicaSyncRequest();
    syncRequest.setPartitionId(partitionId).setReplicaIndex(replicaIndex);
    final ReplicaSyncInfo currentSyncInfo=replicaSyncRequests.get(partitionId);
    final ReplicaSyncInfo syncInfo=new ReplicaSyncInfo(partitionId,replicaIndex,target);
    boolean sendRequest=false;
    if (currentSyncInfo == null) {
      sendRequest=replicaSyncRequests.compareAndSet(partitionId,null,syncInfo);
    }
 else     if (currentSyncInfo.requestTime < (Clock.currentTimeMillis() - 10000) || nodeEngine.getClusterService().getMember(currentSyncInfo.target) == null) {
      sendRequest=replicaSyncRequests.compareAndSet(partitionId,currentSyncInfo,syncInfo);
    }
 else     if (force) {
      replicaSyncRequests.set(partitionId,syncInfo);
      sendRequest=true;
    }
    if (sendRequest) {
      if (logger.isFinestEnabled()) {
        logger.finest("Sending sync replica request to -> " + target + "; for partition: "+ partitionId+ ", replica: "+ replicaIndex);
      }
      replicaSyncScheduler.cancel(partitionId);
      if (delayMillis <= 0) {
        replicaSyncScheduler.schedule(DEFAULT_REPLICA_SYNC_DELAY,partitionId,syncInfo);
        nodeEngine.getOperationService().send(syncRequest,target);
      }
 else {
        replicaSyncScheduler.schedule(delayMillis,partitionId,syncInfo);
      }
    }
  }
 else {
    logger.warning("Sync replica target is null, no need to sync -> partition: " + partitionId + ", replica: "+ replicaIndex);
  }
}
