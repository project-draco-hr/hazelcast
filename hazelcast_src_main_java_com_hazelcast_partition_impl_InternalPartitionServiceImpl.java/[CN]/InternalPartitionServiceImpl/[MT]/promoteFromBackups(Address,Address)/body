{
  for (  InternalPartitionImpl partition : partitions) {
    boolean promote=false;
    if (deadAddress.equals(partition.getOwnerOrNull()) && thisAddress.equals(partition.getReplicaAddress(1))) {
      promote=true;
      partition.setMigrating(true);
    }
    partition.onDeadAddress(deadAddress);
    if (partition.onDeadAddress(deadAddress)) {
      throw new IllegalStateException("Duplicate address found in partition replicas!");
    }
    if (promote) {
      final Operation op=new PromoteFromBackupOperation();
      op.setPartitionId(partition.getPartitionId()).setNodeEngine(nodeEngine).setValidateTarget(false).setService(this);
      nodeEngine.getOperationService().executeOperation(op);
      MigrationInfo migrationInfo=new MigrationInfo(partition.getPartitionId(),null,partition.getOwnerOrNull());
      sendMigrationEvent(migrationInfo,MigrationStatus.STARTED);
      sendMigrationEvent(migrationInfo,MigrationStatus.COMPLETED);
    }
  }
}
