{
  if (!initialized) {
    return true;
  }
  if (getMemberGroupsSize() < 2) {
    return true;
  }
  final Address thisAddress=node.getThisAddress();
  final Semaphore s=new Semaphore(0);
  final AtomicBoolean ok=new AtomicBoolean(true);
  final Callback<Object> callback=new Callback<Object>(){
    @Override public void notify(    Object object){
      if (Boolean.FALSE.equals(object)) {
        ok.compareAndSet(true,false);
      }
 else       if (object instanceof Throwable) {
        ok.compareAndSet(true,false);
      }
      s.release();
    }
  }
;
  int notOwnedCount=syncReplicaVersion(thisAddress,s,ok,callback);
  s.release(notOwnedCount);
  try {
    if (ok.get()) {
      return s.tryAcquire(partitionCount,DEFAULT_SLEEP_MILLIS,TimeUnit.SECONDS) && ok.get();
    }
 else {
      return false;
    }
  }
 catch (  InterruptedException ignored) {
    return false;
  }
}
