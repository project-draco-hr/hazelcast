{
  if (!node.isActive() || !node.isMaster()) {
    return;
  }
  final MigrationRequestOperation migrationRequestOp=new MigrationRequestOperation(migrationInfo);
  try {
    MigrationInfo info=migrationInfo;
    InternalPartitionImpl partition=partitions[info.getPartitionId()];
    Address owner=partition.getOwnerOrNull();
    if (owner == null) {
      logger.severe("ERROR: partition owner is not set! -> " + partition + " -VS- "+ info);
      return;
    }
    if (!owner.equals(info.getSource())) {
      logger.severe("ERROR: partition owner is not the source of migration! -> " + partition + " -VS- "+ info+ " found owner:"+ owner);
      return;
    }
    sendMigrationEvent(migrationInfo,MigrationStatus.STARTED);
    Boolean result;
    MemberImpl fromMember=getMember(migrationInfo.getSource());
    if (logger.isFinestEnabled()) {
      logger.finest("Started Migration : " + migrationInfo);
    }
    if (fromMember == null) {
      logger.warning("Partition is lost! Assign new owner and exit...");
      result=Boolean.TRUE;
    }
 else {
      result=executeMigrateOperation(migrationRequestOp,fromMember);
    }
    processMigrationResult(result);
  }
 catch (  Throwable t) {
    final Level level=migrationInfo.isValid() ? Level.WARNING : Level.FINEST;
    logger.log(level,"Error [" + t.getClass() + ": "+ t.getMessage()+ "] while executing "+ migrationRequestOp);
    logger.finest(t);
    migrationTaskFailed();
  }
}
