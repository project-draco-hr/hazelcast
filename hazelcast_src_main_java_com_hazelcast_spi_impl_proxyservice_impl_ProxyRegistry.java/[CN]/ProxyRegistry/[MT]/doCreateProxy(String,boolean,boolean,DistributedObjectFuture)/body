{
  DistributedObject proxy;
  try {
    proxy=service.createDistributedObject(name);
    if (initialize && proxy instanceof InitializingObject) {
      try {
        ((InitializingObject)proxy).initialize();
      }
 catch (      Exception e) {
        proxyService.logger.warning("Error while initializing proxy: " + proxy,e);
      }
    }
    proxyFuture.set(proxy);
  }
 catch (  Throwable e) {
    proxyFuture.setError(e);
    proxies.remove(name);
    throw ExceptionUtil.rethrow(e);
  }
  InternalEventService eventService=proxyService.nodeEngine.getEventService();
  ProxyEventProcessor callback=new ProxyEventProcessor(proxyService.listeners.values(),CREATED,serviceName,name,proxy);
  eventService.executeEventCallback(callback);
  if (publishEvent) {
    publish(new DistributedObjectEventPacket(CREATED,serviceName,name));
  }
  return proxyFuture;
}
