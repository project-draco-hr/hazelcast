{
  this.name=name;
  disclosurePanel=new DisclosurePanel("Map Browser");
  verticalPanel=new VerticalPanel();
  AbsolutePanel absolutePanel=new AbsolutePanel();
  verticalPanel.add(absolutePanel);
  absolutePanel.addStyleName("img-shadow");
  absolutePanel.addStyleName("table");
  FlexTable table=new FlexTable();
  table.addStyleName("table");
  table.addStyleName("mapstats");
  FlexTable getTable=new FlexTable();
  table.setWidget(0,0,new Label(""));
  table.getFlexCellFormatter().setColSpan(0,0,2);
  table.setWidget(1,1,getTable);
  absolutePanel.add(table);
  disclosurePanel.add(verticalPanel);
  final TextBox key=new TextBox();
  getTable.setWidget(0,0,new Label("Key: "));
  getTable.setWidget(0,1,key);
  Button button=new Button("Get");
  button.addStyleName("map_get_button");
  getTable.setWidget(0,2,button);
  FlexTable resultTable=new FlexTable();
  resultTable.setWidth("500px");
  table.setWidget(1,2,resultTable);
  resultTable.setWidget(0,0,new Label("Value: "));
  resultTable.setWidget(1,0,new Label("Hits: "));
  resultTable.setWidget(2,0,new Label("Cost: "));
  resultTable.setWidget(3,0,new Label("Valid: "));
  resultTable.setWidget(4,0,new Label("Expiration Time: "));
  resultTable.setWidget(5,0,new Label("Last Acess Time: "));
  resultTable.setWidget(6,0,new Label("Last Update Time: "));
  resultTable.setWidget(7,0,new Label("Creation Time: "));
  for (int i=0; i < resultTable.getRowCount(); i++) {
    Label label=(Label)resultTable.getWidget(i,0);
    label.addStyleName("bold");
    if (i % 2 == 1) {
      resultTable.getRowFormatter().addStyleName(i,"mapstatsEvenRow");
    }
  }
  final TextArea value=new TextArea();
  final Label hits=new Label();
  final Label cost=new Label();
  final Label expirationTime=new Label();
  final Label lastAcessTime=new Label();
  final Label lastUpdateTime=new Label();
  final Label creationTime=new Label();
  final Label valid=new Label();
  resultTable.setWidget(0,1,value);
  resultTable.setWidget(1,1,hits);
  resultTable.setWidget(2,1,cost);
  resultTable.setWidget(3,1,valid);
  resultTable.setWidget(4,1,expirationTime);
  resultTable.setWidget(5,1,lastAcessTime);
  resultTable.setWidget(6,1,lastUpdateTime);
  resultTable.setWidget(7,1,creationTime);
  final DateTimeFormat dateFormatter=DateTimeFormat.getFormat("yyyy.MM.dd HH:mm:ss");
  button.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent clickEvent){
      mapService.get(clusterWidgets.clusterId,name,key.getText(),new AsyncCallback<MapEntry>(){
        public void onFailure(        Throwable throwable){
          if (throwable instanceof ClientDisconnectedException) {
            clusterWidgets.disconnected();
          }
          value.setText(throwable.toString());
        }
        public void onSuccess(        MapEntry mapEntry){
          value.setText((mapEntry == null) ? "null" : mapEntry.getValue());
          hits.setText((mapEntry == null) ? "" : String.valueOf(mapEntry.getHits()));
          cost.setText((mapEntry == null) ? "" : formatMemorySize(mapEntry.getCost()));
          valid.setText((mapEntry == null) ? "" : String.valueOf(mapEntry.isValid()));
          expirationTime.setText((mapEntry == null) ? "" : format(dateFormatter,mapEntry.getExpirationTime()));
          lastAcessTime.setText((mapEntry == null) ? "" : format(dateFormatter,mapEntry.getLastAccessTime()));
          lastUpdateTime.setText((mapEntry == null) ? "" : format(dateFormatter,mapEntry.getLastUpdateTime()));
          creationTime.setText((mapEntry == null) ? "" : format(dateFormatter,mapEntry.getCreationTime()));
        }
      }
);
    }
  }
);
}
