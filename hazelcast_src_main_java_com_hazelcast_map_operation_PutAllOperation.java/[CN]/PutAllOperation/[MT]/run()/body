{
  backupEntrySet=new MapEntrySet();
  int partitionId=getPartitionId();
  RecordStore recordStore=mapService.getRecordStore(partitionId,name);
  Set<Map.Entry<Data,Data>> entries=entrySet.getEntrySet();
  PartitionService partitionService=getNodeEngine().getPartitionService();
  for (  Map.Entry<Data,Data> entry : entries) {
    Data dataKey=entry.getKey();
    Data dataValue=entry.getValue();
    if (partitionId == partitionService.getPartitionId(dataKey)) {
      Data dataOldValue=null;
      if (initialLoad) {
        recordStore.putFromLoad(dataKey,dataValue,-1);
      }
 else {
        dataOldValue=mapService.toData(recordStore.put(dataKey,dataValue,-1));
      }
      mapService.interceptAfterPut(name,dataValue);
      EntryEventType eventType=dataOldValue == null ? EntryEventType.ADDED : EntryEventType.UPDATED;
      mapService.publishEvent(getCallerAddress(),name,eventType,dataKey,dataOldValue,dataValue);
      invalidateNearCaches(dataKey);
      if (mapContainer.getWanReplicationPublisher() != null && mapContainer.getWanMergePolicy() != null) {
        SimpleEntryView entryView=new SimpleEntryView(dataKey,mapService.toData(dataValue),recordStore.getRecords().get(dataKey));
        mapService.publishWanReplicationUpdate(name,entryView);
      }
      backupEntrySet.add(entry);
    }
  }
}
