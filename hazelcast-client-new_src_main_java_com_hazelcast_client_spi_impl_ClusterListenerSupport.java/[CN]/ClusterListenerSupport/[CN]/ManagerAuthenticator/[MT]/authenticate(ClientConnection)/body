{
  final SerializationService ss=client.getSerializationService();
  String uuid="";
  String ownerUuid="";
  if (principal != null) {
    uuid=principal.getUuid();
    ownerUuid=principal.getOwnerUuid();
  }
  ClientMessage clientMessage;
  if (credentials instanceof UsernamePasswordCredentials) {
    UsernamePasswordCredentials cr=(UsernamePasswordCredentials)credentials;
    clientMessage=AuthenticationParameters.encode(cr.getUsername(),cr.getPassword(),uuid,ownerUuid,true);
  }
 else {
    Data data=ss.toData(credentials);
    clientMessage=AuthenticationCustomCredentialsParameters.encode(data.toByteArray(),uuid,ownerUuid,true);
  }
  connection.init();
  ClientMessage response;
  final ClientInvocation clientInvocation=new ClientInvocation(client,clientMessage,connection);
  final Future<ClientMessage> future=clientInvocation.invoke();
  try {
    response=ss.toObject(future.get());
  }
 catch (  Exception e) {
    throw ExceptionUtil.rethrow(e,IOException.class);
  }
  AuthenticationResultParameters resultParameters=AuthenticationResultParameters.decode(response);
  connection.setRemoteEndpoint(resultParameters.address);
  principal=new ClientPrincipal(resultParameters.uuid,resultParameters.ownerUuid);
}
