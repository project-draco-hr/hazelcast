{
  NodeEngineImpl nodeEngine=operationService.nodeEngine;
  for (  Map.Entry<Address,Future> response : futures.entrySet()) {
    try {
      Future future=response.getValue();
      PartitionResponse result=(PartitionResponse)nodeEngine.toObject(future.get());
      result.addResults(partitionResults);
    }
 catch (    Throwable t) {
      if (operationService.logger.isFinestEnabled()) {
        operationService.logger.finest(t);
      }
 else {
        operationService.logger.warning(t.getMessage());
      }
      List<Integer> partitions=memberPartitions.get(response.getKey());
      for (      Integer partition : partitions) {
        partitionResults.put(partition,t);
      }
    }
  }
}
