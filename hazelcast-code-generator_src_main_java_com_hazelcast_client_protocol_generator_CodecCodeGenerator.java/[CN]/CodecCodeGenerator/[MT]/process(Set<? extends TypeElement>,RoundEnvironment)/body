{
  try {
    TypeElement genCodecElement=elementUtils.getTypeElement("com.hazelcast.annotation.GenerateCodec");
    TypeElement codecElement=elementUtils.getTypeElement("com.hazelcast.annotation.Codec");
    if (!elements.contains(genCodecElement) || !elements.contains(codecElement)) {
      return false;
    }
    for (    Element element : env.getElementsAnnotatedWith(Codec.class)) {
      TypeElement classElement=(TypeElement)element;
      classElement.getAnnotationMirrors();
      Codec annotation=classElement.getAnnotation(Codec.class);
      if (annotation != null) {
        try {
          annotation.value();
        }
 catch (        MirroredTypeException mte) {
          TypeMirror value=mte.getTypeMirror();
          CodecModel.CUSTOM_CODEC_MAP.put(value.toString(),classElement);
        }
      }
    }
    for (    Element element : env.getElementsAnnotatedWith(GenerateCodec.class)) {
      register((TypeElement)element);
    }
    for (    Lang lang : codecTemplateMap.keySet()) {
      generateContent(lang);
    }
  }
 catch (  Exception e) {
    messager.printMessage(Diagnostic.Kind.ERROR,e.getMessage());
    e.printStackTrace();
  }
  return true;
}
