{
  Map model=new TreeMap<TypeElement,Map<Integer,CodecModel>>(new DistributedObjectComparator());
  for (  Map.Entry<TypeElement,Map<Integer,ExecutableElement>> entry : requestMap.entrySet()) {
    Map<Integer,CodecModel> map=new TreeMap<Integer,CodecModel>();
    TypeElement parent=entry.getKey();
    model.put(parent,map);
    Map<Integer,ExecutableElement> operationMap=entry.getValue();
    for (    Map.Entry<Integer,ExecutableElement> entrySub : operationMap.entrySet()) {
      ExecutableElement methodElement=entrySub.getValue();
      CodecModel codecModel=createCodecModel(methodElement,lang);
      String docComment=elementUtils.getDocComment(methodElement);
      if (null != docComment) {
        codecModel.setComment(docComment);
      }
      map.put(entrySub.getKey(),codecModel);
    }
  }
  return model;
}
