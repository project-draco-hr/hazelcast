{
  if (delayedEntries == null || delayedEntries.isEmpty()) {
    return;
  }
  final List<DelayedEntry> entriesToProcess=new ArrayList<DelayedEntry>();
  StoreOperationType operationType=null;
  StoreOperationType previousOperationType;
  for (  final DelayedEntry<Data,Object> entry : delayedEntries) {
    previousOperationType=operationType;
    if (entry.getValue() == null) {
      operationType=StoreOperationType.DELETE;
    }
 else {
      operationType=StoreOperationType.WRITE;
    }
    if (previousOperationType != null && !previousOperationType.equals(operationType)) {
      final Collection<DelayedEntry> faileds=callHandler(entriesToProcess,previousOperationType);
      addToFaileds(faileds,failsPerPartition);
      entriesToProcess.clear();
    }
    entriesToProcess.add(entry);
  }
  final Collection<DelayedEntry> faileds=callHandler(entriesToProcess,operationType);
  addToFaileds(faileds,failsPerPartition);
  entriesToProcess.clear();
}
