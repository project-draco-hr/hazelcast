{
  if (!smartRouting) {
    target=ownerConnectionFuture.getOrWaitForCreation().getEndPoint();
  }
  Address address=addressTranslator.translate(target);
  if (address == null) {
    throw new IOException("Address is required!");
  }
  ClientConnection clientConnection=connections.get(target);
  if (clientConnection == null) {
    final Object lock=getLock(target);
synchronized (lock) {
      clientConnection=connections.get(target);
      if (clientConnection == null) {
        final ConnectionProcessor connectionProcessor=new ConnectionProcessor(address,authenticator,false);
        final ICompletableFuture<ClientConnection> future=executionService.submitInternal(connectionProcessor);
        try {
          clientConnection=future.get(connectionTimeout,TimeUnit.MILLISECONDS);
        }
 catch (        Exception e) {
          future.cancel(true);
          throw ExceptionUtil.rethrow(e,IOException.class);
        }
        ClientConnection current=connections.putIfAbsent(clientConnection.getRemoteEndpoint(),clientConnection);
        if (current != null) {
          clientConnection.close();
          clientConnection=current;
        }
      }
    }
  }
  return clientConnection;
}
