{
  if (!live) {
    throw new HazelcastException("ConnectionManager is not active!!!");
  }
  SocketChannel socketChannel=null;
  try {
    socketChannel=SocketChannel.open();
    Socket socket=socketChannel.socket();
    socket.setKeepAlive(socketOptions.isKeepAlive());
    socket.setTcpNoDelay(socketOptions.isTcpNoDelay());
    socket.setReuseAddress(socketOptions.isReuseAddress());
    if (socketOptions.getLingerSeconds() > 0) {
      socket.setSoLinger(true,socketOptions.getLingerSeconds());
    }
    int bufferSize=socketOptions.getBufferSize() * KILO_BYTE;
    if (bufferSize < 0) {
      bufferSize=DEFAULT_BUFFER_SIZE_BYTE;
    }
    socket.setSendBufferSize(bufferSize);
    socket.setReceiveBufferSize(bufferSize);
    socketChannel.socket().connect(address.getInetSocketAddress(),connectionTimeout);
    SocketChannelWrapper socketChannelWrapper=socketChannelWrapperFactory.wrapSocketChannel(socketChannel,true);
    final ClientConnection clientConnection=new ClientConnection(ClientConnectionManagerImpl.this,inSelector,outSelector,connectionIdGen.incrementAndGet(),socketChannelWrapper,executionService,invocationService);
    socketChannel.configureBlocking(true);
    if (socketInterceptor != null) {
      socketInterceptor.onConnect(socket);
    }
    authenticator.auth(clientConnection);
    socketChannel.configureBlocking(isBlock);
    socket.setSoTimeout(0);
    if (!isBlock) {
      clientConnection.getReadHandler().register();
    }
    return clientConnection;
  }
 catch (  Exception e) {
    if (socketChannel != null) {
      socketChannel.close();
    }
    throw ExceptionUtil.rethrow(e);
  }
}
